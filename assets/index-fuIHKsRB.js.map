{"version":3,"file":"index-fuIHKsRB.js","sources":["../../src/icons/DiscordIcon.jsx","../../src/icons/GithubIcon.jsx","../../src/icons/CoffeeIcon.jsx","../../src/components/MenuDrawer.jsx","../../src/lib/constants.ts","../../src/lib/gpuOptimizer.js","../../src/lib/utils.js","../../src/lib/characterConverter.js","../../src/lib/relicRollFixer.js","../../src/lib/relicAugmenter.js","../../src/lib/defaultForm.js","../../src/lib/saveState.js","../../src/lib/message.js","../../src/lib/db.js","../../src/components/HeaderText.js","../../src/components/optimizerTab/FormConditionalInputs.jsx","../../src/lib/assets.js","../../src/components/TooltipImage.jsx","../../src/lib/hint.jsx","../../src/lib/lightConeConditionals.jsx","../../src/lib/characterConditionals.jsx","../../src/lib/characterStats.js","../../src/lib/statCalculator.js","../../src/lib/optimizerTabController.js","../../src/lib/bufferPacker.js","../../src/lib/workerPool.js","../../src/lib/relicFilters.js","../../src/lib/optimizer.js","../../src/components/optimizerTab/FormRow.jsx","../../src/components/optimizerTab/FilterContainer.jsx","../../src/components/optimizerTab/FormCard.jsx","../../src/components/optimizerTab/OptimizerOptions.jsx","../../src/components/optimizerTab/FormStatRollSlider.jsx","../../src/components/VerticalDivider.jsx","../../src/components/optimizerTab/FormSetConditionals.jsx","../../src/components/OptimizerForm.jsx","../../src/lib/renderer.jsx","../../src/components/RelicPreview.jsx","../../src/lib/relicScorer.ts","../../src/components/OptimizerBuildPreview.jsx","../../src/components/optimizerTab/Sidebar.jsx","../../src/lib/gradient.js","../../src/components/OptimizerTab.jsx","../../src/lib/ocrParserFribbels1.js","../../src/lib/ocrParserKelz3.js","../../src/components/ImportTab.jsx","../../src/components/RelicModal.jsx","../../src/components/RelicFilterBar.jsx","../../src/components/RelicsTab.jsx","../../src/components/CharacterPreview.jsx","../../src/components/CharacterTab.jsx","../../src/components/ComingSoonTab.jsx","../../src/components/RelicScorerTab.jsx","../../src/components/GettingStartedTab.jsx","../../src/components/BetaTab.jsx","../../src/components/ScoringModal.jsx","../../src/components/Tabs.jsx","../../src/App.jsx","../../src/lib/dataParser.js","../../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Icon from '@ant-design/icons';\n\nconst IconSVG = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 -1 16 16\">\n  <path d=\"M13.545 2.907a13.227 13.227 0 0 0-3.257-1.011.05.05 0 0 0-.052.025c-.141.25-.297.577-.406.833a12.19 12.19 0 0 0-3.658 0 8.258 8.258 0 0 0-.412-.833.051.051 0 0 0-.052-.025c-1.125.194-2.22.534-3.257 1.011a.041.041 0 0 0-.021.018C.356 6.024-.213 9.047.066 12.032c.001.014.01.028.021.037a13.276 13.276 0 0 0 3.995 2.02.05.05 0 0 0 .056-.019c.308-.42.582-.863.818-1.329a.05.05 0 0 0-.01-.059.051.051 0 0 0-.018-.011 8.875 8.875 0 0 1-1.248-.595.05.05 0 0 1-.02-.066.051.051 0 0 1 .015-.019c.084-.063.168-.129.248-.195a.05.05 0 0 1 .051-.007c2.619 1.196 5.454 1.196 8.041 0a.052.052 0 0 1 .053.007c.08.066.164.132.248.195a.051.051 0 0 1-.004.085 8.254 8.254 0 0 1-1.249.594.05.05 0 0 0-.03.03.052.052 0 0 0 .003.041c.24.465.515.909.817 1.329a.05.05 0 0 0 .056.019 13.235 13.235 0 0 0 4.001-2.02.049.049 0 0 0 .021-.037c.334-3.451-.559-6.449-2.366-9.106a.034.034 0 0 0-.02-.019Zm-8.198 7.307c-.789 0-1.438-.724-1.438-1.612 0-.889.637-1.613 1.438-1.613.807 0 1.45.73 1.438 1.613 0 .888-.637 1.612-1.438 1.612m5.316 0c-.788 0-1.438-.724-1.438-1.612 0-.889.637-1.613 1.438-1.613.807 0 1.451.73 1.438 1.613 0 .888-.631 1.612-1.438 1.612\"/>\n</svg>\n\nexport const DiscordIcon = (props) => {\n  return <Icon component={IconSVG} {...props}/>\n}","import * as React from \"react\";\nimport Icon from '@ant-design/icons';\n\nconst IconSVG = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n  <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8\"/>\n</svg>\n\nexport const GithubIcon = (props) => {\n  return <Icon component={IconSVG} {...props}/>\n}","import * as React from \"react\";\nimport Icon from '@ant-design/icons';\n\nconst IconSVG = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n  <path fillRule=\"evenodd\" d=\"M.5 6a.5.5 0 0 0-.488.608l1.652 7.434A2.5 2.5 0 0 0 4.104 16h5.792a2.5 2.5 0 0 0 2.44-1.958l.131-.59a3 3 0 0 0 1.3-5.854l.221-.99A.5.5 0 0 0 13.5 6zM13 12.5a2.01 2.01 0 0 1-.316-.025l.867-3.898A2.001 2.001 0 0 1 13 12.5\"/>\n  <path d=\"m4.4.8-.003.004-.014.019a4.167 4.167 0 0 0-.204.31 2.327 2.327 0 0 0-.141.267c-.026.06-.034.092-.037.103v.004a.593.593 0 0 0 .091.248c.075.133.178.272.308.445l.01.012c.118.158.26.347.37.543.112.2.22.455.22.745 0 .188-.065.368-.119.494a3.31 3.31 0 0 1-.202.388 5.444 5.444 0 0 1-.253.382l-.018.025-.005.008-.002.002A.5.5 0 0 1 3.6 4.2l.003-.004.014-.019a4.149 4.149 0 0 0 .204-.31 2.06 2.06 0 0 0 .141-.267c.026-.06.034-.092.037-.103a.593.593 0 0 0-.09-.252A4.334 4.334 0 0 0 3.6 2.8l-.01-.012a5.099 5.099 0 0 1-.37-.543A1.53 1.53 0 0 1 3 1.5c0-.188.065-.368.119-.494.059-.138.134-.274.202-.388a5.446 5.446 0 0 1 .253-.382l.025-.035A.5.5 0 0 1 4.4.8m3 0-.003.004-.014.019a4.167 4.167 0 0 0-.204.31 2.327 2.327 0 0 0-.141.267c-.026.06-.034.092-.037.103v.004a.593.593 0 0 0 .091.248c.075.133.178.272.308.445l.01.012c.118.158.26.347.37.543.112.2.22.455.22.745 0 .188-.065.368-.119.494a3.31 3.31 0 0 1-.202.388 5.444 5.444 0 0 1-.253.382l-.018.025-.005.008-.002.002A.5.5 0 0 1 6.6 4.2l.003-.004.014-.019a4.149 4.149 0 0 0 .204-.31 2.06 2.06 0 0 0 .141-.267c.026-.06.034-.092.037-.103a.593.593 0 0 0-.09-.252A4.334 4.334 0 0 0 6.6 2.8l-.01-.012a5.099 5.099 0 0 1-.37-.543A1.53 1.53 0 0 1 6 1.5c0-.188.065-.368.119-.494.059-.138.134-.274.202-.388a5.446 5.446 0 0 1 .253-.382l.025-.035A.5.5 0 0 1 7.4.8m3 0-.003.004-.014.019a4.077 4.077 0 0 0-.204.31 2.337 2.337 0 0 0-.141.267c-.026.06-.034.092-.037.103v.004a.593.593 0 0 0 .091.248c.075.133.178.272.308.445l.01.012c.118.158.26.347.37.543.112.2.22.455.22.745 0 .188-.065.368-.119.494a3.198 3.198 0 0 1-.202.388 5.385 5.385 0 0 1-.252.382l-.019.025-.005.008-.002.002A.5.5 0 0 1 9.6 4.2l.003-.004.014-.019a4.149 4.149 0 0 0 .204-.31 2.06 2.06 0 0 0 .141-.267c.026-.06.034-.092.037-.103a.593.593 0 0 0-.09-.252A4.334 4.334 0 0 0 9.6 2.8l-.01-.012a5.099 5.099 0 0 1-.37-.543A1.53 1.53 0 0 1 9 1.5c0-.188.065-.368.119-.494.059-.138.134-.274.202-.388a5.446 5.446 0 0 1 .253-.382l.025-.035A.5.5 0 0 1 10.4.8\"/>\n</svg>\n\nexport const CoffeeIcon = (props) => {\n  return <Icon component={IconSVG} {...props}/>\n}","import React from 'react';\nimport { MenuOutlined } from '@ant-design/icons';\nimport { ConfigProvider, Menu, Typography } from 'antd';\nimport { DiscordIcon } from '../icons/DiscordIcon';\nimport { GithubIcon } from '../icons/GithubIcon';\nimport { CoffeeIcon } from '../icons/CoffeeIcon';\nimport PropTypes from \"prop-types\";\n\nfunction getItem(label, key, icon, children, type) {\n  return {\n    key,\n    icon,\n    children,\n    label,\n    type,\n  };\n}\nconst items = [\n  getItem('Menu', 'sub1', <MenuOutlined />, [\n    getItem('Optimizer', 'optimizer'),\n    getItem('Characters', 'characters'),\n    getItem('Relics', 'relics'),\n    getItem('Import / Save', 'import'),\n    getItem('Getting started', '#getting-started'),\n  ]),\n  getItem('Tools', 'sub2', <MenuOutlined />, [\n    getItem('Relic scorer', '#scorer'),\n    getItem('Coming soon', 'coming-soon'),\n  ]),\n  getItem('Links', 'sub4', <MenuOutlined />, [\n    getItem(\n      <Typography.Link href=\"https://discord.gg/rDmB4Un7qg\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <DiscordIcon style={{ marginRight: 5 }} /> Discord\n      </Typography.Link>,\n      'link discord',\n    ),\n    getItem(\n      <Typography.Link href=\"https://www.patreon.com/fribbels\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <CoffeeIcon style={{ marginRight: 5 }} /> Donate\n      </Typography.Link>,\n      'link donate',\n    ),\n    getItem(\n      <Typography.Link href=\"https://github.com/fribbels/hsr-optimizer\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <GithubIcon style={{ marginRight: 5 }} /> Github\n      </Typography.Link>,\n      'link github',\n    ),\n  ]),\n];\n\nconst MenuDrawer = (props) => {\n  const { hashes } = props\n\n  const activeKey = window.store(s => s.activeKey)\n  const setActiveKey = window.store(s => s.setActiveKey)\n\n  const onClick = (e) => {\n    if (e.key && e.key.includes('link')) return\n\n    if (hashes.includes(e.key)) {\n      history.replaceState(null, null, e.key)\n    } else {\n      history.replaceState(null, null, ' ');\n    }\n    setActiveKey(e.key)\n  };\n\n  return (\n    <ConfigProvider\n      theme={{\n        components: {\n          Menu: {\n            margin: 2\n          },\n        },\n      }}\n    >\n      <Menu\n        onClick={onClick}\n        // inlineIndent={15}\n        style={{\n          height: '100%',\n          overflow: 'auto'\n\n        }}\n        defaultSelectedKeys={['1']}\n        defaultOpenKeys={['sub1', 'sub2', 'sub4']}\n        selectedKeys={activeKey}\n        mode=\"inline\"\n        items={items}\n      />\n    </ConfigProvider>\n  );\n};\nMenuDrawer.propTypes = {\n  hashes: PropTypes.array,\n}\n\nexport default MenuDrawer;","export const Stats = {\n  ATK_P: 'ATK%',\n  ATK: 'ATK',\n  BE: 'Break Effect',\n  CD: 'CRIT DMG',\n  CR: 'CRIT Rate',\n  DEF_P: 'DEF%',\n  DEF: 'DEF',\n  EHR: 'Effect Hit Rate',\n  ERR: 'Energy Regeneration Rate',\n  Fire_DMG: 'Fire DMG Boost',\n  HP_P: 'HP%',\n  HP: 'HP',\n  Ice_DMG: 'Ice DMG Boost',\n  Imaginary_DMG: 'Imaginary DMG Boost',\n  Lightning_DMG: 'Lightning DMG Boost',\n  OHB: 'Outgoing Healing Boost',\n  Physical_DMG: 'Physical DMG Boost',\n  Quantum_DMG: 'Quantum DMG Boost',\n  RES: 'Effect RES',\n  SPD_P: 'SPD%',\n  SPD: 'SPD',\n  Wind_DMG: 'Wind DMG Boost'\n};\nexport type Stats = typeof Stats[keyof typeof Stats];\n\nexport const MainStats = [\n  Stats.HP_P,\n  Stats.ATK_P,\n  Stats.DEF_P,\n  Stats.HP,\n  Stats.ATK,\n  Stats.SPD,\n  Stats.CR,\n  Stats.CD,\n  Stats.EHR,\n  Stats.BE,\n  Stats.ERR,\n  Stats.OHB,\n  Stats.Physical_DMG,\n  Stats.Fire_DMG,\n  Stats.Ice_DMG,\n  Stats.Lightning_DMG,\n  Stats.Wind_DMG,\n  Stats.Quantum_DMG,\n  Stats.Imaginary_DMG,\n];\nexport type MainStats = typeof MainStats[number];\n\nexport const MainStatsValues = {\n  [Stats.HP_P]: { '5': { 'base': 6.912, 'increment': 2.4192 }, '4': { 'base': 5.5296, 'increment': 1.9354 }, '3': { 'base': 4.1472, 'increment': 1.4515 }, '2': { 'base': 2.7648, 'increment': 0.9677 } },\n  [Stats.ATK_P]: { '5': { 'base': 6.912, 'increment': 2.4192 }, '4': { 'base': 5.5296, 'increment': 1.9354 }, '3': { 'base': 4.1472, 'increment': 1.4515 }, '2': { 'base': 2.7648, 'increment': 0.9677 } },\n  [Stats.DEF_P]: { '5': { 'base': 8.64, 'increment': 3.024 }, '4': { 'base': 6.912, 'increment': 2.4192 }, '3': { 'base': 5.184, 'increment': 1.8144 }, '2': { 'base': 3.456, 'increment': 1.2096 } },\n  [Stats.HP]: { '5': { 'base': 112.896, 'increment': 39.5136 }, '4': { 'base': 90.3168, 'increment': 31.61088 }, '3': { 'base': 67.7376, 'increment': 23.70816 }, '2': { 'base': 45.1584, 'increment': 15.80544 } },\n  [Stats.ATK]: { '5': { 'base': 56.448, 'increment': 19.7568 }, '4': { 'base': 45.1584, 'increment': 15.80544 }, '3': { 'base': 33.8688, 'increment': 11.85408 }, '2': { 'base': 22.5792, 'increment': 7.90272 } },\n  [Stats.SPD]: { '5': { 'base': 4.032, 'increment': 1.4 }, '4': { 'base': 3.226, 'increment': 1.1 }, '3': { 'base': 2.419, 'increment': 1.0 }, '2': { 'base': 1.613, 'increment': 1.0 } },\n  [Stats.CR]: { '5': { 'base': 5.184, 'increment': 1.8144 }, '4': { 'base': 4.1472, 'increment': 1.4515 }, '3': { 'base': 3.1104, 'increment': 1.0886 }, '2': { 'base': 2.0736, 'increment': 0.7258 } },\n  [Stats.CD]: { '5': { 'base': 10.368, 'increment': 3.6288 }, '4': { 'base': 8.2944, 'increment': 2.9030 }, '3': { 'base': 6.2208, 'increment': 2.1773 }, '2': { 'base': 4.1472, 'increment': 1.4515 } },\n  [Stats.EHR]: { '5': { 'base': 6.912, 'increment': 2.4192 }, '4': { 'base': 5.5296, 'increment': 1.9354 }, '3': { 'base': 4.1472, 'increment': 1.4515 }, '2': { 'base': 2.7648, 'increment': 0.9677 } },\n  [Stats.BE]: { '5': { 'base': 10.3680, 'increment': 3.6288 }, '4': { 'base': 8.2944, 'increment': 2.9030 }, '3': { 'base': 6.2208, 'increment': 2.1773 }, '2': { 'base': 4.1472, 'increment': 1.4515 } },\n  [Stats.ERR]: { '5': { 'base': 3.1104, 'increment': 1.0886 }, '4': { 'base': 2.4883, 'increment': 0.8709 }, '3': { 'base': 1.8662, 'increment': 0.6532 }, '2': { 'base': 1.2442, 'increment': 0.4355 } },\n  [Stats.OHB]: { '5': { 'base': 5.5296, 'increment': 1.9354 }, '4': { 'base': 4.4237, 'increment': 1.5483 }, '3': { 'base': 3.3178, 'increment': 1.1612 }, '2': { 'base': 2.2118, 'increment': 0.7741 } },\n  [Stats.Physical_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Fire_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Ice_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Lightning_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Wind_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Quantum_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Imaginary_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n}\n\nexport const SubStats = [\n  Stats.ATK_P,\n  Stats.ATK,\n  Stats.BE,\n  Stats.CD,\n  Stats.CR,\n  Stats.DEF_P,\n  Stats.DEF,\n  Stats.EHR,\n  Stats.HP_P,\n  Stats.HP,\n  Stats.RES,\n  Stats.SPD,\n];\nexport type SubStats = typeof SubStats[number];\n\nexport const StatsToReadable = {\n  [Stats.HP_P]: 'HP %',\n  [Stats.ATK_P]: 'ATK %',\n  [Stats.DEF_P]: 'DEF %',\n  [Stats.SPD_P]: 'SPD %',\n  [Stats.HP]: 'HP',\n  [Stats.ATK]: 'ATK',\n  [Stats.DEF]: 'DEF',\n  [Stats.SPD]: 'SPD',\n  [Stats.CR]: 'CRIT Rate',\n  [Stats.CD]: 'CRIT DMG',\n  [Stats.EHR]: 'Effect Hit Rate',\n  [Stats.RES]: 'Effect RES',\n  [Stats.BE]: 'Break Effect',\n  [Stats.ERR]: 'Energy Regen',\n  [Stats.OHB]: 'Healing Boost',\n  [Stats.Physical_DMG]: 'Physical DMG',\n  [Stats.Fire_DMG]: 'Fire DMG',\n  [Stats.Ice_DMG]: 'Ice DMG',\n  [Stats.Lightning_DMG]: 'Lightning DMG',\n  [Stats.Wind_DMG]: 'Wind DMG',\n  [Stats.Quantum_DMG]: 'Quantum DMG',\n  [Stats.Imaginary_DMG]: 'Imaginary DMG'\n}\n\nexport const StatsToIndex: Record<string, number> = {\n\n}\nlet i = 0;\nObject.values(Stats).map(x => StatsToIndex[x] = i++)\n\nexport const Parts = {\n  Head: 'Head',\n  Hands: 'Hands',\n  Body: 'Body',\n  Feet: 'Feet',\n  PlanarSphere: 'PlanarSphere',\n  LinkRope: 'LinkRope'\n};\nexport type Parts = typeof Parts[keyof typeof Parts];\n\nexport const PartsToReadable = {\n  [Parts.Head]: 'Head',\n  [Parts.Hands]: 'Hands',\n  [Parts.Body]: 'Body',\n  [Parts.Feet]: 'Feet',\n  [Parts.PlanarSphere]: 'Sphere',\n  [Parts.LinkRope]: 'Rope'\n};\nexport type PartsToReadable = typeof PartsToReadable[keyof typeof PartsToReadable];\n\nexport const PartsMainStats = {\n  [Parts.Head]: [Stats.HP],\n  [Parts.Hands]: [Stats.ATK],\n  [Parts.Body]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.CR, Stats.CD, Stats.OHB, Stats.EHR],\n  [Parts.Feet]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.SPD],\n  [Parts.PlanarSphere]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.Physical_DMG, Stats.Fire_DMG, Stats.Ice_DMG, Stats.Lightning_DMG, Stats.Wind_DMG, Stats.Quantum_DMG, Stats.Imaginary_DMG],\n  [Parts.LinkRope]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.BE, Stats.ERR],\n}\n\nexport const SetsRelics = {\n  'PasserbyOfWanderingCloud': 'Passerby of Wandering Cloud',\n  'MusketeerOfWildWheat': 'Musketeer of Wild Wheat',\n  'KnightOfPurityPalace': 'Knight of Purity Palace',\n  'HunterOfGlacialForest': 'Hunter of Glacial Forest',\n  'ChampionOfStreetwiseBoxing': 'Champion of Streetwise Boxing',\n  'GuardOfWutheringSnow': 'Guard of Wuthering Snow',\n  'FiresmithOfLavaForging': 'Firesmith of Lava-Forging',\n  'GeniusOfBrilliantStars': 'Genius of Brilliant Stars',\n  'BandOfSizzlingThunder': 'Band of Sizzling Thunder',\n  'EagleOfTwilightLine': 'Eagle of Twilight Line',\n  'ThiefOfShootingMeteor': 'Thief of Shooting Meteor',\n  'WastelanderOfBanditryDesert': 'Wastelander of Banditry Desert',\n  'LongevousDisciple': 'Longevous Disciple',\n  'MessengerTraversingHackerspace': 'Messenger Traversing Hackerspace',\n  'TheAshblazingGrandDuke': 'The Ashblazing Grand Duke',\n  'PrisonerInDeepConfinement': 'Prisoner in Deep Confinement',\n};\nexport type SetsRelics = typeof SetsRelics[keyof typeof SetsRelics];\n\nexport const SetsOrnaments = {\n  'SpaceSealingStation': 'Space Sealing Station',\n  'FleetOfTheAgeless': 'Fleet of the Ageless',\n  'PanCosmicCommercialEnterprise': 'Pan-Cosmic Commercial Enterprise',\n  'BelobogOfTheArchitects': 'Belobog of the Architects',\n  'CelestialDifferentiator': 'Celestial Differentiator',\n  'InertSalsotto': 'Inert Salsotto',\n  'TaliaKingdomOfBanditry': 'Talia: Kingdom of Banditry',\n  'SprightlyVonwacq': 'Sprightly Vonwacq',\n  'RutilantArena': 'Rutilant Arena',\n  'BrokenKeel': 'Broken Keel',\n  'FirmamentFrontlineGlamoth': 'Firmament Frontline: Glamoth',\n  'PenaconyLandOfTheDreams': 'Penacony, Land of the Dreams',\n};\nexport type SetsOrnaments = typeof SetsOrnaments[keyof typeof SetsOrnaments];\n\nexport const Sets = {\n  ...SetsRelics,\n  ...SetsOrnaments\n}\nexport type Sets = typeof Sets[keyof typeof Sets];\n\nexport const SetsRelicsNames = Object.values(SetsRelics)\nexport const SetsOrnamentsNames = Object.values(SetsOrnaments)\n\nconst OrnamentSetToIndex: Record<string, number> = {}\nfor (let i = 0; i < SetsOrnamentsNames.length; i++) {\n  OrnamentSetToIndex[SetsOrnamentsNames[i]] = i\n}\n\nconst RelicSetToIndex: Record<string, number> = {}\nfor (let i = 0; i < SetsRelicsNames.length; i++) {\n  RelicSetToIndex[SetsRelicsNames[i]] = i\n}\n\nexport const Constants = {\n  Sets,\n  Parts,\n  Stats,\n  MainStats,\n  MainStatsValues,\n  SubStats,\n  StatsToIndex,\n  SetsOrnaments,\n  SetsRelics,\n  SetsRelicsNames,\n  SetsOrnamentsNames,\n  StatsToReadable,\n  PartsToReadable,\n  PartsMainStats,\n  RelicSetToIndex,\n  OrnamentSetToIndex,\n  // StatMaxes,\n  MAX_INT: 2147483647,\n}","import { Constants } from \"./constants.ts\";\n\n// This is a leftover relic of the gpu experiment, all that's left is this which creates a request object to send to\n// the worker threads\nexport const GPUOptimizer = {\n  createConstants: function (\n    HEIGHT,\n    WIDTH,\n    request,\n    relics,\n    character,\n    relicSetAllowList,\n    relicSetSolutions,\n    ornamentSetSolutions,\n    elementalMultipliers) {\n    let cIndex = 0;\n    let consts = {\n      'HP_P': cIndex++, // 0\n      'ATK_P': cIndex++,\n      'DEF_P': cIndex++,\n      'SPD_P': cIndex++,\n      'HP': cIndex++,\n      'ATK': cIndex++,\n      'DEF': cIndex++,\n      'SPD': cIndex++,\n      'CD': cIndex++,\n      'CR': cIndex++,\n      'EHR': cIndex++,\n      'RES': cIndex++,\n      'BE': cIndex++,\n      'ERR': cIndex++,\n      'OHB': cIndex++,\n      'Physical_DMG': cIndex++,\n      'Fire_DMG': cIndex++,\n      'Ice_DMG': cIndex++,\n      'Lightning_DMG': cIndex++,\n      'Wind_DMG': cIndex++,\n      'Quantum_DMG': cIndex++,\n      'Imaginary_DMG': cIndex++, // 21\n      'part': cIndex++, // 21\n      'set': cIndex++, // 21\n      'maxHp': request.maxHp,\n      'minHp': request.minHp,\n      'maxAtk': request.maxAtk,\n      'minAtk': request.minAtk,\n      'maxDef': request.maxDef,\n      'minDef': request.minDef,\n      'maxCr': request.maxCr,\n      'minCr': request.minCr,\n      'maxCd': request.maxCd,\n      'minCd': request.minCd,\n      'maxSpd': request.maxSpd,\n      'minSpd': request.minSpd,\n      'maxEhr': request.maxEhr,\n      'minEhr': request.minEhr,\n      'maxRes': request.maxRes,\n      'minRes': request.minRes,\n      'maxBe': request.maxBe,\n      'minBe': request.minBe,\n      'maxCv': request.maxCv,\n      'minCv': request.minCv,\n      'maxDmg': request.maxDmg,\n      'minDmg': request.minDmg,\n      'maxMcd': request.maxMcd,\n      'minMcd': request.minMcd,\n      'minEhp': request.minEhp,\n      'maxEhp': request.maxEhp,\n      'buffAtk': request.buffAtk,\n      'buffAtkP': request.buffAtkP,\n      'buffCr': request.buffCr,\n      'buffCd': request.buffCd,\n      'relicsHead': relics.Head,\n      'relicsHands': relics.Hands,\n      'relicsBody': relics.Body,\n      'relicsFeet': relics.Feet,\n      'relicsPlanarSphere': relics.PlanarSphere,\n      'relicsLinkRope': relics.LinkRope,\n      'hSize': relics.Head.length,\n      'gSize': relics.Hands.length,\n      'bSize': relics.Body.length,\n      'fSize': relics.Feet.length,\n      'pSize': relics.PlanarSphere.length,\n      'lSize': relics.LinkRope.length,\n      'charBase': character.base,\n      'charTrace': character.traces,\n      'charLc': character.lightCone,\n      'relicSetCount': Object.values(Constants.SetsRelics).length,\n      'ornamentSetCount': Object.values(Constants.SetsOrnaments).length,\n      'relicSetSolutions': relicSetSolutions,\n      'ornamentSetSolutions': ornamentSetSolutions,\n      'elementalMultipliers': elementalMultipliers,\n      'HEIGHT': HEIGHT,\n      'WIDTH': WIDTH\n    }\n\n    console.log('GPU Constants', consts);\n    return consts;\n  },\n}\n","import * as htmlToImage from 'html-to-image';\nimport DB from \"./db\";\nimport { Constants } from \"./constants.ts\";\n\nexport const Utils = {\n  arrayOfZeroes: (n) => {\n    return new Array(n).fill(0);\n  },\n  arrayOfValue: (n, x) => {\n    return new Array(n).fill(x);\n  },\n  sleep: (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  },\n  relicsToSetArrays: (relics) => {\n    let relicSets = Utils.arrayOfValue(Object.values(Constants.SetsRelics).length, 0)\n    let ornamentSets = Utils.arrayOfValue(Object.values(Constants.SetsOrnaments).length, 0)\n\n    for (let relic of relics) {\n      if (!relic) continue\n      if (relic.part == Constants.Parts.PlanarSphere || relic.part == Constants.Parts.LinkRope) {\n        let set = Constants.OrnamentSetToIndex[relic.set]\n        ornamentSets[set]++\n      } else {\n        let set = Constants.RelicSetToIndex[relic.set]\n        relicSets[set]++\n      }\n    }\n\n    return {\n      relicSets: relicSets,\n      ornamentSets: ornamentSets\n    }\n  },\n  isFlat: (stat) => {\n    return stat == Constants.Stats.HP ||\n      stat == Constants.Stats.ATK ||\n      stat == Constants.Stats.DEF ||\n      stat == Constants.Stats.SPD;\n  },\n  randomElement: (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)]\n  },\n  screenshotElement: async (element) => {\n    return await htmlToImage.toPng(element, { pixelRatio: 1.5 })\n  },\n  truncate10ths: (x) => {\n    return Math.floor(x * 10) / 10\n  },\n  collectById: (arr) => {\n    let byId = {}\n    for (let x of arr) {\n      byId[x.id] = x\n    }\n    return byId\n  },\n  truncate10000ths: (x) => {\n    return Math.floor(x * 10000) / 10000\n  },\n  precisionRound(number, precision = 5) {\n    let factor = Math.pow(10, precision);\n    return Math.round(number * factor) / factor;\n  },\n  flipMapping: (obj) => {\n    return Object.fromEntries(Object.entries(obj).map(a => a.reverse()))\n  },\n  clone: (obj) => {\n    return structuredClone(obj)\n  },\n  characterNameFilterOption: (input, option) => {\n    return (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\n  },\n  hasMainStat: (part) => {\n    return part == Constants.Parts.Body || part == Constants.Parts.Feet || part == Constants.Parts.LinkRope || part == Constants.Parts.PlanarSphere\n  },\n  generateCharacterOptions: () => {\n    let characterData = JSON.parse(JSON.stringify(DB.getMetadata().characters));\n\n    for (let value of Object.values(characterData)) {\n      value.value = value.id;\n      value.label = value.displayName;\n    }\n\n    return Object.values(characterData).sort((a, b) => a.label.localeCompare(b.label))\n  },\n}","import { RelicAugmenter } from \"./relicAugmenter\"\nimport { Constants } from \"./constants.ts\";\nimport { Utils } from \"./utils\";\nimport DB from \"./db\";\n\nlet statConversion\nlet partConversion\nlet gradeConversion\n\nexport const CharacterConverter = {\n  convert: (character) => {\n    console.log(character)\n    if (!statConversion) CharacterConverter.setConstantConversions()\n\n    let preRelics = character.relicList || []\n    let preLightCone = character.equipment\n    let characterEidolon = character.rank || 0\n    let id = '' + character.avatarId\n    let lightConeId = preLightCone ? '' + preLightCone.tid : undefined;\n    let lightConeLevel = preLightCone ? preLightCone.level : 0;\n    let lightConeSuperimposition = preLightCone ? preLightCone.rank : 0\n\n    let relics = preRelics.map(x => convertRelic(x)).filter(x => !!x)\n    let equipped = {}\n    for (let relic of relics) {\n      relic.verified = true\n      relic.equippedBy = id\n      equipped[relic.part] = relic\n    }\n    console.log(relics)\n\n    return {\n      id: id,\n      form: {\n        characterLevel: 80,\n        characterId: id,\n        characterEidolon: characterEidolon,\n        lightCone: lightConeId,\n        lightConeLevel: lightConeLevel,\n        lightConeSuperimposition: lightConeSuperimposition,\n      },\n      equipped: equipped\n    }\n  },\n\n  getConstantConversions: () => {\n    if (!statConversion) CharacterConverter.setConstantConversions()\n    return {\n      statConversion,\n      partConversion,\n      gradeConversion\n    }\n  },\n\n  setConstantConversions: () => {\n    statConversion = {\n      'HPAddedRatio': Constants.Stats.HP_P,\n      'AttackAddedRatio': Constants.Stats.ATK_P,\n      'DefenceAddedRatio': Constants.Stats.DEF_P,\n      'HPDelta': Constants.Stats.HP,\n      'AttackDelta': Constants.Stats.ATK,\n      'DefenceDelta': Constants.Stats.DEF,\n      'SpeedDelta': Constants.Stats.SPD,\n      'CriticalDamageBase': Constants.Stats.CD,\n      'CriticalChanceBase': Constants.Stats.CR,\n      'StatusProbabilityBase': Constants.Stats.EHR,\n      'StatusResistanceBase': Constants.Stats.RES,\n      'BreakDamageAddedRatioBase': Constants.Stats.BE,\n      'SPRatioBase': Constants.Stats.ERR,\n      'HealRatioBase': Constants.Stats.OHB,\n      'PhysicalAddedRatio': Constants.Stats.Physical_DMG,\n      'FireAddedRatio': Constants.Stats.Fire_DMG,\n      'IceAddedRatio': Constants.Stats.Ice_DMG,\n      'ThunderAddedRatio': Constants.Stats.Lightning_DMG,\n      'WindAddedRatio': Constants.Stats.Wind_DMG,\n      'QuantumAddedRatio': Constants.Stats.Quantum_DMG,\n      'ImaginaryAddedRatio': Constants.Stats.Imaginary_DMG,\n    }\n\n    partConversion = {\n      1: Constants.Parts.Head,\n      2: Constants.Parts.Hands,\n      3: Constants.Parts.Body,\n      4: Constants.Parts.Feet,\n      5: Constants.Parts.PlanarSphere,\n      6: Constants.Parts.LinkRope,\n    }\n\n    gradeConversion = {\n      6: 5,\n      5: 4,\n      4: 3,\n      3: 2\n    }\n  }\n}\n\nfunction convertRelic(preRelic) {\n  try {\n    let metadata = DB.getMetadata().relics\n    let tid = '' + preRelic.tid\n\n    let enhance = preRelic.level || 0\n\n    let setId = tid.substring(1, 4)\n    let setName = metadata.relicSets[setId].name\n\n    let partId = tid.substring(4, 5)\n    let partName = partConversion[partId]\n\n    let gradeId = tid.substring(0, 1)\n    let grade = gradeConversion[gradeId]\n\n    let mainId = preRelic.mainAffixId\n    let mainData = metadata.relicMainAffixes[`${grade}${partId}`].affixes[mainId]\n\n    let mainStat = statConversion[mainData.property]\n    let mainBase = mainData.base\n    let mainStep = mainData.step\n    let mainValue = mainBase + mainStep * enhance\n\n    let main = {\n      stat: mainStat,\n      value: Utils.precisionRound(mainValue * (Utils.isFlat(mainStat) ? 1 : 100), 5)\n    }\n\n    let substats = []\n    for (let sub of preRelic.subAffixList) {\n      let subId = sub.affixId\n      let count = sub.cnt\n      let step = sub.step || 0\n\n      let subData = metadata.relicSubAffixes[grade].affixes[subId]\n      let subStat = statConversion[subData.property]\n      let subBase = subData.base\n      let subStep = subData.step\n\n      let subValue = subBase * count + subStep * step\n\n      substats.push({\n        stat: subStat,\n        value: Utils.precisionRound(subValue * (Utils.isFlat(subStat) ? 1 : 100), 5)\n      })\n    }\n\n    let relic = {\n      part: partName,\n      set: setName,\n      enhance: enhance,\n      grade: grade,\n      main: main,\n      substats: substats\n    }\n\n    return RelicAugmenter.augment(relic)\n  } catch (e) {\n    console.error(e)\n    return null\n  }\n}\n","import DB from \"./db\";\nimport { Utils } from \"./utils\";\nimport { Constants } from \"./constants.ts\";\nimport { CharacterConverter } from \"./characterConverter\";\n\nlet optimizerStatToJsonSubStat\nlet optimizerStatToAffixStat\nlet optimizerPartToPartId\nlet initialized = false\n\nexport const RelicRollFixer = {\n  fixMainStatvalue: (relic) => {\n    if (!initialized) RelicRollFixer.initialize()\n\n    let enhance = relic.enhance\n    let stat = relic.main.stat\n    let partId = optimizerPartToPartId[relic.part]\n    let grade = relic.grade\n    let query = `${grade}${partId}`\n    let affixes = DB.getMetadata().relics.relicMainAffixes[query].affixes\n    let affix = Object.values(affixes).find(x => x.property == optimizerStatToAffixStat[stat])\n    if (!affix) return 0\n\n    let step = affix.step\n    let base = affix.base\n    let totalValue = base + step * enhance\n    let scaledValue = Utils.isFlat(stat) ? totalValue : totalValue * 100\n\n    return Utils.precisionRound(scaledValue, 5)\n  },\n\n  fixSubStatValue: (stat, value, grade) => {\n    if (!initialized) RelicRollFixer.initialize()\n\n    // Can't fix speed values\n    if (stat == Constants.Stats.SPD) return value\n\n    let statsByGrade = relicRollValues[grade]\n    if (!statsByGrade) return value\n\n    let convertedStatType = optimizerStatToJsonSubStat[stat]\n    if (!convertedStatType) return value\n    if (!statsByGrade[convertedStatType]) return value\n\n    let rollsMapping = statsByGrade[convertedStatType]\n    let rolls = rollsMapping[value]\n    if (!rolls) return value\n    // Duplicate entries are arrays when stats collide\n    if (rolls.length) rolls = rolls[0]\n\n    let affixes = DB.getMetadata().relics.relicSubAffixes[grade].affixes\n    let matched = Object.values(affixes).find(x => x.property == optimizerStatToAffixStat[stat])\n    if (!matched) return value\n\n    let base = matched.base\n    let step = matched.step\n\n    let oneRoll = base + step * 2\n    let totalValue = oneRoll * rolls\n    let scaledValue = Utils.isFlat(stat) ? totalValue : totalValue * 100\n\n    return Utils.precisionRound(scaledValue, 5)\n  },\n\n  initialize: () => {\n    initialized = true\n    let conversions = CharacterConverter.getConstantConversions()\n    optimizerStatToAffixStat = Utils.flipMapping(conversions.statConversion)\n    optimizerPartToPartId = Utils.flipMapping(conversions.partConversion)\n\n    optimizerStatToJsonSubStat = Utils.flipMapping({\n      'ATK': Constants.Stats.ATK,\n      'HP': Constants.Stats.HP,\n      'DEF': Constants.Stats.DEF,\n      'ATK_': Constants.Stats.ATK_P,\n      'HP_': Constants.Stats.HP_P,\n      'DEF_': Constants.Stats.DEF_P,\n      'SPD': Constants.Stats.SPD,\n      'CRIT Rate_': Constants.Stats.CR,\n      'CRIT DMG_': Constants.Stats.CD,\n      'Effect Hit Rate_': Constants.Stats.EHR,\n      'Effect RES_': Constants.Stats.RES,\n      'Break Effect_': Constants.Stats.BE,\n    })\n  }\n}\n\n// https://github.com/kel-z/HSR-Data/blob/main/output/relic_roll_vals.json\nlet relicRollValues = {\n  \"2\": {\n    \"HP\": {\n      \"13\": 0.8,\n      \"15\": 0.9,\n      \"16\": 1.0\n    },\n    \"ATK\": {\n      \"6\": 0.8,\n      \"7\": 0.9,\n      \"8\": 1.0\n    },\n    \"DEF\": {\n      \"6\": 0.8,\n      \"7\": 0.9,\n      \"8\": 1.0\n    },\n    \"HP_\": {\n      \"1.3\": 0.8,\n      \"1.5\": 0.9,\n      \"1.7\": 1.0\n    },\n    \"ATK_\": {\n      \"1.3\": 0.8,\n      \"1.5\": 0.9,\n      \"1.7\": 1.0\n    },\n    \"DEF_\": {\n      \"1.7\": 0.8,\n      \"1.9\": 0.9,\n      \"2.1\": 1.0\n    },\n    \"SPD\": {\n      \"1\": [\n        0.8,\n        0.9,\n        1.0\n      ]\n    },\n    \"CRIT Rate_\": {\n      \"1\": 0.8,\n      \"1.1\": 0.9,\n      \"1.2\": 1.0\n    },\n    \"CRIT DMG_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0\n    },\n    \"Effect Hit Rate_\": {\n      \"1.3\": 0.8,\n      \"1.5\": 0.9,\n      \"1.7\": 1.0\n    },\n    \"Effect RES_\": {\n      \"1.3\": 0.8,\n      \"1.5\": 0.9,\n      \"1.7\": 1.0\n    },\n    \"Break Effect_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0\n    }\n  },\n  \"3\": {\n    \"HP\": {\n      \"20\": 0.8,\n      \"22\": 0.9,\n      \"25\": 1.0,\n      \"40\": 1.6,\n      \"43\": 1.7,\n      \"45\": 1.8,\n      \"48\": 1.9,\n      \"50\": 2.0\n    },\n    \"ATK\": {\n      \"10\": 0.8,\n      \"11\": 0.9,\n      \"12\": 1.0,\n      \"20\": 1.6,\n      \"21\": 1.7,\n      \"22\": 1.8,\n      \"24\": 1.9,\n      \"25\": 2.0\n    },\n    \"DEF\": {\n      \"10\": 0.8,\n      \"11\": 0.9,\n      \"12\": 1.0,\n      \"20\": 1.6,\n      \"21\": 1.7,\n      \"22\": 1.8,\n      \"24\": 1.9,\n      \"25\": 2.0\n    },\n    \"HP_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0,\n      \"4.1\": 1.6,\n      \"4.4\": 1.7,\n      \"4.6\": 1.8,\n      \"4.9\": 1.9,\n      \"5.1\": 2.0\n    },\n    \"ATK_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0,\n      \"4.1\": 1.6,\n      \"4.4\": 1.7,\n      \"4.6\": 1.8,\n      \"4.9\": 1.9,\n      \"5.1\": 2.0\n    },\n    \"DEF_\": {\n      \"2.5\": 0.8,\n      \"2.9\": 0.9,\n      \"3.2\": 1.0,\n      \"5.1\": 1.6,\n      \"5.5\": 1.7,\n      \"5.8\": 1.8,\n      \"6.1\": 1.9,\n      \"6.4\": 2.0\n    },\n    \"SPD\": {\n      \"1\": [\n        0.8,\n        0.9,\n        1.0\n      ],\n      \"2\": [\n        1.6,\n        1.7,\n        1.8,\n        1.9,\n        2.0\n      ]\n    },\n    \"CRIT Rate_\": {\n      \"1.5\": 0.8,\n      \"1.7\": 0.9,\n      \"1.9\": 1.0,\n      \"3.1\": 1.6,\n      \"3.3\": 1.7,\n      \"3.4\": 1.8,\n      \"3.6\": 1.9,\n      \"3.8\": 2.0\n    },\n    \"CRIT DMG_\": {\n      \"3.1\": 0.8,\n      \"3.4\": 0.9,\n      \"3.8\": 1.0,\n      \"6.2\": 1.6,\n      \"6.6\": 1.7,\n      \"6.9\": 1.8,\n      \"7.3\": 1.9,\n      \"7.7\": 2.0\n    },\n    \"Effect Hit Rate_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0,\n      \"4.1\": 1.6,\n      \"4.4\": 1.7,\n      \"4.6\": 1.8,\n      \"4.9\": 1.9,\n      \"5.1\": 2.0\n    },\n    \"Effect RES_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0,\n      \"4.1\": 1.6,\n      \"4.4\": 1.7,\n      \"4.6\": 1.8,\n      \"4.9\": 1.9,\n      \"5.1\": 2.0\n    },\n    \"Break Effect_\": {\n      \"3.1\": 0.8,\n      \"3.4\": 0.9,\n      \"3.8\": 1.0,\n      \"6.2\": 1.6,\n      \"6.6\": 1.7,\n      \"6.9\": 1.8,\n      \"7.3\": 1.9,\n      \"7.7\": 2.0\n    }\n  },\n  \"4\": {\n    \"HP\": {\n      \"27\": 0.8,\n      \"30\": 0.9,\n      \"33\": 1.0,\n      \"54\": 1.6,\n      \"57\": 1.7,\n      \"60\": 1.8,\n      \"64\": 1.9,\n      \"67\": 2.0,\n      \"81\": 2.4,\n      \"84\": 2.5,\n      \"88\": 2.6,\n      \"91\": 2.7,\n      \"94\": 2.8,\n      \"98\": 2.9,\n      \"101\": 3.0,\n      \"108\": 3.2,\n      \"111\": 3.3,\n      \"115\": 3.4,\n      \"118\": 3.5,\n      \"121\": 3.6,\n      \"125\": 3.7,\n      \"128\": 3.8,\n      \"132\": 3.9,\n      \"135\": 4.0\n    },\n    \"ATK\": {\n      \"13\": 0.8,\n      \"15\": 0.9,\n      \"16\": 1.0,\n      \"27\": 1.6,\n      \"28\": 1.7,\n      \"30\": 1.8,\n      \"32\": 1.9,\n      \"33\": 2.0,\n      \"40\": 2.4,\n      \"42\": 2.5,\n      \"44\": 2.6,\n      \"45\": 2.7,\n      \"47\": 2.8,\n      \"49\": 2.9,\n      \"50\": 3.0,\n      \"54\": 3.2,\n      \"55\": 3.3,\n      \"57\": 3.4,\n      \"59\": 3.5,\n      \"60\": 3.6,\n      \"62\": 3.7,\n      \"64\": 3.8,\n      \"66\": 3.9,\n      \"67\": 4.0\n    },\n    \"DEF\": {\n      \"13\": 0.8,\n      \"15\": 0.9,\n      \"16\": 1.0,\n      \"27\": 1.6,\n      \"28\": 1.7,\n      \"30\": 1.8,\n      \"32\": 1.9,\n      \"33\": 2.0,\n      \"40\": 2.4,\n      \"42\": 2.5,\n      \"44\": 2.6,\n      \"45\": 2.7,\n      \"47\": 2.8,\n      \"49\": 2.9,\n      \"50\": 3.0,\n      \"54\": 3.2,\n      \"55\": 3.3,\n      \"57\": 3.4,\n      \"59\": 3.5,\n      \"60\": 3.6,\n      \"62\": 3.7,\n      \"64\": 3.8,\n      \"66\": 3.9,\n      \"67\": 4.0\n    },\n    \"HP_\": {\n      \"2.7\": 0.8,\n      \"3.1\": 0.9,\n      \"3.4\": 1.0,\n      \"5.5\": 1.6,\n      \"5.8\": 1.7,\n      \"6.2\": 1.8,\n      \"6.5\": 1.9,\n      \"6.9\": 2.0,\n      \"8.2\": 2.4,\n      \"8.6\": 2.5,\n      \"8.9\": 2.6,\n      \"9.3\": 2.7,\n      \"9.6\": 2.8,\n      \"10\": 2.9,\n      \"10.3\": 3.0,\n      \"11\": 3.2,\n      \"11.4\": 3.3,\n      \"11.7\": 3.4,\n      \"12\": 3.5,\n      \"12.4\": 3.6,\n      \"12.7\": 3.7,\n      \"13.1\": 3.8,\n      \"13.4\": 3.9,\n      \"13.8\": 4.0\n    },\n    \"ATK_\": {\n      \"2.7\": 0.8,\n      \"3.1\": 0.9,\n      \"3.4\": 1.0,\n      \"5.5\": 1.6,\n      \"5.8\": 1.7,\n      \"6.2\": 1.8,\n      \"6.5\": 1.9,\n      \"6.9\": 2.0,\n      \"8.2\": 2.4,\n      \"8.6\": 2.5,\n      \"8.9\": 2.6,\n      \"9.3\": 2.7,\n      \"9.6\": 2.8,\n      \"10\": 2.9,\n      \"10.3\": 3.0,\n      \"11\": 3.2,\n      \"11.4\": 3.3,\n      \"11.7\": 3.4,\n      \"12\": 3.5,\n      \"12.4\": 3.6,\n      \"12.7\": 3.7,\n      \"13.1\": 3.8,\n      \"13.4\": 3.9,\n      \"13.8\": 4.0\n    },\n    \"DEF_\": {\n      \"3.4\": 0.8,\n      \"3.8\": 0.9,\n      \"4.3\": 1.0,\n      \"6.9\": 1.6,\n      \"7.3\": 1.7,\n      \"7.7\": 1.8,\n      \"8.2\": 1.9,\n      \"8.6\": 2.0,\n      \"10.3\": 2.4,\n      \"10.8\": 2.5,\n      \"11.2\": 2.6,\n      \"11.6\": 2.7,\n      \"12\": 2.8,\n      \"12.5\": 2.9,\n      \"12.9\": 3.0,\n      \"13.8\": 3.2,\n      \"14.2\": 3.3,\n      \"14.6\": 3.4,\n      \"15.1\": 3.5,\n      \"15.5\": 3.6,\n      \"15.9\": 3.7,\n      \"16.4\": 3.8,\n      \"16.8\": 3.9,\n      \"17.2\": 4.0\n    },\n    \"SPD\": {\n      \"1\": [\n        0.8,\n        0.9\n      ],\n      \"2\": 1.0,\n      \"3\": [\n        1.6,\n        1.7,\n        1.8,\n        1.9\n      ],\n      \"4\": [\n        2.0,\n        2.4\n      ],\n      \"5\": [\n        2.5,\n        2.6,\n        2.7,\n        2.8,\n        2.9\n      ],\n      \"6\": [\n        3.0,\n        3.2,\n        3.3,\n        3.4\n      ],\n      \"7\": [\n        3.5,\n        3.6,\n        3.7,\n        3.8,\n        3.9\n      ],\n      \"8\": 4.0\n    },\n    \"CRIT Rate_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0,\n      \"4.1\": 1.6,\n      \"4.4\": 1.7,\n      \"4.6\": 1.8,\n      \"4.9\": 1.9,\n      \"5.1\": 2.0,\n      \"6.2\": 2.4,\n      \"6.4\": 2.5,\n      \"6.7\": 2.6,\n      \"6.9\": 2.7,\n      \"7.2\": 2.8,\n      \"7.5\": 2.9,\n      \"7.7\": 3.0,\n      \"8.2\": 3.2,\n      \"8.5\": 3.3,\n      \"8.8\": 3.4,\n      \"9\": 3.5,\n      \"9.3\": 3.6,\n      \"9.5\": 3.7,\n      \"9.8\": 3.8,\n      \"10.1\": 3.9,\n      \"10.3\": 4.0\n    },\n    \"CRIT DMG_\": {\n      \"4.1\": 0.8,\n      \"4.6\": 0.9,\n      \"5.1\": 1.0,\n      \"8.2\": 1.6,\n      \"8.8\": 1.7,\n      \"9.3\": 1.8,\n      \"9.8\": 1.9,\n      \"10.3\": 2.0,\n      \"12.4\": 2.4,\n      \"12.9\": 2.5,\n      \"13.4\": 2.6,\n      \"13.9\": 2.7,\n      \"14.5\": 2.8,\n      \"15\": 2.9,\n      \"15.5\": 3.0,\n      \"16.5\": 3.2,\n      \"17.1\": 3.3,\n      \"17.6\": 3.4,\n      \"18.1\": 3.5,\n      \"18.6\": 3.6,\n      \"19.1\": 3.7,\n      \"19.6\": 3.8,\n      \"20.2\": 3.9,\n      \"20.7\": 4.0\n    },\n    \"Effect Hit Rate_\": {\n      \"2.7\": 0.8,\n      \"3.1\": 0.9,\n      \"3.4\": 1.0,\n      \"5.5\": 1.6,\n      \"5.8\": 1.7,\n      \"6.2\": 1.8,\n      \"6.5\": 1.9,\n      \"6.9\": 2.0,\n      \"8.2\": 2.4,\n      \"8.6\": 2.5,\n      \"8.9\": 2.6,\n      \"9.3\": 2.7,\n      \"9.6\": 2.8,\n      \"10\": 2.9,\n      \"10.3\": 3.0,\n      \"11\": 3.2,\n      \"11.4\": 3.3,\n      \"11.7\": 3.4,\n      \"12\": 3.5,\n      \"12.4\": 3.6,\n      \"12.7\": 3.7,\n      \"13.1\": 3.8,\n      \"13.4\": 3.9,\n      \"13.8\": 4.0\n    },\n    \"Effect RES_\": {\n      \"2.7\": 0.8,\n      \"3.1\": 0.9,\n      \"3.4\": 1.0,\n      \"5.5\": 1.6,\n      \"5.8\": 1.7,\n      \"6.2\": 1.8,\n      \"6.5\": 1.9,\n      \"6.9\": 2.0,\n      \"8.2\": 2.4,\n      \"8.6\": 2.5,\n      \"8.9\": 2.6,\n      \"9.3\": 2.7,\n      \"9.6\": 2.8,\n      \"10\": 2.9,\n      \"10.3\": 3.0,\n      \"11\": 3.2,\n      \"11.4\": 3.3,\n      \"11.7\": 3.4,\n      \"12\": 3.5,\n      \"12.4\": 3.6,\n      \"12.7\": 3.7,\n      \"13.1\": 3.8,\n      \"13.4\": 3.9,\n      \"13.8\": 4.0\n    },\n    \"Break Effect_\": {\n      \"4.1\": 0.8,\n      \"4.6\": 0.9,\n      \"5.1\": 1.0,\n      \"8.2\": 1.6,\n      \"8.8\": 1.7,\n      \"9.3\": 1.8,\n      \"9.8\": 1.9,\n      \"10.3\": 2.0,\n      \"12.4\": 2.4,\n      \"12.9\": 2.5,\n      \"13.4\": 2.6,\n      \"13.9\": 2.7,\n      \"14.5\": 2.8,\n      \"15\": 2.9,\n      \"15.5\": 3.0,\n      \"16.5\": 3.2,\n      \"17.1\": 3.3,\n      \"17.6\": 3.4,\n      \"18.1\": 3.5,\n      \"18.6\": 3.6,\n      \"19.1\": 3.7,\n      \"19.6\": 3.8,\n      \"20.2\": 3.9,\n      \"20.7\": 4.0\n    }\n  },\n  \"5\": {\n    \"HP\": {\n      \"33\": 0.8,\n      \"38\": 0.9,\n      \"42\": 1.0,\n      \"67\": 1.6,\n      \"71\": 1.7,\n      \"76\": 1.8,\n      \"80\": 1.9,\n      \"84\": 2.0,\n      \"101\": 2.4,\n      \"105\": 2.5,\n      \"110\": 2.6,\n      \"114\": 2.7,\n      \"118\": 2.8,\n      \"122\": 2.9,\n      \"127\": 3.0,\n      \"135\": 3.2,\n      \"139\": 3.3,\n      \"143\": 3.4,\n      \"148\": 3.5,\n      \"152\": 3.6,\n      \"156\": 3.7,\n      \"160\": 3.8,\n      \"165\": 3.9,\n      \"169\": 4.0,\n      \"173\": 4.1,\n      \"177\": 4.2,\n      \"182\": 4.3,\n      \"186\": 4.4,\n      \"190\": 4.5,\n      \"194\": 4.6,\n      \"198\": 4.7,\n      \"203\": 4.8,\n      \"207\": 4.9,\n      \"211\": 5.0,\n      \"215\": 5.1,\n      \"220\": 5.2,\n      \"224\": 5.3,\n      \"228\": 5.4,\n      \"232\": 5.5,\n      \"237\": 5.6,\n      \"241\": 5.7,\n      \"245\": 5.8,\n      \"249\": 5.9,\n      \"254\": 6.0\n    },\n    \"ATK\": {\n      \"16\": 0.8,\n      \"19\": 0.9,\n      \"21\": 1.0,\n      \"33\": 1.6,\n      \"35\": 1.7,\n      \"38\": 1.8,\n      \"40\": 1.9,\n      \"42\": 2.0,\n      \"50\": 2.4,\n      \"52\": 2.5,\n      \"55\": 2.6,\n      \"57\": 2.7,\n      \"59\": 2.8,\n      \"61\": 2.9,\n      \"63\": 3.0,\n      \"67\": 3.2,\n      \"69\": 3.3,\n      \"71\": 3.4,\n      \"74\": 3.5,\n      \"76\": 3.6,\n      \"78\": 3.7,\n      \"80\": 3.8,\n      \"82\": 3.9,\n      \"84\": 4.0,\n      \"86\": 4.1,\n      \"88\": 4.2,\n      \"91\": 4.3,\n      \"93\": 4.4,\n      \"95\": 4.5,\n      \"97\": 4.6,\n      \"99\": 4.7,\n      \"101\": 4.8,\n      \"103\": 4.9,\n      \"105\": 5.0,\n      \"107\": 5.1,\n      \"110\": 5.2,\n      \"112\": 5.3,\n      \"114\": 5.4,\n      \"116\": 5.5,\n      \"118\": 5.6,\n      \"120\": 5.7,\n      \"122\": 5.8,\n      \"124\": 5.9,\n      \"127\": 6.0\n    },\n    \"DEF\": {\n      \"16\": 0.8,\n      \"19\": 0.9,\n      \"21\": 1.0,\n      \"33\": 1.6,\n      \"35\": 1.7,\n      \"38\": 1.8,\n      \"40\": 1.9,\n      \"42\": 2.0,\n      \"50\": 2.4,\n      \"52\": 2.5,\n      \"55\": 2.6,\n      \"57\": 2.7,\n      \"59\": 2.8,\n      \"61\": 2.9,\n      \"63\": 3.0,\n      \"67\": 3.2,\n      \"69\": 3.3,\n      \"71\": 3.4,\n      \"74\": 3.5,\n      \"76\": 3.6,\n      \"78\": 3.7,\n      \"80\": 3.8,\n      \"82\": 3.9,\n      \"84\": 4.0,\n      \"86\": 4.1,\n      \"88\": 4.2,\n      \"91\": 4.3,\n      \"93\": 4.4,\n      \"95\": 4.5,\n      \"97\": 4.6,\n      \"99\": 4.7,\n      \"101\": 4.8,\n      \"103\": 4.9,\n      \"105\": 5.0,\n      \"107\": 5.1,\n      \"110\": 5.2,\n      \"112\": 5.3,\n      \"114\": 5.4,\n      \"116\": 5.5,\n      \"118\": 5.6,\n      \"120\": 5.7,\n      \"122\": 5.8,\n      \"124\": 5.9,\n      \"127\": 6.0\n    },\n    \"HP_\": {\n      \"3.4\": 0.8,\n      \"3.8\": 0.9,\n      \"4.3\": 1.0,\n      \"6.9\": 1.6,\n      \"7.3\": 1.7,\n      \"7.7\": 1.8,\n      \"8.2\": 1.9,\n      \"8.6\": 2.0,\n      \"10.3\": 2.4,\n      \"10.8\": 2.5,\n      \"11.2\": 2.6,\n      \"11.6\": 2.7,\n      \"12\": 2.8,\n      \"12.5\": 2.9,\n      \"12.9\": 3.0,\n      \"13.8\": 3.2,\n      \"14.2\": 3.3,\n      \"14.6\": 3.4,\n      \"15.1\": 3.5,\n      \"15.5\": 3.6,\n      \"15.9\": 3.7,\n      \"16.4\": 3.8,\n      \"16.8\": 3.9,\n      \"17.2\": 4.0,\n      \"17.7\": 4.1,\n      \"18.1\": 4.2,\n      \"18.5\": 4.3,\n      \"19\": 4.4,\n      \"19.4\": 4.5,\n      \"19.8\": 4.6,\n      \"20.3\": 4.7,\n      \"20.7\": 4.8,\n      \"21.1\": 4.9,\n      \"21.6\": 5.0,\n      \"22\": 5.1,\n      \"22.4\": 5.2,\n      \"22.8\": 5.3,\n      \"23.3\": 5.4,\n      \"23.7\": 5.5,\n      \"24.1\": 5.6,\n      \"24.6\": 5.7,\n      \"25\": 5.8,\n      \"25.4\": 5.9,\n      \"25.9\": 6.0\n    },\n    \"ATK_\": {\n      \"3.4\": 0.8,\n      \"3.8\": 0.9,\n      \"4.3\": 1.0,\n      \"6.9\": 1.6,\n      \"7.3\": 1.7,\n      \"7.7\": 1.8,\n      \"8.2\": 1.9,\n      \"8.6\": 2.0,\n      \"10.3\": 2.4,\n      \"10.8\": 2.5,\n      \"11.2\": 2.6,\n      \"11.6\": 2.7,\n      \"12\": 2.8,\n      \"12.5\": 2.9,\n      \"12.9\": 3.0,\n      \"13.8\": 3.2,\n      \"14.2\": 3.3,\n      \"14.6\": 3.4,\n      \"15.1\": 3.5,\n      \"15.5\": 3.6,\n      \"15.9\": 3.7,\n      \"16.4\": 3.8,\n      \"16.8\": 3.9,\n      \"17.2\": 4.0,\n      \"17.7\": 4.1,\n      \"18.1\": 4.2,\n      \"18.5\": 4.3,\n      \"19\": 4.4,\n      \"19.4\": 4.5,\n      \"19.8\": 4.6,\n      \"20.3\": 4.7,\n      \"20.7\": 4.8,\n      \"21.1\": 4.9,\n      \"21.6\": 5.0,\n      \"22\": 5.1,\n      \"22.4\": 5.2,\n      \"22.8\": 5.3,\n      \"23.3\": 5.4,\n      \"23.7\": 5.5,\n      \"24.1\": 5.6,\n      \"24.6\": 5.7,\n      \"25\": 5.8,\n      \"25.4\": 5.9,\n      \"25.9\": 6.0\n    },\n    \"DEF_\": {\n      \"4.3\": 0.8,\n      \"4.8\": 0.9,\n      \"5.4\": 1.0,\n      \"8.6\": 1.6,\n      \"9.1\": 1.7,\n      \"9.7\": 1.8,\n      \"10.2\": 1.9,\n      \"10.8\": 2.0,\n      \"12.9\": 2.4,\n      \"13.5\": 2.5,\n      \"14\": 2.6,\n      \"14.5\": 2.7,\n      \"15.1\": 2.8,\n      \"15.6\": 2.9,\n      \"16.2\": 3.0,\n      \"17.2\": 3.2,\n      \"17.8\": 3.3,\n      \"18.3\": 3.4,\n      \"18.9\": 3.5,\n      \"19.4\": 3.6,\n      \"19.9\": 3.7,\n      \"20.5\": 3.8,\n      \"21\": 3.9,\n      \"21.6\": 4.0,\n      \"22.1\": 4.1,\n      \"22.6\": 4.2,\n      \"23.2\": 4.3,\n      \"23.7\": 4.4,\n      \"24.3\": 4.5,\n      \"24.8\": 4.6,\n      \"25.3\": 4.7,\n      \"25.9\": 4.8,\n      \"26.4\": 4.9,\n      \"27\": 5.0,\n      \"27.5\": 5.1,\n      \"28\": 5.2,\n      \"28.6\": 5.3,\n      \"29.1\": 5.4,\n      \"29.7\": 5.5,\n      \"30.2\": 5.6,\n      \"30.7\": 5.7,\n      \"31.3\": 5.8,\n      \"31.8\": 5.9,\n      \"32.4\": 6.0\n    },\n    \"SPD\": {\n      \"2\": [\n        0.8,\n        0.9,\n        1.0\n      ],\n      \"4\": [\n        1.6,\n        1.7,\n        1.8,\n        1.9\n      ],\n      \"5\": 2.0,\n      \"6\": [\n        2.4,\n        2.5,\n        2.6\n      ],\n      \"7\": [\n        2.7,\n        2.8,\n        2.9,\n        3.0\n      ],\n      \"8\": [\n        3.2,\n        3.3,\n        3.4\n      ],\n      \"9\": [\n        3.5,\n        3.6,\n        3.7,\n        3.8\n      ],\n      \"10\": [\n        3.9,\n        4.0,\n        4.1,\n        4.2\n      ],\n      \"11\": [\n        4.3,\n        4.4,\n        4.5,\n        4.6\n      ],\n      \"12\": [\n        4.7,\n        4.8,\n        4.9\n      ],\n      \"13\": [\n        5.0,\n        5.1,\n        5.2,\n        5.3\n      ],\n      \"14\": [\n        5.4,\n        5.5,\n        5.6,\n        5.7\n      ],\n      \"15\": [\n        5.8,\n        5.9,\n        6.0\n      ]\n    },\n    \"CRIT Rate_\": {\n      \"2.5\": 0.8,\n      \"2.9\": 0.9,\n      \"3.2\": 1.0,\n      \"5.1\": 1.6,\n      \"5.5\": 1.7,\n      \"5.8\": 1.8,\n      \"6.1\": 1.9,\n      \"6.4\": 2.0,\n      \"7.7\": 2.4,\n      \"8.1\": 2.5,\n      \"8.4\": 2.6,\n      \"8.7\": 2.7,\n      \"9\": 2.8,\n      \"9.3\": 2.9,\n      \"9.7\": 3.0,\n      \"10.3\": 3.2,\n      \"10.6\": 3.3,\n      \"11\": 3.4,\n      \"11.3\": 3.5,\n      \"11.6\": 3.6,\n      \"11.9\": 3.7,\n      \"12.3\": 3.8,\n      \"12.6\": 3.9,\n      \"12.9\": 4.0,\n      \"13.2\": 4.1,\n      \"13.6\": 4.2,\n      \"13.9\": 4.3,\n      \"14.2\": 4.4,\n      \"14.5\": 4.5,\n      \"14.9\": 4.6,\n      \"15.2\": 4.7,\n      \"15.5\": 4.8,\n      \"15.8\": 4.9,\n      \"16.2\": 5.0,\n      \"16.5\": 5.1,\n      \"16.8\": 5.2,\n      \"17.1\": 5.3,\n      \"17.4\": 5.4,\n      \"17.8\": 5.5,\n      \"18.1\": 5.6,\n      \"18.4\": 5.7,\n      \"18.7\": 5.8,\n      \"19.1\": 5.9,\n      \"19.4\": 6.0\n    },\n    \"CRIT DMG_\": {\n      \"5.1\": 0.8,\n      \"5.8\": 0.9,\n      \"6.4\": 1.0,\n      \"10.3\": 1.6,\n      \"11\": 1.7,\n      \"11.6\": 1.8,\n      \"12.3\": 1.9,\n      \"12.9\": 2.0,\n      \"15.5\": 2.4,\n      \"16.2\": 2.5,\n      \"16.8\": 2.6,\n      \"17.4\": 2.7,\n      \"18.1\": 2.8,\n      \"18.7\": 2.9,\n      \"19.4\": 3.0,\n      \"20.7\": 3.2,\n      \"21.3\": 3.3,\n      \"22\": 3.4,\n      \"22.6\": 3.5,\n      \"23.3\": 3.6,\n      \"23.9\": 3.7,\n      \"24.6\": 3.8,\n      \"25.2\": 3.9,\n      \"25.9\": 4.0,\n      \"26.5\": 4.1,\n      \"27.2\": 4.2,\n      \"27.8\": 4.3,\n      \"28.5\": 4.4,\n      \"29.1\": 4.5,\n      \"29.8\": 4.6,\n      \"30.4\": 4.7,\n      \"31.1\": 4.8,\n      \"31.7\": 4.9,\n      \"32.4\": 5.0,\n      \"33\": 5.1,\n      \"33.6\": 5.2,\n      \"34.3\": 5.3,\n      \"34.9\": 5.4,\n      \"35.6\": 5.5,\n      \"36.2\": 5.6,\n      \"36.9\": 5.7,\n      \"37.5\": 5.8,\n      \"38.2\": 5.9,\n      \"38.8\": 6.0\n    },\n    \"Effect Hit Rate_\": {\n      \"3.4\": 0.8,\n      \"3.8\": 0.9,\n      \"4.3\": 1.0,\n      \"6.9\": 1.6,\n      \"7.3\": 1.7,\n      \"7.7\": 1.8,\n      \"8.2\": 1.9,\n      \"8.6\": 2.0,\n      \"10.3\": 2.4,\n      \"10.8\": 2.5,\n      \"11.2\": 2.6,\n      \"11.6\": 2.7,\n      \"12\": 2.8,\n      \"12.5\": 2.9,\n      \"12.9\": 3.0,\n      \"13.8\": 3.2,\n      \"14.2\": 3.3,\n      \"14.6\": 3.4,\n      \"15.1\": 3.5,\n      \"15.5\": 3.6,\n      \"15.9\": 3.7,\n      \"16.4\": 3.8,\n      \"16.8\": 3.9,\n      \"17.2\": 4.0,\n      \"17.7\": 4.1,\n      \"18.1\": 4.2,\n      \"18.5\": 4.3,\n      \"19\": 4.4,\n      \"19.4\": 4.5,\n      \"19.8\": 4.6,\n      \"20.3\": 4.7,\n      \"20.7\": 4.8,\n      \"21.1\": 4.9,\n      \"21.6\": 5.0,\n      \"22\": 5.1,\n      \"22.4\": 5.2,\n      \"22.8\": 5.3,\n      \"23.3\": 5.4,\n      \"23.7\": 5.5,\n      \"24.1\": 5.6,\n      \"24.6\": 5.7,\n      \"25\": 5.8,\n      \"25.4\": 5.9,\n      \"25.9\": 6.0\n    },\n    \"Effect RES_\": {\n      \"3.4\": 0.8,\n      \"3.8\": 0.9,\n      \"4.3\": 1.0,\n      \"6.9\": 1.6,\n      \"7.3\": 1.7,\n      \"7.7\": 1.8,\n      \"8.2\": 1.9,\n      \"8.6\": 2.0,\n      \"10.3\": 2.4,\n      \"10.8\": 2.5,\n      \"11.2\": 2.6,\n      \"11.6\": 2.7,\n      \"12\": 2.8,\n      \"12.5\": 2.9,\n      \"12.9\": 3.0,\n      \"13.8\": 3.2,\n      \"14.2\": 3.3,\n      \"14.6\": 3.4,\n      \"15.1\": 3.5,\n      \"15.5\": 3.6,\n      \"15.9\": 3.7,\n      \"16.4\": 3.8,\n      \"16.8\": 3.9,\n      \"17.2\": 4.0,\n      \"17.7\": 4.1,\n      \"18.1\": 4.2,\n      \"18.5\": 4.3,\n      \"19\": 4.4,\n      \"19.4\": 4.5,\n      \"19.8\": 4.6,\n      \"20.3\": 4.7,\n      \"20.7\": 4.8,\n      \"21.1\": 4.9,\n      \"21.6\": 5.0,\n      \"22\": 5.1,\n      \"22.4\": 5.2,\n      \"22.8\": 5.3,\n      \"23.3\": 5.4,\n      \"23.7\": 5.5,\n      \"24.1\": 5.6,\n      \"24.6\": 5.7,\n      \"25\": 5.8,\n      \"25.4\": 5.9,\n      \"25.9\": 6.0\n    },\n    \"Break Effect_\": {\n      \"5.1\": 0.8,\n      \"5.8\": 0.9,\n      \"6.4\": 1.0,\n      \"10.3\": 1.6,\n      \"11\": 1.7,\n      \"11.6\": 1.8,\n      \"12.3\": 1.9,\n      \"12.9\": 2.0,\n      \"15.5\": 2.4,\n      \"16.2\": 2.5,\n      \"16.8\": 2.6,\n      \"17.4\": 2.7,\n      \"18.1\": 2.8,\n      \"18.7\": 2.9,\n      \"19.4\": 3.0,\n      \"20.7\": 3.2,\n      \"21.3\": 3.3,\n      \"22\": 3.4,\n      \"22.6\": 3.5,\n      \"23.3\": 3.6,\n      \"23.9\": 3.7,\n      \"24.6\": 3.8,\n      \"25.2\": 3.9,\n      \"25.9\": 4.0,\n      \"26.5\": 4.1,\n      \"27.2\": 4.2,\n      \"27.8\": 4.3,\n      \"28.5\": 4.4,\n      \"29.1\": 4.5,\n      \"29.8\": 4.6,\n      \"30.4\": 4.7,\n      \"31.1\": 4.8,\n      \"31.7\": 4.9,\n      \"32.4\": 5.0,\n      \"33\": 5.1,\n      \"33.6\": 5.2,\n      \"34.3\": 5.3,\n      \"34.9\": 5.4,\n      \"35.6\": 5.5,\n      \"36.2\": 5.6,\n      \"36.9\": 5.7,\n      \"37.5\": 5.8,\n      \"38.2\": 5.9,\n      \"38.8\": 6.0\n    }\n  }\n}","import { v4 as uuidv4 } from 'uuid';\nimport { Constants } from \"./constants.ts\";\nimport { RelicRollFixer } from \"./relicRollFixer\";\nimport { Utils } from \"./utils\";\n\nexport const RelicAugmenter = {\n  augment: function (relic) {\n    // console.log('Augmenting relic', relic)\n    let augmentedStats = {}\n\n    // Temporarily skip broken imports\n    if (relic.grade && !relic.main) {\n      return null\n    }\n\n    relic.relicsTabWeight = 0\n    relic.bestCaseWeight = 0\n    relic.averageCaseWeight = 0\n\n    let mainStat = relic.main.stat\n    relic.main.value = RelicRollFixer.fixMainStatvalue(relic)\n    let mainMaxValue = relic.main.value\n\n    augmentedStats.mainStat = mainStat\n    augmentedStats.mainValue = mainMaxValue\n\n    for (let substat of relic.substats) {\n      let stat = substat.stat\n      substat.value = Utils.precisionRound(substat.value)\n      substat.value = RelicRollFixer.fixSubStatValue(stat, substat.value, relic.grade)\n      augmentedStats[stat] = substat.value\n    }\n\n    if (relic.enhance > 12 && relic.grade != 5) {\n      relic.grade = 5\n    }\n\n    if (!relic.id) {\n      relic.id = uuidv4()\n    }\n    relic.augmentedStats = augmentedStats\n    fixAugmentedStats([relic])\n    calculateRelicRatings(relic)\n    return relic\n  }\n}\n\n// Very meh rating, revisit at some point\nfunction calculateRelicRatings(relic) {\n  let cs = relic.augmentedStats[Constants.Stats.ATK_P] * 100 * 1.5 +\n    relic.augmentedStats[Constants.Stats.CD] * 100 +\n    relic.augmentedStats[Constants.Stats.CR] * 100 * 2 +\n    relic.augmentedStats[Constants.Stats.SPD] * 2.6\n\n  let ss = relic.augmentedStats[Constants.Stats.DEF_P] * 100 * 1.2 +\n    relic.augmentedStats[Constants.Stats.HP_P] * 100 * 1.5 +\n    relic.augmentedStats[Constants.Stats.RES] * 100 * 1.5 +\n    relic.augmentedStats[Constants.Stats.SPD] * 2.6\n\n  let ds = relic.augmentedStats[Constants.Stats.ATK_P] * 100 * 1.5 +\n    relic.augmentedStats[Constants.Stats.EHR] * 100 * 1.5 +\n    relic.augmentedStats[Constants.Stats.BE] * 100 +\n    relic.augmentedStats[Constants.Stats.SPD] * 2.6\n\n  relic.cs = cs\n  relic.ss = ss\n  relic.ds = ds\n}\n\nfunction fixAugmentedStats(relics) {\n  return relics.map(x => {\n    for (let stat of Object.values(Constants.Stats)) {\n      x.augmentedStats[stat] = x.augmentedStats[stat] || 0\n      if (!Utils.isFlat(stat)) {\n        if (x.augmentedStats.mainStat == stat) {\n          x.augmentedStats.mainValue = x.augmentedStats.mainValue / 100\n        }\n        x.augmentedStats[stat] = x.augmentedStats[stat] / 100\n      }\n    }\n    return x\n  })\n}\n","import { Constants } from \"./constants.ts\";\n\nexport function getDefaultForm(initialCharacter) {\n  return {\n    \"characterId\": initialCharacter?.id,\n    \"mainBody\": [\n    ],\n    \"mainFeet\": [\n    ],\n    \"mainPlanarSphere\": [\n    ],\n    \"mainLinkRope\": [\n    ],\n    \"relicSets\": [\n    ],\n    \"ornamentSets\": [\n    ],\n    \"characterLevel\": 80,\n    \"characterEidolon\": 0,\n    \"lightConeLevel\": 80,\n    \"lightConeSuperimposition\": 1,\n    \"predictMaxedMainStat\": true,\n    \"rankFilter\": true,\n    \"keepCurrentRelics\": false,\n    \"enhance\": 9,\n    \"grade\": 5,\n    \"enemyLevel\": 95,\n    \"enemyCount\": 1,\n    \"enemyResistance\": 0.2,\n    \"enemyHpPercent\": 1.0,\n    \"mainHead\": [],\n    \"mainHands\": [],\n    \"statDisplay\": 'base',\n    \"weights\": {\n      [Constants.Stats.HP_P]: 1,\n      [Constants.Stats.ATK_P]: 1,\n      [Constants.Stats.DEF_P]: 1,\n      [Constants.Stats.SPD_P]: 1,\n      [Constants.Stats.HP]: 1,\n      [Constants.Stats.ATK]: 1,\n      [Constants.Stats.DEF]: 1,\n      [Constants.Stats.SPD]: 1,\n      [Constants.Stats.CD]: 1,\n      [Constants.Stats.CR]: 1,\n      [Constants.Stats.EHR]: 1,\n      [Constants.Stats.RES]: 1,\n      [Constants.Stats.BE]: 1,\n      topPercent: 100\n    },\n    setConditionals: {\n      [Constants.Sets.PasserbyOfWanderingCloud]: [undefined, true],\n      [Constants.Sets.MusketeerOfWildWheat]: [undefined, true],\n      [Constants.Sets.KnightOfPurityPalace]: [undefined, true],\n      [Constants.Sets.HunterOfGlacialForest]: [undefined, true],\n      [Constants.Sets.ChampionOfStreetwiseBoxing]: [undefined, 5],\n      [Constants.Sets.GuardOfWutheringSnow]: [undefined, true],\n      [Constants.Sets.FiresmithOfLavaForging]: [undefined, true],\n      [Constants.Sets.GeniusOfBrilliantStars]: [undefined, true],\n      [Constants.Sets.BandOfSizzlingThunder]: [undefined, true],\n      [Constants.Sets.EagleOfTwilightLine]: [undefined, true],\n      [Constants.Sets.ThiefOfShootingMeteor]: [undefined, true],\n      [Constants.Sets.WastelanderOfBanditryDesert]: [undefined, 0],\n      [Constants.Sets.LongevousDisciple]: [undefined, 2],\n      [Constants.Sets.MessengerTraversingHackerspace]: [undefined, false],\n      [Constants.Sets.TheAshblazingGrandDuke]: [undefined, 0],\n      [Constants.Sets.PrisonerInDeepConfinement]: [undefined, 0],\n      [Constants.Sets.SpaceSealingStation]: [undefined, true],\n      [Constants.Sets.FleetOfTheAgeless]: [undefined, true],\n      [Constants.Sets.PanCosmicCommercialEnterprise]: [undefined, true],\n      [Constants.Sets.BelobogOfTheArchitects]: [undefined, true],\n      [Constants.Sets.CelestialDifferentiator]: [undefined, false],\n      [Constants.Sets.InertSalsotto]: [undefined, true],\n      [Constants.Sets.TaliaKingdomOfBanditry]: [undefined, true],\n      [Constants.Sets.SprightlyVonwacq]: [undefined, true],\n      [Constants.Sets.RutilantArena]: [undefined, true],\n      [Constants.Sets.BrokenKeel]: [undefined, true],\n      [Constants.Sets.FirmamentFrontlineGlamoth]: [undefined, true],\n      [Constants.Sets.PenaconyLandOfTheDreams]: [undefined, true],\n    }\n  }\n}","import DB from \"./db\";\n\nexport const SaveState = {\n  save: () => {\n    let state = {\n      relics: DB.getRelics(),\n      characters: DB.getCharacters(),\n      scorerId: window.store.getState().scorerId,\n      scoringMetadataOverrides: window.store.getState().scoringMetadataOverrides,\n    }\n\n    console.log('Saved state', state)\n    let stateString = JSON.stringify(state)\n    localStorage.state = stateString\n    return stateString\n  },\n\n  load: () => {\n    try {\n      let state = localStorage.state\n      if (state) {\n        let parsed = JSON.parse(state)\n        console.log('Loaded SaveState', parsed)\n  \n        DB.setStore(parsed)\n        return true\n      }\n  \n      console.log('No SaveState found')\n      return false\n    } catch (e) {\n      console.error('Error loading state', e)\n      // localStorage.clear()\n      return false\n    }\n  }\n}","export const Message = {\n  success: (content, duration) => {\n    console.log('Success message:', content)\n    window.messageApi.open({\n      type: 'success',\n      content: content || '',\n      duration: duration || 3,\n    });\n  },\n\n  error: (content, duration) => {\n    console.warn('Error message:', content)\n    window.messageApi.open({\n      type: 'error',\n      content: content || '',\n      duration: duration || 3,\n    });\n  },\n  \n  warning: (content, duration) => {\n    console.warn('Warning message:', content)\n    window.messageApi.open({\n      type: 'warning',\n      content: content || '',\n      duration: duration || 3,\n    });\n  },\n}","import { OptimizerTabController } from \"./optimizerTabController\"\nimport { RelicAugmenter } from \"./relicAugmenter\"\nimport * as objectHash from 'object-hash'\nimport { create } from 'zustand'\nimport { Constants } from './constants.ts';\nimport { getDefaultForm } from './defaultForm';\nimport { Utils } from \"./utils\";\nimport { SaveState } from \"./saveState\";\nimport { Message } from \"./message\";\n\nlet state = {\n  relics: [],\n  characters: [],\n  metadata: {},\n  relicsById: {},\n  scorerId: undefined,\n  selectedOptimizerCharacter: undefined\n}\n\n// TODO clean up\nlet hashes = [\n  '#scorer',\n  '#getting-started',\n  '#beta'\n]\n\n// React usage\n// let characterTabBlur = store(s => s.characterTabBlur);\n// let setCharacterTabBlur = store(s => s.setCharacterTabBlur);\n\n// Nonreactive usage\n// store.getState().setRelicsById(relicsById)\n\nwindow.store = create((set) => ({\n  relicsById: {},\n  setRelicsById: (x) => set(() => ({ relicsById: x })),\n\n  characters: [],\n  charactersById: {},\n  setCharactersById: (x) => set(() => ({ charactersById: x })),\n  setCharacters: (x) => set(() => ({ characters: x })),\n\n  characterTabSelectedId: undefined,\n  setCharacterTabSelectedId: (x) => set(() => ({ characterTabSelectedId: x })),\n\n  characterTabBlur: false,\n  setCharacterTabBlur: (x) => set(() => ({ characterTabBlur: x })),\n\n  permutationDetails: {\n    Head: 0,\n    Hands: 0,\n    Body: 0,\n    Feet: 0,\n    PlanarSphere: 0,\n    LinkRope: 0,\n    HeadTotal: 0,\n    HandsTotal: 0,\n    BodyTotal: 0,\n    FeetTotal: 0,\n    PlanarSphereTotal: 0,\n    LinkRopeTotal: 0,\n  },\n  setPermutationDetails: (x) => set(() => ({ permutationDetails: x })),\n\n  permutations: 0,\n  setPermutations: (x) => set(() => ({ permutations: x })),\n\n  permutationsSearched: 0,\n  setPermutationsSearched: (x) => set(() => ({ permutationsSearched: x })),\n\n  permutationsResults: 0,\n  setPermutationsResults: (x) => set(() => ({ permutationsResults: x })),\n\n  statDisplay: 'base',\n  setStatDisplay: (x) => set(() => ({ statDisplay: x })),\n\n  activeKey: hashes.includes(window.location.hash) ? window.location.hash : 'optimizer',\n  setActiveKey: (x) => set(() => ({ activeKey: x })),\n\n  scorerId: undefined,\n  setScorerId: (x) => set(() => ({ scorerId: x })),\n\n  scoringMetadataOverrides: {},\n  setScoringMetadataOverrides: (x) => set(() => ({ scoringMetadataOverrides: x })),\n\n  conditionalSetEffectsDrawerOpen: false,\n  setConditionalSetEffectsDrawerOpen: (x) => set(() => ({ conditionalSetEffectsDrawerOpen: x })),\n\n  selectedScoringCharacter: undefined,\n  setSelectedScoringCharacter: (x) => set(() => ({ selectedScoringCharacter: x })),\n\n  selectedOptimizerCharacter: undefined,\n  setSelectedOptimizerCharacter: char => set(() => ({ selectedOptimizerCharacter: char })),\n\n  relicTabFilters: {\n    set: [],\n    part: [],\n    enhance: [],\n    mainStats: [],\n    subStats: [],\n  },\n  setRelicTabFilters: (x) => set(() => ({ relicTabFilters: x })),\n  setFilteredRelics: (relics) => set(() => ({ filteredRelics: relics })),\n}))\n\nexport const DB = {\n  getMetadata: () => state.metadata,\n  setMetadata: (x) => state.metadata = x,\n\n  getCharacters: () => window.store.getState().characters,\n  getCharacterById: (id) => window.store.getState().charactersById[id],\n\n  setCharacters: (x) => {\n    let charactersById = {}\n    for (let character of x) {\n      charactersById[character.id] = character\n    }\n\n    assignRanks(x)\n    window.store.getState().setCharacters(x)\n    window.store.getState().setCharactersById(charactersById)\n  },\n  setCharacter: (x) => {\n    let charactersById = window.store.getState().charactersById\n    charactersById[x.id] = x\n\n    window.store.getState().setCharactersById(charactersById)\n  },\n  addCharacter: (x) => {\n    let characters = DB.getCharacters()\n    characters.push(x);\n    DB.setCharacters(characters);\n  },\n  insertCharacter: (id, index) => {\n    console.log('insert', id, index)\n    let characters = DB.getCharacters()\n    if (index < 0) {\n      index = characters.length\n    }\n    let matchingCharacter = DB.getCharacterById(id)\n    if (!matchingCharacter) return console.warn('No matching character to insert', id, index)\n    let removed = characters.splice(matchingCharacter.rank, 1)\n    characters.splice(index, 0, removed[0])\n    DB.setCharacters(characters)\n  },\n  refreshCharacters: () => {\n    if (window.setCharacterRows) {\n      window.setCharacterRows(DB.getCharacters())\n    }\n  },\n\n  getRelics: () => Object.values(window.store.getState().relicsById),\n  getRelicsById: () => window.store.getState().relicsById,\n  setRelics: (x) => {\n    let relicsById = {}\n    for (let relic of x) {\n      relicsById[relic.id] = relic\n    }\n    window.store.getState().setRelicsById(relicsById)\n  },\n  getRelicById: (id) => window.store.getState().relicsById[id],\n  setRelic: (relic) => {\n    if (!relic.id) return console.warn('No matching relic', relic)\n    let relicsById = window.store.getState().relicsById\n    relicsById[relic.id] = relic\n    window.store.getState().setRelicsById(relicsById)\n  },\n\n  refreshRelics: () => {\n    if (window.setRelicRows) window.setRelicRows(DB.getRelics())\n  },\n\n  // Mostly for debugging\n  getState: () => window.store.getState(),\n\n  getScoringMetadata: (id) => {\n    let defaultScoringMetadata = DB.getMetadata().characters[id].scoringMetadata\n    let scoringMetadataOverrides = window.store.getState().scoringMetadataOverrides[id]\n\n    return scoringMetadataOverrides || defaultScoringMetadata\n  },\n  updateCharacterScoreOverrides: (id, updated) => {\n    let overrides = window.store.getState().scoringMetadataOverrides\n    overrides[id] = updated\n    window.store.getState().setScoringMetadataOverrides(overrides)\n\n    SaveState.save()\n  },\n\n  setStore: (x) => {\n    console.log('Set state', x)\n    let charactersById = {}\n    for (let character of x.characters) {\n      character.equipped = {}\n      charactersById[character.id] = character\n    }\n\n    for (let relic of x.relics) {\n      RelicAugmenter.augment(relic)\n      let char = charactersById[relic.equippedBy]\n      if (char && !char.equipped[relic.part]) {\n        char.equipped[relic.part] = relic.id\n      } else {\n        relic.equippedBy = undefined\n      }\n    }\n\n    window.store.getState().setScorerId(x.scorerId)\n    window.store.getState().setScoringMetadataOverrides(x.scoringMetadataOverrides || {})\n\n    assignRanks(x.characters)\n    DB.setRelics(x.relics)\n    DB.setCharacters(x.characters)\n\n    DB.refreshCharacters()\n    DB.refreshRelics()\n    SaveState.save()\n  },\n  resetStore: () => {\n    DB.setStore({\n      relics: [],\n      characters: []\n    })\n  },\n\n  addFromForm: (form) => {\n    let characters = DB.getCharacters();\n    let found = DB.getCharacterById(form.characterId)\n    if (found) {\n      found.form = {\n        ...found.form,\n        ...form\n      }\n      DB.setCharacters(characters)\n    } else {\n      const defaultForm = getDefaultForm({ id: form.characterId })\n\n      DB.addCharacter({\n        id: form.characterId,\n        form: { ...defaultForm, ...form },\n        equipped: {}\n      })\n    }\n\n    console.log('Updated db characters', characters)\n    window.characterGrid.current.api.updateGridOptions({ rowData: characters })\n  },\n\n  unequipCharacter: (id) => {\n    let character = DB.getCharacterById(id)\n    if (!character) return console.warn('No character to unequip')\n\n    console.log('Unequipping character', id, character)\n\n    for (let part of Object.values(Constants.Parts)) {\n      let equippedId = character.equipped[part]\n      if (!equippedId) continue\n\n      let relicMatch = DB.getRelicById(equippedId)\n\n      character.equipped[part] = undefined\n\n      if (relicMatch) {\n        relicMatch.equippedBy = undefined\n        DB.setRelic(relicMatch)\n      }\n    }\n    DB.setCharacter(character)\n  },\n\n  removeCharacter: (characterId) => {\n    DB.unequipCharacter(characterId)\n    let characters = DB.getCharacters()\n    characters = characters.filter(x => x.id != characterId)\n    DB.setCharacters(characters)\n  },\n\n  unequipRelicById: (id) => {\n    if (!id) return console.warn('No relic')\n    let relic = DB.getRelicById(id)\n\n    console.log('UNEQUIP RELIC')\n\n    let characters = DB.getCharacters()\n    for (let character of characters) {\n      if (character.equipped && character.equipped[relic.part] && character.equipped[relic.part] == relic.id) {\n        character.equipped[relic.part] = undefined\n      }\n    }\n    DB.setCharacters(characters)\n\n    relic.equippedBy = undefined\n    DB.setRelic(relic)\n  },\n\n  equipRelic: (relic, characterId) => {\n    if (!relic || !relic.id) return console.warn('No relic')\n    if (!characterId) return console.warn('No character')\n    relic = DB.getRelicById(relic.id)\n\n    let prevOwnerId = relic.equippedBy;\n    let character = DB.getCharacters().find(x => x.id == characterId)\n    let prevCharacter = DB.getCharacters().find(x => x.id == prevOwnerId)\n    let prevRelic = DB.getRelicById(character.equipped[relic.part])\n\n    if (prevRelic) {\n      DB.unequipRelicById(prevRelic.id)\n    }\n\n    if (prevRelic && prevCharacter) {\n      prevCharacter.equipped[relic.part] = prevRelic.id\n      prevRelic.equippedBy = prevCharacter.id\n      DB.setCharacter(prevCharacter)\n      DB.setRelic(prevRelic)\n    }\n    else if (prevCharacter) {\n      prevCharacter.equipped[relic.part] = undefined\n      DB.setCharacter(prevCharacter)\n    }\n\n    character.equipped[relic.part] = relic.id\n    relic.equippedBy = character.id\n    DB.setCharacter(character)\n    DB.setRelic(relic)\n  },\n\n  equipRelicIdsToCharacter: (relicIds, characterId) => {\n    if (!characterId) return console.warn('No characterId to equip to')\n    console.log('Equipping relics to character', relicIds, characterId)\n\n    for (let relicId of relicIds) {\n      DB.equipRelic({ id: relicId }, characterId)\n    }\n  },\n\n  deleteRelic: (id) => {\n    if (!id) return Message.error('Unable to delete relic')\n    DB.unequipRelicById(id)\n    let relicsById = window.store.getState().relicsById\n    delete relicsById[id]\n    window.store.getState().setRelicsById(relicsById)\n\n    // This refreshes the grid for the character equipped relics color coding\n    if (window.characterGrid?.current?.api) {\n      window.characterGrid.current.api.redrawRows()\n    }\n  },\n\n  // These relics are missing speed decimals from OCR importer\n  // We overwrite any existing relics with imported ones\n  mergeRelicsWithState: (newRelics, newCharacters) => {\n    let oldRelics = DB.getRelics()\n    newRelics = Utils.clone(newRelics)\n    newCharacters = Utils.clone(newCharacters)\n\n    console.log('Merging relics', newRelics, newCharacters)\n\n    // Add new characters\n    if (newCharacters) {\n      for (const character of newCharacters) {\n        DB.addFromForm(character)\n      }\n    }\n\n    let characters = DB.getCharacters()\n\n    // Generate a hash of existing relics for easy lookup\n    let oldRelicHashes = {}\n    for (let oldRelic of oldRelics) {\n      let hash = hashRelic(oldRelic)\n      oldRelicHashes[hash] = oldRelic;\n    }\n\n    let replacementRelics = []\n    for (let newRelic of newRelics) {\n      let hash = hashRelic(newRelic)\n\n      // Compare new relic hashes to old relic hashes\n      let found = oldRelicHashes[hash]\n      let stableRelicId\n      if (found) {\n        if (newRelic.equippedBy && newCharacters) {\n          // Update the owner of the existing relic with the newly imported owner\n          found.equippedBy = newRelic.equippedBy\n          newRelic = found\n        }\n\n        // Save the old relic because it may have edited speed values, delete the hash to prevent duplicates\n        replacementRelics.push(found)\n        stableRelicId = found.id\n        delete oldRelicHashes[hash]\n      } else {\n        // No match found - save the new relic\n        stableRelicId = newRelic.id\n        replacementRelics.push(newRelic)\n      }\n\n      // Update the character's equipped inventory\n      if (newRelic.equippedBy && newCharacters) {\n        let character = characters.find(x => x.id == newRelic.equippedBy)\n        if (character) {\n          character.equipped[newRelic.part] = stableRelicId\n        } else {\n          console.error('No character to equip relic to', newRelic)\n        }\n      }\n    }\n\n    console.log('Replacement relics', replacementRelics)\n\n    DB.setRelics(replacementRelics);\n\n    // Clean up any deleted relic ids that are still equipped\n    for (let character of characters) {\n      for (let part of Object.values(Constants.Parts)) {\n        if (character.equipped && character.equipped[part] && !DB.getRelicById(character.equipped[part])) {\n          character.equipped[part] = undefined\n        }\n      }\n    }\n\n    // Clean up relics that are double equipped\n    for (let relic of DB.getRelics()) {\n      if (!relic.equippedBy) continue\n\n      let character = DB.getCharacterById(relic.equippedBy)\n      if (!character || character.equipped[relic.part] != relic.id) {\n        relic.equippedBy = undefined\n      }\n    }\n\n    DB.setRelics(replacementRelics)\n    DB.setCharacters(characters)\n\n    window.relicsGrid.current.api.updateGridOptions({ rowData: replacementRelics })\n\n    window.characterGrid.current.api.redrawRows()\n\n    // TODO this probably shouldn't be in this file\n    let fieldValues = OptimizerTabController.getForm()\n    window.onOptimizerFormValuesChange({}, fieldValues);\n  },\n\n  // These relics have accurate speed values from relic scorer import\n  // We keep the existing set of relics and only overwrite ones that match the ones that match an imported one\n  mergeVerifiedRelicsWithState: (newRelics) => {\n    let oldRelics = Utils.clone(DB.getRelics())\n    newRelics = Utils.clone(newRelics)\n\n    // part set grade mainstat substatStats\n    let oldRelicPartialHashes = {}\n    for (let oldRelic of oldRelics) {\n      let hash = partialHashRelic(oldRelic)\n      if (!oldRelicPartialHashes[hash]) oldRelicPartialHashes[hash] = []\n      oldRelicPartialHashes[hash].push(oldRelic);\n    }\n\n    // Tracking these for debug / logging\n    let updatedOldRelics = []\n    let addedNewRelics = []\n\n    for (let newRelic of newRelics) {\n      newRelic.equippedBy = undefined\n      let partialHash = partialHashRelic(newRelic)\n      let partialMatches = oldRelicPartialHashes[partialHash] || []\n\n      let match\n      for (let partialMatch of partialMatches) {\n        if (newRelic.enhance < partialMatch.enhance) continue\n        if (newRelic.substats.length < partialMatch.substats.length) continue\n\n        let exit = false\n        let upgrades = 0\n        for (let i = 0; i < partialMatch.substats.length; i++) {\n          let matchSubstat = partialMatch.substats[i]\n          let newSubstat = newRelic.substats[i]\n\n          // Different substats mean different relics - break\n          if (matchSubstat.stat != newSubstat.stat) { exit = true; break }\n          if (compareSameTypeSubstat(matchSubstat, newSubstat) == -1) { exit = true; break }\n\n          // Track if the number of stat increases make sense\n          if (compareSameTypeSubstat(matchSubstat, newSubstat) == 1) {\n            upgrades++\n          }\n        }\n\n        if (exit) continue\n\n        let possibleUpgrades = Math.round((Math.floor(newRelic.enhance / 3) * 3 - Math.floor(partialMatch.enhance / 3) * 3) / 3) // + (newRelic.substats.length > partialMatch.substats.length ? 1 : 0)\n        if (upgrades > possibleUpgrades) continue\n\n        // If it passes all the tests, keep it\n        match = partialMatch\n        break\n      }\n\n      if (match) {\n        match.substats = newRelic.substats\n        match.main = newRelic.main\n        match.enhance = newRelic.enhance\n\n        match.verified = true\n        updatedOldRelics.push(match)\n      } else {\n        oldRelics.push(newRelic)\n\n        newRelic.verified = true\n        addedNewRelics.push(newRelic)\n      }\n    }\n\n    console.warn('addedNewRelics', addedNewRelics)\n    console.warn('updatedOldRelics', updatedOldRelics)\n\n    oldRelics.map(x => RelicAugmenter.augment(x))\n    DB.setRelics(oldRelics)\n    DB.refreshRelics()\n    window.characterGrid.current.api.redrawRows()\n\n    if (updatedOldRelics.length) Message.success(`Updated stats for ${updatedOldRelics.length} existing relics`, 8)\n    if (addedNewRelics.length) Message.success(`Added ${addedNewRelics.length} new relics`, 8)\n\n    // TODO this probably shouldn't be in this file\n    let fieldValues = OptimizerTabController.getForm()\n    window.onOptimizerFormValuesChange({}, fieldValues);\n  },\n}\n\nexport default DB;\n\nfunction assignRanks(characters) {\n  for (let i = 0; i < characters.length; i++) {\n    characters[i].rank = i\n  }\n\n  return characters;\n}\n\nfunction hashRelic(relic) {\n  let substatValues = []\n  let substatStats = []\n\n  for (let substat of relic.substats) {\n    if (Utils.isFlat(substat.stat)) {\n      // Flat atk/def/hp/spd values we floor to an int\n      substatValues.push(Math.floor(substat.value))\n    } else {\n      // Other values we match to 1 decimal point due to OCR\n      substatValues.push(Utils.precisionRound(Utils.truncate10ths(substat.value)))\n    }\n    substatStats.push(substat.stat)\n  }\n  let hashObject = {\n    part: relic.part,\n    set: relic.set,\n    grade: relic.grade,\n    enhance: relic.enhance,\n    mainstat: relic.main.stat,\n    mainvalue: Math.floor(relic.main.value),\n    substatValues: substatValues, // Match to 1 decimal point\n    substatStats: substatStats,\n  }\n  return objectHash(hashObject)\n}\n\n// -1: old > new, 0: old == new, 1, new > old\nfunction compareSameTypeSubstat(oldSubstat, newSubstat) {\n  let oldValue\n  let newValue\n  if (Utils.isFlat(oldSubstat.stat)) {\n    // Flat atk/def/hp/spd values we floor to an int\n    oldValue = Math.floor(oldSubstat.value)\n    newValue = Math.floor(newSubstat.value)\n  } else {\n    // Other values we match to 1 decimal point due to OCR\n    oldValue = Utils.precisionRound(Utils.truncate10ths(oldSubstat.value))\n    newValue = Utils.precisionRound(Utils.truncate10ths(newSubstat.value))\n  }\n\n  if (oldValue == newValue) return 0\n  if (oldValue < newValue) return 1\n  return -1\n}\n\nfunction partialHashRelic(relic) {\n  let baseSubstatCount = relic.grade == 5 ? 3 : 2\n\n  let hashObject = {\n    part: relic.part,\n    set: relic.set,\n    grade: relic.grade,\n    mainstat: relic.main.stat,\n    substatStats: relic.substats.slice(0, baseSubstatCount).map(x => x.stat)\n  }\n\n  return objectHash(hashObject)\n}","import { Typography, } from 'antd';\nimport styled from 'styled-components';\n\nconst { Text } = Typography;\n\nexport const HeaderText = styled(Text)`\n  text-decoration: underline;\n  text-decoration-color: #6d97ffb3;\n  text-underline-offset: 2px\n`","import { Flex, Form, InputNumber, Slider, Switch, Typography } from \"antd\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nlet justify = 'flex-start'\nlet align = 'center'\nlet inputWidth = 75\nlet numberWidth = 65\nlet sliderWidth = 145\n\nconst Text = styled(Typography)`\n  white-space: pre-line;\n`\nfunction precisionRound(number, precision = 8) {\n  let factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nexport function FormSwitch(props) {\n  return (\n    <Flex justify={justify} align={align}>\n      <div style={{minWidth: inputWidth, display: 'block'}}>\n        <Form.Item name={[conditionalType(props), props.name]} valuePropName='checked'>\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            disabled={props.disabled}\n            defaultChecked={!props.disabled}\n          />\n        </Form.Item>\n      </div>\n      <Text>{props.text}</Text>\n    </Flex>\n  )\n}\nFormSwitch.propTypes = {\n  disabled: PropTypes.bool,\n  text: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport function FormSlider(props) {\n  const [inputValue, setInputValue] = useState(1);\n  const onChange = (newValue) => {\n    setInputValue(newValue);\n  };\n\n  let multiplier = (props.percent ? 100 : 1)\n  let step = props.percent ? 0.01 : 1\n  let symbol = props.percent ? '%' : ''\n\n  return (\n    <Flex vertical gap={5} style={{marginBottom: 0}}>\n      <Flex justify={justify} align={align}>\n        <div style={{minWidth: inputWidth, display: 'block'}}>\n          <Form.Item name={[conditionalType(props), props.name]}>\n            <InputNumber\n              min={props.min}\n              max={props.max}\n              controls={false}\n              size='small'\n              style={{\n                width: numberWidth,\n              }}\n              parser={(value) => value == null || value == '' ? 0 : precisionRound(value / multiplier) }\n              formatter={(value) => `${precisionRound(value * multiplier)}`}\n              addonAfter={symbol}\n              onChange={onChange}\n              disabled={props.disabled}\n            />\n          </Form.Item>\n        </div>\n        <Text>{props.text}</Text>\n      </Flex>\n      <Flex align='center' justify='flex-start' gap={10} style={{height: 14}}>\n        <Form.Item name={[conditionalType(props), props.name]}>\n          <Slider\n            min={props.min}\n            max={props.max}\n            step={step}\n            value={typeof inputValue === 'number' ? inputValue : 0}\n            style={{\n              minWidth: sliderWidth,\n              marginTop: 0,\n              marginBottom: 0,\n              marginLeft: 1\n            }}\n            tooltip={{\n              formatter: (value) => `${precisionRound(value * multiplier)}${symbol}`\n            }}\n            onChange={onChange}\n            disabled={props.disabled}\n          />\n        </Form.Item>\n        <Text style={{minWidth: 20, marginBottom: 2, textAlign: 'center'}}>{`${precisionRound(props.max * multiplier)}${symbol}`}</Text>\n      </Flex>\n    </Flex>\n  )\n}\nFormSlider.propTypes = {\n  disabled: PropTypes.bool,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  text: PropTypes.string,\n  name: PropTypes.string,\n  percent: PropTypes.bool,\n}\n\n\nfunction conditionalType(props) {\n  if (props.lc) {\n    return 'lightConeConditionals'\n  }\n  return 'characterConditionals'\n}","import { Constants } from \"./constants.ts\";\n\n// let baseUrl = process.env.PUBLIC_URL // Local testing;\nlet baseUrl = 'https://d28ecrnsw8u0fj.cloudfront.net';\n\nlet pathFromClassMapping\nlet iconFromStatMapping\nexport const Assets = {\n  getStatIcon: (stat, percented) => {\n    if (!iconFromStatMapping) {\n      iconFromStatMapping = {\n        [Constants.Stats.HP]: 'IconMaxHP.png',\n        [Constants.Stats.ATK]: 'IconAttack.png',\n        [Constants.Stats.DEF]: 'IconDefence.png',\n        [Constants.Stats.HP_P]: 'IconMaxHP.png',\n        [Constants.Stats.ATK_P]: 'IconAttack.png',\n        [Constants.Stats.DEF_P]: 'IconDefence.png',\n        [Constants.Stats.SPD]: 'IconSpeed.png',\n        [Constants.Stats.SPD_P]: 'IconSpeed.png',\n        [Constants.Stats.CR]: 'IconCriticalChance.png',\n        [Constants.Stats.CD]: 'IconCriticalDamage.png',\n        [Constants.Stats.EHR]: 'IconStatusProbability.png',\n        [Constants.Stats.RES]: 'IconStatusResistance.png',\n        [Constants.Stats.BE]: 'IconBreakUp.png',\n        [Constants.Stats.ERR]: 'IconEnergyRecovery.png',\n        [Constants.Stats.OHB]: 'IconHealRatio.png',\n        [Constants.Stats.Physical_DMG]: 'IconPhysicalAddedRatio.png',\n        [Constants.Stats.Fire_DMG]: 'IconFireAddedRatio.png',\n        [Constants.Stats.Ice_DMG]: 'IconIceAddedRatio.png',\n        [Constants.Stats.Lightning_DMG]: 'IconThunderAddedRatio.png',\n        [Constants.Stats.Wind_DMG]: 'IconWindAddedRatio.png',\n        [Constants.Stats.Quantum_DMG]: 'IconQuantumAddedRatio.png',\n        [Constants.Stats.Imaginary_DMG]: 'IconImaginaryAddedRatio.png',\n      }\n    }\n    if (stat == 'CV') return baseUrl + `/assets/misc/cv.png`\n    if (stat == Constants.Stats.HP_P && percented) return baseUrl + `/assets/misc/IconMaxHPPercent.png`\n    if (stat == Constants.Stats.ATK_P && percented) return baseUrl + `/assets/misc/IconAttackPercent.png`\n    if (stat == Constants.Stats.DEF_P && percented) return baseUrl + `/assets/misc/IconDefencePercent.png`\n    if (!stat || !iconFromStatMapping[stat]) return ''\n\n    return baseUrl + `/assets/icon/property/` + iconFromStatMapping[stat]\n  },\n  getSampleSave: () => {\n    return baseUrl + `/sample-save.json`\n  },\n  getCharacterPortrait: (characterId) => {\n    if (!characterId) return ''\n    return baseUrl + `/assets/image/character_portrait_resized/resized${characterId}.png`\n  },\n  getCharacterPortraitById: (id) => {\n    if (!id) {\n      console.warn('No id found')\n      return ''\n    }\n\n    return baseUrl + `/assets/image/character_portrait_resized/resized${id}.png`\n  },\n  getCharacterAvatarById: (id) => {\n    if (!id) return ''\n\n    return baseUrl + `/assets/icon/avatar/${id}.png`\n  },\n  getCharacterIconById: (id) => {\n    if (!id) return ''\n\n    return baseUrl + `/assets/icon/character/${id}.png`\n  },\n\n  getCharacterPreview: (character) => {\n    if (!character) return ''\n    return baseUrl + `/assets/${character.preview}`\n  },\n  getCharacterPreviewById: (id) => {\n    if (!id) return ''\n    return baseUrl + `/assets/image/character_preview/${id}.png`\n  },\n\n  getLightConePortrait: (lightCone) => {\n    if (!lightCone) return ''\n    return baseUrl + `/assets/image/light_cone_portrait/${lightCone.id}.png`\n  },\n  getPath: (path) => {\n    if (!path) return ''\n    return baseUrl + `/assets/icon/path/${path}.png`\n  },\n  getPathFromClass: (c) => {\n    if (!pathFromClassMapping) {\n      pathFromClassMapping = {\n        'Warrior': 'Destruction',\n        'Warlock': 'Nihility',\n        'Knight': 'Preservation',\n        'Priest': 'Abundance',\n        'Rogue': 'Hunt',\n        'Shaman': 'Harmony',\n        'Mage': 'Erudition',\n      }\n    }\n    if (!c || !pathFromClassMapping[c]) return ''\n    return baseUrl + `/assets/icon/path/${pathFromClassMapping[c]}.png`\n  },\n\n  getElement: (element) => {\n    if (!element) return ''\n    if (element == 'Thunder') element = 'Lightning'\n    return baseUrl + `/assets/icon/element/${element}.png`\n  },\n  getBlank: () => {\n    return baseUrl + '/assets/misc/blank.png'\n  },\n  getQuestion: () => {\n    return baseUrl + '/assets/misc/tooltip.png'\n  },\n  getLogo: () => {\n    return baseUrl + '/assets/misc/logo.png'\n  },\n  getDiscord: () => {\n    return baseUrl + '/assets/misc/badgediscord.png'\n  },\n  getStar: () => {\n    return baseUrl + '/assets/icon/deco/StarBig.png'\n  },\n  getGuideImage: (name) => {\n    return baseUrl + '/assets/guide/' + name + '.png'\n  },\n  getInventory: () => {\n    return baseUrl + '/assets/icon/sign/ShopMaterialsIcon.png'\n  },\n  getStarBw: () => {\n    return baseUrl + '/assets/icon/sign/QuestMainIcon.png'\n  },\n  getMisc: (filename) => {\n    return baseUrl + '/assets/misc/' + filename\n  },\n\n  getPart: (part) => {\n    let mapping = {\n      [Constants.Parts.Head]: 'head',\n      [Constants.Parts.Hands]: 'hands',\n      [Constants.Parts.Body]: 'body',\n      [Constants.Parts.Feet]: 'feet',\n      [Constants.Parts.PlanarSphere]: 'planarSphere',\n      [Constants.Parts.LinkRope]: 'linkRope',\n    }\n\n    return baseUrl + `/assets/misc/${mapping[part]}.png`\n  },\n\n  getSetImage: (set, part) => {\n    if (!part) {\n      part = 'base'\n    }\n    const setToId = {\n      [Constants.Sets.PasserbyOfWanderingCloud]: '101',\n      [Constants.Sets.MusketeerOfWildWheat]: '102',\n      [Constants.Sets.KnightOfPurityPalace]: '103',\n      [Constants.Sets.HunterOfGlacialForest]: '104',\n      [Constants.Sets.ChampionOfStreetwiseBoxing]: '105',\n      [Constants.Sets.GuardOfWutheringSnow]: '106',\n      [Constants.Sets.FiresmithOfLavaForging]: '107',\n      [Constants.Sets.GeniusOfBrilliantStars]: '108',\n      [Constants.Sets.BandOfSizzlingThunder]: '109',\n      [Constants.Sets.EagleOfTwilightLine]: '110',\n      [Constants.Sets.ThiefOfShootingMeteor]: '111',\n      [Constants.Sets.WastelanderOfBanditryDesert]: '112',\n      [Constants.Sets.LongevousDisciple]: '113',\n      [Constants.Sets.MessengerTraversingHackerspace]: '114',\n      [Constants.Sets.TheAshblazingGrandDuke]: '115',\n      [Constants.Sets.PrisonerInDeepConfinement]: '116',\n\n      [Constants.Sets.SpaceSealingStation]: '301',\n      [Constants.Sets.FleetOfTheAgeless]: '302',\n      [Constants.Sets.PanCosmicCommercialEnterprise]: '303',\n      [Constants.Sets.BelobogOfTheArchitects]: '304',\n      [Constants.Sets.CelestialDifferentiator]: '305',\n      [Constants.Sets.InertSalsotto]: '306',\n      [Constants.Sets.TaliaKingdomOfBanditry]: '307',\n      [Constants.Sets.SprightlyVonwacq]: '308',\n      [Constants.Sets.RutilantArena]: '309',\n      [Constants.Sets.BrokenKeel]: '310',\n      [Constants.Sets.FirmamentFrontlineGlamoth]: '311',\n      [Constants.Sets.PenaconyLandOfTheDreams]: '312',\n    }\n\n    const partToId = {\n      base: '',\n      [Constants.Parts.Head]: '_0',\n      [Constants.Parts.Hands]: '_1',\n      [Constants.Parts.Body]: '_2',\n      [Constants.Parts.Feet]: '_3',\n      [Constants.Parts.PlanarSphere]: '_0',\n      [Constants.Parts.LinkRope]: '_1',\n    }\n    return baseUrl + `/assets/icon/relic/${setToId[set]}${partToId[part]}.png`;\n  }\n}","import React from \"react\";\nimport { Popover } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { Assets } from \"../lib/assets\";\n\nexport const TooltipImage = (props) => (\n  <Popover\n    content={props.type.content}\n    title={props.type.title}\n    overlayStyle={{\n      width: 500\n    }}\n  >\n    <img src={Assets.getQuestion()} style={{width: 16, opacity: 0.6}}/>\n  </Popover>\n)\nTooltipImage.propTypes = {\n  type: PropTypes.object,\n}\n","import React from \"react\";\nimport { Flex } from \"antd\"\n\nexport const Hint = {\n  ratingFilters: () => {\n    return {\n      title: 'Rating filters',\n      content: (\n        <Flex vertical gap={10}>\n          <p>CV - Crit Value, measuring the value of crit stats on the build. Calculated using CD + CR * 2</p>\n          <p>Weight - Sum of substat weights of all 6 relics, from the Substat weight filter</p>\n          <p>Ehp - Effective HP, measuring how tanky a max level character is. Calculated using HP & DEF & damage reduction passives</p>\n          <p>Basic / Skill / Ult / Fua (Follow-up attack) / Dot (Damage over time) - Skill damage calculations, based on the environmental factors in character passives / light cone passives / enemy options.</p>\n        </Flex>\n      )\n    }\n  },\n\n  combatBuffs: () => {\n    return {\n      title: 'Combat buffs',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Additional team buffs to apply to the calculations. Note that buffs from character / light cone self-buffs and passives and traces are already included in calculations.</p>\n        </Flex>\n      )\n    }\n  },\n\n  statFilters: () => {\n    return {\n      title: 'Stat filters',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Min / Max filters for character stats, inclusive. The optimizer will only show results within these ranges </p>\n          <p>Stat abbreviations are ATK / HP / DEF / SPD / Crit Rate / Crit Damage / Effect Hit Rate / Effect RES / Break Effect</p>\n          <p>NOTE: Ingame speed decimals are truncated so you may see speed values ingame higher than shown here. This is because the OCR importer can't detect the hidden decimals.</p>\n        </Flex>\n      )\n    }\n  },\n\n  mainStats: () => {\n    return {\n      title: 'Main stats',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Select main stats to use for optimization search. Multiple values can be selected for more options</p>\n        </Flex>\n      )\n    }\n  },\n\n  sets: () => {\n    return {\n      title: 'Sets',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Select the relic and ornament sets to filter results by. Multiple sets can be selected for more options</p>\n\n          <p>Set effects will be accounted for in calculations, use the Conditional set effects menu to customize which effects are active.</p>\n        </Flex>\n      )\n    }\n  },\n\n  character: () => {\n    return {\n      title: 'Character',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Select the character and level / eidolon</p>\n          <p>Levels will affect base stats used in the calculation. Eidolon effects are applied under the Character passives panel.</p>\n        </Flex>\n      )\n    }\n  },\n\n  characterPassives: () => {\n    return {\n      title: 'Character passives',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Select the conditional effects to apply to the character.</p>\n          <p>Effects that rely on combat stats or environment state will be applied by default, so only the options that require user input are listed here.</p>\n        </Flex>\n      )\n    }\n  },\n\n  lightConePassives: () => {\n    return {\n      title: 'Light cone passives',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Select the conditional effects to apply to the light cone.</p>\n          <p>Effects that rely on combat stats or environment state will be applied by default, so only the options that require user input are listed here.</p>\n        </Flex>\n      )\n    }\n  },\n\n  lightCone: () => {\n    return {\n      title: 'Light cone',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Select the light cone and level / superimposition</p>\n          <p>Levels will affect base stats used in the calculation. Superimposition and passive effects are applied under the Light cone passives panel.</p>\n        </Flex>\n      )\n    }\n  },\n\n  actions: () => {\n    return {\n      title: 'Actions',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Start - Begin optimization search with the selected filters</p>\n          <p>Filter - Re-apply the search filters to existing results. Use this to narrow filters without restarting a search</p>\n          <p>Cancel - Cancel an in progress search and display results</p>\n          <p>Reset - Clear all filters</p>\n        </Flex>\n      )\n    }\n  },\n\n  optimizerOptions: () => {\n    return {\n      title: 'Optimizer options',\n      content: (\n        <Flex vertical gap={10}>\n          <p><strong>Character rank filter</strong> - Rank characters by dragging them on the character page, and when enabled, characters may only take relics from lower ranked characters</p>\n          <p><strong>Maxed main stat</strong> - Assume the main stat for relics are maxed</p>\n          <p><strong>Keep current relics</strong> - The character must use its currently equipped items, and the optimizer will try to fill in empty slots</p>\n          <p><strong>Use equipped</strong> - If OFF, Optimizer will NOT consider relics currently equipped by a character</p>\n          <p><strong>Enhance / grade</strong> - Select the minimum enhance to search for and minimum stars for relics to include</p>\n          <p><strong>Stat display</strong> - Select which format of stats to apply to filters and display in the table. Base stats are the values you would see in the ingame character menu. Combat stats take into account all the buffs and passives applied to the character in combat as they perform an attack.</p>\n        </Flex>\n      )\n    }\n  },\n\n  relics: () => {\n    return {\n      title: 'Relics',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Weight - The relic's current weight as defined by the scoring algorithm + 64.8 weight for an appropriate main stat</p>\n          <p>Avg case - The relic's potential weight if rolls went into the average weight of the relic's substats</p>\n          <p>Best case - The relic's maximum potential weight if all future rolls went into the character's desired stats</p>\n        </Flex>\n      )\n    }\n  },\n\n  optimizationDetails: () => {\n    return {\n      title: 'Optimization details',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Shows how many relics are being used in the optimization search, after all filters are applied</p>\n          <p>Perms - Number of permutations that need to be searched. Narrow your filters to reduce permutations & search time</p>\n          <p>Searched - Number of permutations already searched</p>\n          <p>Results - Number of displayed results that satisfy the stat filters</p>\n        </Flex>\n      )\n    }\n  },\n\n  enemyOptions: () => {\n    return {\n      title: 'Enemy options',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Level - Enemy level, affects enemy DEF calculations</p>\n          <p>Targets - Number of targets in the battle. The target enemy is always assumed to be in the center, and damage calculations are only for the main target.</p>\n          <p>RES - Enemy elemental RES. RES is set to 0 when the enemy's elemental weakness is enabled.</p>\n          <p>HP% - Enemy current health %, affects certain characters with damage increases or additional effects based on enemy HP.</p>\n          <p>Elemental weakness - Whether the enemy is weak to the character's type. Enabling this sets enemy elemental RES % to 0.</p>\n          <p>Weakness broken - Whether the enemy's toughness bar is broken. Affects damage calculations and certain character passives.</p>\n        </Flex>\n      )\n    }\n  },\n\n  substatWeightFilter: () => {\n    return {\n      title: 'Substat weight filter',\n      content: (\n        <Flex vertical gap={10}>\n          <p>This filter is used to reduce the number of permutations the optimizer has to process.</p>\n          <p>It works by first scoring each relic per slot by the weights defined, then sorting the relics in each slot by their score.</p>\n          <p>Then, the filter only uses the Top X% of the scored relics in the optimization search. The number of filtered relics are visible in the Permutations display on the sidebar.</p>\n          <p>Note that setting the Top X% too low may result in some builds not being displayed, if the filter ends up excludes a key relic. Use this filter with caution, but on large searches it makes a large impact on reducing search time.</p>\n        </Flex>\n      )\n    }\n  },\n}","/* eslint-disable no-unused-vars  */\n\nimport { Flex } from \"antd\";\nimport React from \"react\";\nimport { HeaderText } from \"../components/HeaderText\";\nimport { Constants } from './constants.ts'\nimport { FormSlider, FormSwitch } from \"../components/optimizerTab/FormConditionalInputs\";\nimport { TooltipImage } from \"../components/TooltipImage\";\nimport { Hint } from \"./hint\";\n\nlet Stats = Constants.Stats\n\nlet defaultGap = 5\n\nconst lightConeOptionMapping = {\n  20000: Arrows,\n  20001: Cornucopia,\n  20002: CollapsingSky,\n  20003: Amber,\n  20004: Void,\n  20005: Chorus,\n  20006: DataBank,\n  20007: DartingArrow,\n  20008: FineFruit,\n  20009: ShatteredHome,\n  20010: Defense,\n  20011: Loop,\n  20012: MeshingCogs,\n  20013: Passkey,\n  20014: Adversarial,\n  20015: Multiplication,\n  20016: MutualDemise,\n  20017: Pioneering,\n  20018: HiddenShadow,\n  20019: Mediation,\n  20020: Sagacity,\n  21000: PostOpConversation,\n  21001: GoodNightAndSleepWell,\n  21002: DayOneOfMyNewLife,\n  21003: OnlySilenceRemains,\n  21004: MemoriesOfThePast,\n  21005: TheMolesWelcomeYou,\n  21006: TheBirthOfTheSelf,\n  21007: SharedFeeling,\n  21008: EyesOfThePrey,\n  21009: LandausChoice,\n  21010: Swordplay,\n  21011: PlanetaryRendezvous,\n  21012: ASecretVow,\n  21013: MakeTheWorldClamor,\n  21014: PerfectTiming, // Does the ohb apply after passives?\n  21015: ResolutionShinesAsPearlsOfSweat,\n  21016: TrendOfTheUniversalMarket, // Revisit dot\n  21017: SubscribeForMore,\n  21018: DanceDanceDance,\n  21019: UnderTheBlueSky,\n  21020: GeniusesRepose,\n  21021: QuidProQuo,\n  21022: Fermata,\n  21023: WeAreWildfire,\n  21024: RiverFlowsInSpring,\n  21025: PastAndFuture,\n  21026: WoofWalkTime,\n  21027: TheSeriousnessOfBreakfast,\n  21028: WarmthShortensColdNights,\n  21029: WeWillMeetAgain, // Does this get affected by crit / dmg boosts?\n  21030: ThisIsMe, // Def scaling dmg not implemented\n  21031: ReturnToDarkness,\n  21032: CarveTheMoonWeaveTheClouds,\n  21033: NowhereToRun,\n  21034: TodayIsAnotherPeacefulDay,\n  22000: BeforeTheTutorialMissionStarts,\n  22001: HeyOverHere,\n  23000: NightOnTheMilkyWay,\n  23001: InTheNight,\n  23002: SomethingIrreplaceable,\n  23003: ButTheBattleIsntOver,\n  23004: InTheNameOfTheWorld, // Skill atk buff not implemented\n  23005: MomentOfVictory,\n  23006: PatienceIsAllYouNeed, // Revisit dot\n  23007: IncessantRain,\n  23008: EchoesOfTheCoffin,\n  23009: TheUnreachableSide,\n  23010: BeforeDawn,\n  23011: SheAlreadyShutHerEyes,\n  23012: SleepLikeTheDead,\n  23013: TimeWaitsForNoOne,\n  23014: IShallBeMyOwnSword,\n  23015: BrighterThanTheSun,\n  23016: WorrisomeBlissful,\n  23017: NightOfFright,\n  23018: AnInstantBeforeAGaze,\n  23019: PastSelfInMirror,\n  23020: BaptismOfPureThought,\n  24000: OnTheFallOfAnAeon,\n  24001: CruisingInTheStellarSea,\n  24002: TextureOfMemories,\n  24003: SolitaryHealing,\n  23021: EarthlyEscapade,\n  23022: ReforgedRemembrance,\n}\n\nfunction BaptismOfPureThought(s) {\n  let sValuesCd = [0.08, 0.09, 0.10, 0.11, 0.12]\n  let sValuesDmg = [0.36, 0.42, 0.48, 0.54, 0.60]\n  let sValuesFuaPen = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='debuffCdStacks' text='Debuff cd stacks' min={0} max={3} lc />\n        <FormSwitch name='postUltBuff' text='Disputation ult cd / fua def pen buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      debuffCdStacks: 3,\n      postUltBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CD] += r.debuffCdStacks * sValuesCd[s]\n      x.ELEMENTAL_DMG += r.postUltBuff ? sValuesDmg[s] : 0\n      x.FUA_DEF_PEN += r.postUltBuff ? sValuesFuaPen[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PastSelfInMirror(s) {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltDmgBuff' text='Post ult dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.postUltDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SolitaryHealing(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltDotDmgBuff' text='Post ult dot dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltDotDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DOT_BOOST += r.postUltDotDmgBuff ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TextureOfMemories(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='activeShieldDmgDecrease' text='Active shield dmg decrease' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      activeShieldDmgDecrease: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += (r.activeShieldDmgDecrease) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction CruisingInTheStellarSea(s) {\n  let sValuesCr = [0.08, 0.10, 0.12, 0.14, 0.16]\n  let sValuesAtk = [0.20, 0.25, 0.30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHp50CrBoost' text='Enemy HP <= 50% cr boost' lc />\n        <FormSwitch name='enemyDefeatedAtkBuff' text='Enemy defeated atk buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHp50CrBoost: true,\n      enemyDefeatedAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.enemyHp50CrBoost && request.enemyHpPercent <= 0.50) ? sValuesCr[s] : 0\n      x[Stats.ATK_P] += (r.enemyDefeatedAtkBuff) ? sValuesAtk[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction OnTheFallOfAnAeon(s) {\n  let sValuesAtkStacks = [0.08, 0.10, 0.12, 0.14, 0.16]\n  let sValuesDmgBuff = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='atkBoostStacks' text='Atk boost stacks' min={0} max={4} lc />\n        <FormSwitch name='weaknessBreakDmgBuff' text='Weakness break dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBoostStacks: 4,\n      weaknessBreakDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.atkBoostStacks * sValuesAtkStacks[s]\n      x.ELEMENTAL_DMG += (r.weaknessBreakDmgBuff) ? sValuesDmgBuff[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction AnInstantBeforeAGaze(s) {\n  const sValues = [0.0036, 0.0042, 0.0048, 0.0054, 0.006]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='maxEnergyUltDmgStacks' text='Max energy' min={0} max={180} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      maxEnergyUltDmgStacks: 180,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ULT_BOOST += r.maxEnergyUltDmgStacks * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction NightOfFright(s) {\n  const sValues = [0.024, 0.028, 0.032, 0.036, 0.04]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='atkBuffStacks' text=\"Atk buff stacks\" min={0} max={5} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBuffStacks: 5,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.atkBuffStacks * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction WorrisomeBlissful(s) {\n  let sValuesFuaDmg = [0.30, 0.35, 0.40, 0.45, 0.50]\n  let sValuesCd = [0.12, 0.14, 0.16, 0.18, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='fuaDmgBoost' text='Fua dmg boost' lc />\n        <FormSlider name='targetTameStacks' text=\"Target tame stacks\" min={0} max={2} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      fuaDmgBoost: true,\n      targetTameStacks: 2,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CD] += r.targetTameStacks * sValuesCd[s]\n      x.FUA_BOOST += (r.fuaDmgBoost) ? sValuesFuaDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction BrighterThanTheSun(s) {\n  let sValuesAtk = [0.18, 0.21, 0.24, 0.27, 0.30]\n  let sValuesErr = [0.06, 0.07, 0.08, 0.09, 0.10]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='dragonsCallStacks' text=\"Dragon's call stacks\" min={0} max={2} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dragonsCallStacks: 2,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.dragonsCallStacks * sValuesAtk[s]\n      x[Stats.ERR] += r.dragonsCallStacks * sValuesErr[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction IShallBeMyOwnSword(s) {\n  let sValuesStackDmg = [0.14, 0.165, 0.19, 0.215, 0.24]\n  let sValuesDefPen = [0.12, 0.14, 0.16, 0.18, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='eclipseStacks' text='Eclipse stacks' min={0} max={3} lc />\n        <FormSwitch name='maxStackDefPen' text='Max stack def pen' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      eclipseStacks: 3,\n      maxStackDefPen: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.eclipseStacks * sValuesStackDmg[s]\n      x.DEF_SHRED += (r.maxStackDefPen && r.eclipseStacks == 3) ? sValuesDefPen[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TimeWaitsForNoOne(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='healingBasedDmgProc' text='Healing based dmg proc (not implemented)' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      healingBasedDmgProc: false,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SleepLikeTheDead(s) {\n  const sValues = [0.36, 0.42, 0.48, 0.54, 0.60]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='missedCritCrBuff' text='Missed crit cr buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      missedCritCrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.missedCritCrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SheAlreadyShutHerEyes(s) {\n  const sValues = [0.09, 0.105, 0.12, 0.135, 0.15]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='hpLostDmgBuff' text='Hp lost dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      hpLostDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.hpLostDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction BeforeDawn(s) {\n  let sValuesSkillUltDmg = [0.18, 0.21, 0.24, 0.27, 0.30]\n  let sValuesFuaDmg = [0.48, 0.56, 0.64, 0.72, 0.80]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='skillUltDmgBoost' text='Skill/ult dmg boost' lc />\n        <FormSwitch name='fuaDmgBoost' text='Fua dmg boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillUltDmgBoost: true,\n      fuaDmgBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.SKILL_BOOST += (r.skillUltDmgBoost) ? sValuesSkillUltDmg[s] : 0\n      x.ULT_BOOST += (r.skillUltDmgBoost) ? sValuesSkillUltDmg[s] : 0\n      x.FUA_BOOST += (r.fuaDmgBoost) ? sValuesFuaDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TheUnreachableSide(s) {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBuff' text='Hp consumed or attacked dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.dmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction EchoesOfTheCoffin(s) {\n  const sValues = [12, 14, 16, 18, 20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltSpdBuff' text='Post ult spd buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltSpdBuff: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD] += (r.postUltSpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction IncessantRain(s) {\n  let sValuesCr = [0.12, 0.14, 0.16, 0.18, 0.20]\n  let sValuesDmg = [0.12, 0.14, 0.16, 0.18, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemy3DebuffsCrBoost' text='Enemy <= 3 debuffs cr boost' lc />\n        <FormSwitch name='targetCodeDebuff' text='Target code debuff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemy3DebuffsCrBoost: true,\n      targetCodeDebuff: true\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.enemy3DebuffsCrBoost) ? sValuesCr[s] : 0\n      x.ELEMENTAL_DMG += (r.targetCodeDebuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PatienceIsAllYouNeed(s) {\n  let sValuesDmg = [0.24, 0.28, 0.32, 0.36, 0.40]\n  let sValuesSpd = [0.048, 0.056, 0.064, 0.072, 0.08]\n\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBoost' text='Dmg boost' lc />\n        <FormSlider name='spdStacks' text='Spd stacks' min={0} max={3} lc />\n        <FormSwitch name='dotEffect' text='Dot effect (not implemented)' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBoost: true,\n      spdStacks: 0,\n      dotEffect: false\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD_P] += r.spdStacks * sValuesSpd[s]\n      x.ELEMENTAL_DMG += (r.dmgBoost) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction MomentOfVictory(s) {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='selfAttackedDefBuff' text='Self attacked def buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      selfAttackedDefBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.DEF_P] += (r.selfAttackedDefBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction InTheNameOfTheWorld(s) {\n  let sValuesDmg = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyDebuffedDmgBoost' text='Enemy debuffed dmg boost' lc />\n        <FormSwitch name='skillAtkBoost' text='Skill atk boost (not implemented)' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyDebuffedDmgBoost: true,\n      skillAtkBoost: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyDebuffedDmgBoost) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ButTheBattleIsntOver(s) {\n  let sValuesErr = [0.10, 0.12, 0.14, 0.16, 0.18]\n  let sValuesDmg = [0.30, 0.35, 0.40, 0.45, 0.50]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postSkillDmgBuff' text='Post skill dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postSkillDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ERR] += sValuesErr[s]\n      x.ELEMENTAL_DMG += (r.postSkillDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SomethingIrreplaceable(s) {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBuff' text='Enemy defeated or self hit dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.dmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction InTheNight(s) {\n  let sValuesDmg = [0.06, 0.07, 0.08, 0.09, 0.10]\n  let sValuesCd = [0.12, 0.14, 0.16, 0.18, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='spdScalingBuffs' text='Speed scaling buffs enabled' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      spdScalingBuffs: true,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (c, request) => {\n      let r = request.lightConeConditionals\n      let x = c.x\n\n      let stacks = Math.max(0, Math.min(6, Math.floor((x[Stats.SPD] - 100) / 10)))\n\n      x.BASIC_BOOST += (r.spdScalingBuffs) ? stacks * sValuesDmg[s] : 0\n      x.SKILL_BOOST += (r.spdScalingBuffs) ? stacks * sValuesDmg[s] : 0\n      x.ULT_CD_BOOST += (r.spdScalingBuffs) ? stacks * sValuesCd[s] : 0\n    }\n  }\n}\n\nfunction NightOnTheMilkyWay(s) {\n  let sValuesAtk = [0.09, 0.105, 0.12, 0.135, 0.15]\n  let sValuesDmg = [0.30, 0.35, 0.40, 0.45, 0.50]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyCountAtkBuff' text='Enemy count atk buff' lc />\n        <FormSwitch name='enemyWeaknessBreakDmgBuff' text='Enemy weakness break dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyCountAtkBuff: true,\n      enemyWeaknessBreakDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.enemyCountAtkBuff) ? request.enemyCount * sValuesAtk[s] : 0\n      x.ELEMENTAL_DMG += (r.enemyWeaknessBreakDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction HeyOverHere(s) {\n  const sValues = [0.16, 0.19, 0.22, 0.25, 0.28]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postSkillHealBuff' text='Post skill heal buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postSkillHealBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.postSkillHealBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction BeforeTheTutorialMissionStarts(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TodayIsAnotherPeacefulDay(s) {\n  const sValues = [0.002, 0.0025, 0.003, 0.0035, 0.004]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='maxEnergyStacks' text='Max energy' min={0} max={160} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      maxEnergyStacks: 160,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.maxEnergyStacks * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction NowhereToRun(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction CarveTheMoonWeaveTheClouds(s) {\n  let sValuesAtk = [0.10, 0.125, 0.15, 0.175, 0.20]\n  let sValuesCd = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='atkBuffActive' text='Atk buff active' lc />\n        <FormSwitch name='cdBuffActive' text='Cd buff active' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBuffActive: true,\n      cdBuffActive: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.atkBuffActive) ? sValuesAtk[s] : 0\n      x[Stats.CD] += (r.cdBuffActive) ? sValuesCd[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ReturnToDarkness(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ThisIsMe(/* s */) {\n  // const sValues = [0.60, 0.75, 0.90, 1.05, 1.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defScalingUltDmg' text='Def scaling ult dmg (not implemented)' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defScalingUltDmg: false,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (c, request) => {\n      console.warn('not implemented', c, request)\n      // let r = request.lightConeConditionals\n      // let x = c.x\n\n      // x.ULT_DEF_SCALING += (r.defScalingUltDmg) ? sValues[s] : 0\n    }\n  }\n}\n\nfunction WeWillMeetAgain(s) {\n  const sValues = [0.48, 0.60, 0.72, 0.84, 0.96]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='extraDmgProc' text='Additional dmg proc' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      extraDmgProc: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_SCALING += (r.extraDmgProc) ? sValues[s] : 0\n      x.SKILL_SCALING += (r.extraDmgProc) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction WarmthShortensColdNights(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TheSeriousnessOfBreakfast(s) {\n  let sValuesDmgBoost = [0.12, 0.15, 0.18, 0.21, 0.24]\n  let sValuesStacks = [0.04, 0.05, 0.06, 0.07, 0.08]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBoost' text='Dmg boost' lc />\n        <FormSlider name='defeatedEnemyAtkStacks' text='Defeated enemy atk stacks' min={0} max={3} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBoost: true,\n      defeatedEnemyAtkStacks: 3,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.defeatedEnemyAtkStacks * sValuesStacks[s]\n      x.ELEMENTAL_DMG += (r.dmgBoost) ? sValuesDmgBoost[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction WoofWalkTime(s) {\n  const sValues = [0.16, 0.20, 0.24, 0.28, 0.32]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyBurnedBleeding' text='Enemy burned / bleeding' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyBurnedBleeding: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyBurnedBleeding) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PastAndFuture(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction RiverFlowsInSpring(s) {\n  let sValuesSpd = [0.08, 0.09, 0.10, 0.11, 0.12]\n  let sValuesDmg = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='spdDmgBuff' text='Spd / dmg buff active' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      spdDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD_P] += (r.spdDmgBuff) ? sValuesSpd[s] : 0\n      x.ELEMENTAL_DMG += (r.spdDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction WeAreWildfire(s) {\n  const sValues = [0.08, 0.10, 0.12, 0.14, 0.16]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='initialDmgReductionBuff' text='Initial dmg reduction buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      initialDmgReductionBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += (r.initialDmgReductionBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Fermata(s) {\n  const sValues = [0.16, 0.20, 0.24, 0.28, 0.32];\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyShockWindShear' text='Enemy shocked / wind sheared' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyShockWindShear: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyShockWindShear) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction QuidProQuo(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction GeniusesRepose(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemyCdBuff' text='Defeated enemy cd buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemyCdBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CD] += (r.defeatedEnemyCdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction UnderTheBlueSky(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemyCrBuff' text='Defeated enemy cr buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemyCrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.defeatedEnemyCrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction DanceDanceDance(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SubscribeForMore(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='maxEnergyDmgBoost' text='Max energy dmg boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      maxEnergyDmgBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_BOOST += sValues[s]\n      x.SKILL_BOOST += sValues[s]\n      x.BASIC_BOOST += (r.maxEnergyDmgBoost) ? sValues[s] : 0\n      x.SKILL_BOOST += (r.maxEnergyDmgBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TrendOfTheUniversalMarket(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ResolutionShinesAsPearlsOfSweat(s) {\n  const sValues = [0.12, 0.13, 0.14, 0.15, 0.16]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='targetEnsnared' text='Target ensnared' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      targetEnsnared: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DEF_SHRED += (r.targetEnsnared) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PerfectTiming(s) {\n  const sValues = [0.33, 0.36, 0.39, 0.42, 0.45]\n  let sMaxValues = [0.15, 0.18, 0.21, 0.24, 0.27]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='resToHealingBoost' text='Res to healing boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      resToHealingBoost: true,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (c, request) => {\n      let r = request.lightConeConditionals\n      let x = c.x\n\n      let boost = Math.min(sMaxValues[s], sValues[s] * x[Stats.RES])\n      x[Stats.OHB] += (r.resToHealingBoost) ? boost : 0\n    }\n  }\n}\n\nfunction MakeTheWorldClamor(s) {\n  const sValues = [0.32, 0.40, 0.48, 0.56, 0.64]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='ultDmgBuff' text='Ult dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ULT_BOOST += (r.ultDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ASecretVow(s) {\n  const sValues = [0.20, 0.25, 0.30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHpHigherDmgBoost' text='Enemy HP % higher dmg boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHpHigherDmgBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += sValues[s]\n      x.ELEMENTAL_DMG += (r.enemyHpHigherDmgBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PlanetaryRendezvous(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='alliesSameElement' text='Allies same element dmg boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      alliesSameElement: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.alliesSameElement) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Swordplay(s) {\n  const sValues = [0.08, 0.10, 0.12, 0.14, 0.16]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='sameTargetHitStacks' text='Same target hit stacks' min={0} max={5} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      sameTargetHitStacks: 5,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.sameTargetHitStacks) * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction LandausChoice(s) {\n  const sValues = [0.16, 0.18, 0.20, 0.22, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, /* request */) => {\n      // let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction EyesOfThePrey(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, /* request */) => {\n      // let r = request.lightConeConditionals\n\n      x.DOT_BOOST += sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SharedFeeling(s) {\n  const sValues = [0.10, 0.125, 0.15, 0.175, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, /* request */) => {\n      // let r = request.lightConeConditionals\n\n      x[Stats.OHB] += sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TheBirthOfTheSelf(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHp50FuaBuff' text='Enemy HP < 50% fua buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHp50FuaBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.xxxxxxxxxxxxxxxxxxxxx] += (r.name) ? sValues[s] : 0\n      x.FUA_BOOST += sValues[s]\n      x.FUA_BOOST += (r.enemyHp50FuaBuff && request.enemyHpPercent < 0.50) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TheMolesWelcomeYou(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='atkBuffStacks' text='Atk buff stacks' min={0} max={3} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBuffStacks: 3,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.atkBuffStacks) * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction MemoriesOfThePast() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction OnlySilenceRemains(s) {\n  let sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemies2CrBuff' text='<= 2 enemies cr buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemies2CrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.enemies2CrBuff && request.enemyCount <= 2) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction DayOneOfMyNewLife(s) {\n  const sValues = [0.16, 0.18, 0.20, 0.22, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgResBuff' text='Dmg RES buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgResBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += (r.dmgResBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction GoodNightAndSleepWell(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='debuffStacksDmgIncrease' text='Debuff stacks dmg increase' min={0} max={3} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      debuffStacksDmgIncrease: 3,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.debuffStacksDmgIncrease * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PostOpConversation(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltHealingBoost' text='Post ult healing boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltHealingBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.postUltHealingBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Sagacity(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltAtkBuff' text='Post ult atk buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.postUltAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Mediation(s) {\n  const sValues = [12, 14, 16, 18, 20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='initialSpdBuff' text='Initial spd buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      initialSpdBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD] += (r.initialSpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction HiddenShadow(s) {\n  const sValues = [0.60, 0.75, 0.90, 1.05, 1.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='basicAtkBuff' text='Basic atk buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_BOOST += (r.basicAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Pioneering() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction MutualDemise(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='selfHp80CrBuff' text='Self HP <80% cr buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      selfHp80CrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.selfHp80CrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Multiplication() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Adversarial(s) {\n  const sValues = [0.10, 0.12, 0.14, 0.16, 0.18]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemySpdBuff' text='Defeated enemy spd buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemySpdBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD_P] += (r.defeatedEnemySpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Passkey() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction MeshingCogs() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Loop(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemySlowedDmgBuff' text='Enemy slowed dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemySlowedDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemySlowedDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Defense() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ShatteredHome(s) {\n  const sValues = [0.20, 0.25, 0.30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHp50Buff' text='Enemy HP >50% dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHp50Buff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyHp50Buff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction FineFruit() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n      name: true,\n    }),\n    precomputeEffects: (x, request) => { console.warn('not implemented', x, request) },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction DartingArrow(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemyAtkBuff' text='Atk buff on kill' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemyAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.defeatedEnemyAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction DataBank(s) {\n  const sValues = [0.28, 0.35, 0.42, 0.49, 0.56]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='ultDmgBuff' text='Ult dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ULT_BOOST += (r.ultDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Chorus(s) {\n  const sValues = [0.08, 0.09, 0.10, 0.11, 0.12]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='inBattleAtkBuff' text='In battle atk buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      inBattleAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.inBattleAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Void(s) {\n  const sValues = [0.20, 0.25, 0, 30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='initialEhrBuff' text='Initial EHR buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      initialEhrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.EHR] += (r.initialEhrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\n\nfunction Amber(s) {\n  const sValues = [0.16, 0.20, 0.24, 0.28, 0.32]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='hp50DefBuff' text='HP <50% def buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      hp50DefBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.DEF_P] += (r.hp50DefBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction CollapsingSky(s) {\n  const sValues = [0.20, 0.25, 0.30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='basicSkillDmgBuff' text='Basic/Skill dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicSkillDmgBuff: true\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_BOOST += (r.basicSkillDmgBuff) ? sValues[s] : 0\n      x.SKILL_BOOST += (r.basicSkillDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Cornucopia(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='healingBuff' text='Healing buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      healingBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.healingBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Arrows(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='critBuff' text='Initial crit buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      critBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.critBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ReforgedRemembrance(s) {\n  let sValuesAtk = [0.05, 0.06, 0.07, 0.08, 0.09]\n  let sValuesDotPen = [0.072, 0.079, 0.086, 0.093, 0.10]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='prophetStacks' text='Prophet stacks' min={0} max={4} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      prophetStacks: 4,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.prophetStacks * sValuesAtk[s]\n      x.DOT_DEF_PEN += r.prophetStacks * sValuesDotPen[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction EarthlyEscapade(s) {\n  const sValuesCr = [0.10, 0.11, 0.12, 0.13, 0.14]\n  const sValuesCd = [0.28, 0.35, 0.42, 0.49, 0.56]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='maskActive' text='Mask active' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      maskActive: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.maskActive) ? sValuesCr[s] : 0\n      x[Stats.CD] += (r.maskActive) ? sValuesCd[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nexport const LightConeConditionals = {\n  get: (request) => {\n    let lcFn = lightConeOptionMapping[request.lightCone]\n    if (!lcFn) {\n      return {\n        display: () => (\n          <Flex vertical gap={5}>\n            <HeaderText>Light cone passives</HeaderText>\n          </Flex>\n        ),\n        defaults: () => ({})\n      }\n    }\n    return lcFn(request.lightConeSuperimposition - 1)\n  },\n  getDisplayForLightCone: (id, superimposition) => {\n    if (!id || !lightConeOptionMapping[id]) {\n      return (\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Light cone passives</HeaderText>\n          <TooltipImage type={Hint.lightConePassives()} />\n        </Flex>\n      )\n    }\n\n    let lcFn = lightConeOptionMapping[id]\n    let display = lcFn(superimposition - 1).display()\n\n    return (\n      <Flex vertical gap={5}>\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Light cone passives</HeaderText>\n          <TooltipImage type={Hint.lightConePassives()} />\n        </Flex>\n        {display}\n      </Flex>\n    )\n  },\n}","import { ConfigProvider, Flex } from \"antd\";\nimport React from \"react\";\nimport { HeaderText } from \"../components/HeaderText\";\nimport { Constants } from './constants.ts'\nimport { FormSlider, FormSwitch } from \"../components/optimizerTab/FormConditionalInputs\";\nimport { TooltipImage } from \"../components/TooltipImage\";\nimport { Hint } from \"./hint\";\n\nlet Stats = Constants.Stats\n\nlet precisionRound = (number, precision = 8) => {\n  let factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nconst ASHBLAZING_ATK_STACK = 0.06\n// Remove the ashblazing set atk bonus only when calc-ing fua attacks\nfunction calculateAshblazingSet(c, request, hitMulti) {\n  let enabled = p4(c.sets.TheAshblazingGrandDuke)\n  let valueTheAshblazingGrandDuke = request.setConditionals[Constants.Sets.TheAshblazingGrandDuke][1]\n  let ashblazingAtk = 0.06 * valueTheAshblazingGrandDuke * enabled * c.baseAtk * enabled\n  let ashblazingMulti = hitMulti * enabled * c.baseAtk\n\n  return {\n    ashblazingMulti,\n    ashblazingAtk\n  }\n}\n\nconst characterOptionMapping = {\n  1212: jingliu,\n  1302: argenti,\n  1008: arlan,\n  1009: asta,\n  1211: bailu,\n  1205: blade,\n  1101: bronya,\n  1107: clara,\n  1002: danheng,\n  1208: fuxuan,\n  1104: gepard,\n  1210: guinaifen,\n  1215: hanya,\n  1013: herta,\n  1003: himeko,\n  1109: hook,\n  1217: huohuo,\n  1213: imbibitorlunae, // Simplified stacking logic, revisit\n  1204: jingyuan,\n  1005: kafka,\n  1111: luka,\n  1203: luocha,\n  1110: lynx,\n  1001: march7th,\n  1105: natasha,\n  1106: pela,\n  1201: qingque,\n  1108: sampo,\n  1102: seele,\n  1103: serval,\n  1006: silverwolf,\n  1206: sushang,\n  1202: tingyun,\n  1112: topaz,\n  8001: physicaltrailblazer,\n  8002: physicaltrailblazer,\n  8003: firetrailblazer,\n  8004: firetrailblazer,\n  1004: welt,\n  1209: yanqing,\n  1207: yukong,\n  1303: ruanmei,\n  1305: drratio,\n  1214: xueyi,\n  1306: sparkle,\n  1307: blackswan,\n  1312: misha,\n}\n\n// TODO profile & convert to array for performance?\nconst baseComputedStatsObject = {\n  [Stats.HP_P]: 0,\n  [Stats.ATK_P]: 0,\n  [Stats.DEF_P]: 0,\n  [Stats.SPD_P]: 0,\n  [Stats.HP]: 0,\n  [Stats.ATK]: 0,\n  [Stats.DEF]: 0,\n  [Stats.SPD]: 0,\n  [Stats.CD]: 0,\n  [Stats.CR]: 0,\n  [Stats.EHR]: 0,\n  [Stats.RES]: 0,\n  [Stats.BE]: 0,\n  [Stats.ERR]: 0,\n  [Stats.OHB]: 0,\n\n  ELEMENTAL_DMG: 0,\n  DEF_SHRED: 0,\n  DMG_TAKEN_MULTI: 0,\n  ALL_DMG_MULTI: 0,\n  RES_PEN: 0,\n  DMG_RED_MULTI: 1,\n\n  BASIC_CR_BOOST: 0,\n  SKILL_CR_BOOST: 0,\n  ULT_CR_BOOST: 0,\n  FUA_CR_BOOST: 0,\n\n  BASIC_CD_BOOST: 0,\n  SKILL_CD_BOOST: 0,\n  ULT_CD_BOOST: 0,\n  FUA_CD_BOOST: 0,\n\n  BASIC_SCALING: 0,\n  SKILL_SCALING: 0,\n  ULT_SCALING: 0,\n  FUA_SCALING: 0,\n  DOT_SCALING: 0,\n\n  BASIC_BOOST: 0,\n  SKILL_BOOST: 0,\n  ULT_BOOST: 0,\n  FUA_BOOST: 0,\n  DOT_BOOST: 0,\n\n  BASIC_VULNERABILITY: 0,\n  SKILL_VULNERABILITY: 0,\n  ULT_VULNERABILITY: 0,\n  FUA_VULNERABILITY: 0,\n  DOT_VULNERABILITY: 0,\n\n  BASIC_DMG: 0,\n  SKILL_DMG: 0,\n  ULT_DMG: 0,\n  FUA_DMG: 0,\n  DOT_DMG: 0,\n\n  BASIC_DEF_PEN: 0,\n  SKILL_DEF_PEN: 0,\n  ULT_DEF_PEN: 0,\n  FUA_DEF_PEN: 0,\n  DOT_DEF_PEN: 0,\n\n  BASIC_RES_PEN: 0,\n  SKILL_RES_PEN: 0,\n  ULT_RES_PEN: 0,\n  FUA_RES_PEN: 0,\n  DOT_RES_PEN: 0,\n}\n\nfunction xueyi(e) {\n  let ultBoostMax = ult(e, 0.60, 0.648)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.40, 1.54)\n  let ultScaling = ult(e, 2.50, 2.70)\n  let fuaScaling = talent(e, 0.90, 0.99)\n\n  let hitMultiByFuaHits = {\n    0: 0,\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1), // 0.06\n    2: ASHBLAZING_ATK_STACK * (1 * 1 / 2 + 2 * 1 / 2), // 0.09\n    3: ASHBLAZING_ATK_STACK * (1 * 1 / 3 + 2 * 1 / 3 + 3 * 1 / 3) // 0.12\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyToughness50' text='Enemy toughness >= 50%' />\n        <FormSlider name='toughnessReductionDmgBoost' text='Ult toughness based dmg boost' min={0} max={ultBoostMax} percent />\n        <FormSlider name='fuaHits' text='Fua hits' min={0} max={3} />\n        <FormSwitch name='e4BeBuff' text='E4 break effect buff' disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyToughness50: true,\n      toughnessReductionDmgBoost: ultBoostMax,\n      fuaHits: 3,\n      e4BeBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += (e >= 4 && r.e4BeBuff) ? 0.40 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling * r.fuaHits\n\n      // Boost\n      x.ULT_BOOST += (r.enemyToughness50) ? 0.10 : 0\n      x.ULT_BOOST += r.toughnessReductionDmgBoost\n      x.FUA_BOOST += (e >= 1) ? 0.40 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.ELEMENTAL_DMG += Math.min(2.40, x[Stats.BE])\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      let hitMulti = hitMultiByFuaHits[r.fuaHits]\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction drratio(e) {\n  let debuffStacksMax = 5\n  let summationStacksMax = (e >= 1) ? 10 : 6\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.50, 1.65)\n  let ultScaling = ult(e, 2.40, 2.592)\n  let fuaScaling = talent(e, 2.70, 2.97)\n\n  function e2FuaRatio(procs, fua = true) {\n    return fua\n      ? fuaScaling / (fuaScaling + 0.20 * procs) // for fua dmg\n      : 0.20 / (fuaScaling + 0.20 * procs) // for each e2 proc\n  }\n\n  let baseHitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n  let fuaMultiByDebuffs = {\n    0: ASHBLAZING_ATK_STACK * (1 * 1 / 1), // 0\n    1: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(1, true) + 2 * e2FuaRatio(1, false)), // 2\n    2: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(2, true) + 5 * e2FuaRatio(2, false)), // 2 + 3\n    3: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(3, true) + 9 * e2FuaRatio(3, false)), // 2 + 3 + 4\n    4: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(4, true) + 14 * e2FuaRatio(4, false)), // 2 + 3 + 4 + 5\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='summationStacks' text='Summation stacks' min={0} max={summationStacksMax} />\n        <FormSlider name='enemyDebuffStacks' text='Enemy debuffs' min={0} max={debuffStacksMax} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyDebuffStacks: debuffStacksMax,\n      summationStacks: summationStacksMax,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += r.summationStacks * 0.025\n      x[Stats.CD] += r.summationStacks * 0.05\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.enemyDebuffStacks >= 3) ? Math.min(0.50, r.enemyDebuffStacks * 0.10) : 0\n      x.FUA_BOOST += (e >= 6) ? 0.50 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      if (e >= 2) {\n        let hitMulti = fuaMultiByDebuffs[Math.min(4, r.enemyDebuffStacks)]\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      } else {\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, baseHitMulti)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      }\n    }\n  }\n}\n\nfunction ruanmei(e) {\n  let fieldResPenValue = ult(e, 0.25, 0.27)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultFieldActive' text='Ult field active' />\n        <FormSwitch name='e4BeBuff' text='E4 break effect buff' disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultFieldActive: true,\n      e4BeBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += 0.20\n      x[Stats.BE] += (e >= 4 && r.e4BeBuff) ? 1.00 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.RES_PEN += (r.ultFieldActive) ? fieldResPenValue : 0\n      x.DEF_SHRED += (e >= 1 && r.ultFieldActive) ? 0.20 : 0\n      x[Stats.ATK_P] += (e >= 2 && request.enemyWeaknessBroken) ? 0.40 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      let beOver = precisionRound((x[Stats.BE] * 100 - 120) / 10)\n      x.ELEMENTAL_DMG += Math.floor(Math.max(0, beOver)) * 0.06\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction yukong(e) {\n  let skillAtkBuffValue = skill(e, 0.80, 0.88)\n  let ultCdBuffValue = skill(e, 0.65, 0.702)\n  let ultCrBuffValue = skill(e, 0.28, 0.294)\n  let talentAtkScaling = talent(e, 0.80, 0.88)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 3.80, 4.104)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='roaringBowstrings' text='Roaring bowstrings' />\n        <FormSwitch name='ultBuff' text='Ult buff' />\n        <FormSwitch name='initialSpeedBuff' text='Initial speed buff' />\n      </Flex>\n    ),\n    defaults: () => ({\n      roaringBowstringsActive: true,\n      ultBuff: true,\n      initialSpeedBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.roaringBowstrings) ? skillAtkBuffValue : 0\n      x[Stats.CR] += (r.ultBuff && r.roaringBowstrings) ? ultCrBuffValue : 0\n      x[Stats.CD] += (r.ultBuff && r.roaringBowstrings) ? ultCdBuffValue : 0\n      x[Stats.SPD_P] += (r.initialSpeedBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.BASIC_SCALING += talentAtkScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.12\n      x.ELEMENTAL_DMG += (e >= 4 && r.roaringBowstrings) ? 0.30 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction yanqing(e) {\n  let ultCdBuffValue = ult(e, 0.50, 0.54)\n  let talentCdBuffValue = ult(e, 0.30, 0.33)\n  let talentCrBuffValue = ult(e, 0.20, 0.21)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.20, 2.42)\n  let ultScaling = ult(e, 3.50, 3.78)\n  let fuaScaling = talent(e, 0.50, 0.55)\n\n  let hitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuffActive' text='Ult buff active' />\n        <FormSwitch name='soulsteelBuffActive' text='Soulsteel buff active' />\n        <FormSwitch name='critSpdBuff' text='Crit spd buff' />\n        <FormSwitch name='e1TargetFrozen' text='E1 target frozen' disabled={e < 1} />\n        <FormSwitch name='e4CurrentHp80' text='E4 self HP >= 80%' disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuffActive: true,\n      soulsteelBuffActive: true,\n      critSpdBuff: true,\n      e1TargetFrozen: true,\n      e4CurrentHp80: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (r.ultBuffActive) ? 0.60 : 0\n      x[Stats.CD] += (r.ultBuffActive && r.soulsteelBuffActive) ? ultCdBuffValue : 0\n      x[Stats.CR] += (r.soulsteelBuffActive) ? talentCrBuffValue : 0\n      x[Stats.CD] += (r.soulsteelBuffActive) ? talentCdBuffValue : 0\n      x[Stats.RES] += (r.soulsteelBuffActive) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.critSpdBuff) ? 0.10 : 0\n      x[Stats.ERR] += (e >= 2 && r.soulsteelBuffActive) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      x.BASIC_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.SKILL_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.ULT_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.FUA_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n\n      x.BASIC_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.SKILL_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.ULT_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.FUA_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n\n      // Boost\n      x.RES_PEN += (e >= 4 && r.e4CurrentHp80) ? 0.12 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction welt(e) {\n  let skillExtraHitsMax = (e >= 6) ? 3 : 2\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0.72, 0.792)\n  let ultScaling = ult(e, 1.50, 1.62)\n  let talentScaling = talent(e, 0.60, 0.66)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyDmgTakenDebuff' text='Enemy dmg taken debuff' />\n        <FormSwitch name='enemySlowed' text='Enemy slowed' />\n        <FormSlider name='skillExtraHits' text='Skill extra hits' min={0} max={skillExtraHitsMax} />\n        <FormSwitch name='e1EnhancedState' text='E1 enhanced state' disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemySlowed: true,\n      enemyDmgTakenDebuff: true,\n      skillExtraHits: skillExtraHitsMax,\n      e1EnhancedState: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x.BASIC_SCALING += (r.enemySlowed) ? talentScaling : 0\n      x.SKILL_SCALING += (r.enemySlowed) ? talentScaling : 0\n      x.ULT_SCALING += (r.enemySlowed) ? talentScaling : 0\n\n      x.BASIC_SCALING += (e >= 1 && r.e1EnhancedState) ? 0.50 * basicScaling : 0\n      x.SKILL_SCALING += (e >= 1 && r.e1EnhancedState) ? 0.80 * skillScaling : 0\n\n      x.SKILL_SCALING += r.skillExtraHits * skillScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (request.enemyWeaknessBroken) ? 0.20 : 0\n      x.DMG_TAKEN_MULTI += (r.enemyDmgTakenDebuff) ? 0.12 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction firetrailblazer(e) {\n  let skillDamageReductionValue = skill(e, 0.50, 0.52)\n\n  let basicAtkScaling = basic(e, 1.00, 1.10)\n  let basicDefScaling = (e >= 1) ? 0.25 : 0\n  let basicEnhancedAtkScaling = basic(e, 1.35, 1.463)\n  let basicEnhancedDefScaling = (e >= 1) ? 0.50 : 0\n  let skillScaling = skill(e, 0, 0)\n  let ultAtkScaling = ult(e, 1.00, 1.10)\n  let ultDefScaling = ult(e, 1.50, 1.65)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedBasic' text='Enhanced basic' />\n        <FormSwitch name='skillActive' text='Skill active' />\n        <FormSwitch name='shieldActive' text='Shield active' />\n        <FormSlider name='e6DefStacks' text='E6 def stacks' min={0} max={3} disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedBasic: true,\n      skillActive: true,\n      shieldActive: true,\n      e6DefStacks: 3,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.DEF_P] += (e >= 6) ? r.e6DefStacks * 0.10 : 0\n      x[Stats.ATK_P] += (r.shieldActive) ? 0.15 : 0\n\n      // Scaling\n      x.SKILL_SCALING += skillScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (r.skillActive) ? (1 - skillDamageReductionValue) : 1\n      x.DMG_RED_MULTI *= (r.skillActive) ? (1 - 0.15) : 1\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      if (r.enhancedBasic) {\n        x.BASIC_DMG += basicEnhancedAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicEnhancedDefScaling * x[Stats.DEF]\n      } else {\n        x.BASIC_DMG += basicAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicDefScaling * x[Stats.DEF]\n      }\n\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += ultAtkScaling * x[Stats.ATK]\n      x.ULT_DMG += ultDefScaling * x[Stats.DEF]\n    }\n  }\n}\n\nfunction physicaltrailblazer(e) {\n  let talentAtkScalingValue = talent(e, 0.20, 0.22)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.25, 1.375)\n  let ultScaling = ult(e, 4.5, 4.80)\n  let ultEnhancedScaling = ult(e, 2.70, 2.88)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedUlt' text='Aoe ult' />\n        <FormSlider name='talentStacks' text='Talent stacks' min={0} max={2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedUlt: true,\n      talentStacks: 2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += r.talentStacks * talentAtkScalingValue\n      x[Stats.DEF_P] += r.talentStacks * 0.10\n      x[Stats.CR] += (request.enemyWeaknessBroken) ? 0.25 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += (r.enhancedUlt) ? ultEnhancedScaling : ultScaling\n\n      // Boost\n      x.SKILL_BOOST += 0.25\n      x.ULT_BOOST += (r.enhancedUlt) ? 0.25 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction topaz(e) {\n  let proofOfDebtFuaVulnerability = skill(e, 0.50, 0.55)\n  let enhancedStateFuaScalingBoost = ult(e, 1.50, 1.65)\n  let enhancedStateFuaCdBoost = ult(e, 0.25, 0.275)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.50, 1.65)\n  let fuaScaling = talent(e, 1.50, 1.65)\n\n  // 0.06\n  let basicHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1 * 1 / 1)\n\n  // 0.18\n  let fuaHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1 * 1 / 7 + 2 * 1 / 7 + 3 * 1 / 7 + 4 * 1 / 7 + 5 * 1 / 7 + 6 * 1 / 7 + 7 * 1 / 7)\n\n  // 0.252\n  let fuaEnhancedHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1 * 1 / 10 + 2 * 1 / 10 + 3 * 1 / 10 + 4 * 1 / 10 + 5 * 1 / 10 + 6 * 1 / 10 + 7 * 1 / 10 + 8 * 3 / 10)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyProofOfDebtDebuff' text='Target proof of debt debuff' />\n        <FormSwitch name='numbyEnhancedState' text='Numby enhanced state' />\n        <FormSlider name='e1DebtorStacks' text='E1 debtor stacks' min={0} max={2} disabled={e < 1} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyProofOfDebtDebuff: true,\n      numbyEnhancedState: true,\n      e1DebtorStacks: 2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.SKILL_SCALING += (r.numbyEnhancedState) ? enhancedStateFuaScalingBoost : 0\n      x.FUA_SCALING += fuaScaling\n      x.FUA_SCALING += (r.numbyEnhancedState) ? enhancedStateFuaScalingBoost : 0\n\n      // Boost\n      x.FUA_VULNERABILITY += (r.enemyProofOfDebtDebuff) ? proofOfDebtFuaVulnerability : 0\n      x.ELEMENTAL_DMG += (request.enemyElementalWeak) ? 0.15 : 0\n      x.FUA_CD_BOOST += (e >= 1) ? 0.25 * r.e1DebtorStacks : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      let hitMulti = (r.numbyEnhancedState) ? fuaEnhancedHitCountMulti : fuaHitCountMulti\n      let ashblazingFuaData = calculateAshblazingSet(c, request, hitMulti)\n      let ashblazingBasicData = calculateAshblazingSet(c, request, basicHitCountMulti)\n\n\n      x.BASIC_DMG += x.BASIC_SCALING * (x[Stats.ATK] - ashblazingBasicData.ashblazingAtk + ashblazingBasicData.ashblazingMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingFuaData.ashblazingAtk + ashblazingFuaData.ashblazingMulti)\n      x.SKILL_DMG = x.FUA_DMG\n\n      // Copy fua boosts to skill/basic\n      // BOOSTS get added, while vulnerability / def pen gets replaced (?)\n      x.SKILL_BOOST += x.FUA_BOOST\n      x.SKILL_CD_BOOST += x.FUA_CD_BOOST\n      x.SKILL_CR_BOOST += x.FUA_CR_BOOST\n      x.SKILL_VULNERABILITY = x.FUA_VULNERABILITY\n      x.SKILL_DEF_PEN = x.FUA_DEF_PEN\n      x.SKILL_RES_PEN = x.FUA_RES_PEN\n\n      x.BASIC_BOOST += x.FUA_BOOST\n      x.BASIC_CD_BOOST += x.FUA_CD_BOOST\n      x.BASIC_CR_BOOST += x.FUA_CR_BOOST\n      x.BASIC_VULNERABILITY = x.FUA_VULNERABILITY\n      x.BASIC_DEF_PEN = x.FUA_DEF_PEN\n      x.BASIC_RES_PEN = x.FUA_RES_PEN\n\n      // Her ult buff only applies to the skill/fua not basic\n      x.FUA_CD_BOOST += (r.numbyEnhancedState) ? enhancedStateFuaCdBoost : 0\n      x.SKILL_CD_BOOST += (r.numbyEnhancedState) ? enhancedStateFuaCdBoost : 0\n\n      // Her e6 only applies to skill/fua not basic\n      x.SKILL_RES_PEN += (e >= 6) ? 0.10 : 0\n      x.FUA_RES_PEN += (e >= 6) ? 0.10 : 0\n    }\n  }\n}\n\nfunction tingyun(e) {\n  let skillAtkBoostMax = skill(e, 0.25, 0.27)\n  let ultDmgBoost = ult(e, 0.50, 0.56)\n  // let skillAtkBoostScaling = skill(e, 0.50, 0.55) + ((e >= 4) ? 0.20 : 0)\n  // let talentScaling = talent(e, 0.60, 0.66) + ((e >= 4) ? 0.20 : 0)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='benedictionBuff' text='Benediction buff' />\n        <FormSwitch name='skillSpdBuff' text='Skill spd buff' />\n        <FormSwitch name='ultSpdBuff' text='Ult spd buff' />\n        <FormSwitch name='ultDmgBuff' text='Ult dmg buff' />\n      </Flex>\n    ),\n    defaults: () => ({\n      benedictionBuff: false,\n      skillSpdBuff: false,\n      ultSpdBuff: false,\n      ultDmgBuff: false,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.SPD_P] += (e >= 1 && r.ultSpdBuff) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.skillSpdBuff) ? 0.20 : 0\n      x[Stats.ATK_P] += (r.benedictionBuff) ? skillAtkBoostMax : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.BASIC_BOOST += 0.40\n      x.ELEMENTAL_DMG += (r.ultDmgBuff) ? ultDmgBoost : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction sushang(e) {\n  let talentSpdBuffValue = talent(e, 0.20, 0.21)\n  let ultBuffedAtk = ult(e, 0.30, 0.324)\n  let talentSpdBuffStacksMax = (e >= 6) ? 2 : 1\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.10, 2.31)\n  let skillExtraHitScaling = skill(e, 1.00, 1.10)\n  let ultScaling = ult(e, 3.20, 3.456)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuffedState' text='Ult buffed state' />\n        <FormSlider name='skillExtraHits' text='Skill extra hits' min={0} max={3} />\n        <FormSlider name='skillTriggerStacks' text='Skill trigger stacks' min={0} max={10} />\n        <FormSlider name='talentSpdBuffStacks' text='Talent spd buff stacks' min={0} max={talentSpdBuffStacksMax} />\n        <FormSwitch name='e2DmgReductionBuff' text='E2 dmg reduction' disabled={e < 2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuffedState: true,\n      e2DmgReductionBuff: true,\n      skillExtraHits: 3,\n      skillTriggerStacks: 10,\n      talentSpdBuffStacks: talentSpdBuffStacksMax,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += (e >= 4) ? 0.40 : 0\n      x[Stats.ATK_P] += (r.ultBuffedState) ? ultBuffedAtk : 0\n      x[Stats.SPD_P] += (r.talentSpdBuffStacks) * talentSpdBuffValue\n\n      // Scaling\n      // Trace only affects stance damage not skill damage - boost this based on proportion of stance : total skill dmg\n      let originalSkillScaling = skillScaling\n      let stanceSkillScaling = 0\n      stanceSkillScaling += (r.skillExtraHits >= 1) ? skillExtraHitScaling : 0\n      stanceSkillScaling += (r.ultBuffedState && r.skillExtraHits >= 2) ? skillExtraHitScaling * 0.5 : 0\n      stanceSkillScaling += (r.ultBuffedState && r.skillExtraHits >= 3) ? skillExtraHitScaling * 0.5 : 0\n      let stanceScalingProportion = stanceSkillScaling / (stanceSkillScaling + originalSkillScaling)\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += originalSkillScaling\n      x.SKILL_SCALING += stanceSkillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.SKILL_BOOST += r.skillTriggerStacks * 0.025 * stanceScalingProportion\n      x.DMG_RED_MULTI *= (e >= 2 && r.e2DmgReductionBuff) ? (1 - 0.20) : 1\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction silverwolf(e) {\n  let skillResShredValue = skill(e, 0.10, 0.105)\n  let skillDefShredBufValue = skill(e, 0.08, 0.088)\n  let ultDefShredValue = ult(e, 0.45, 0.468)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.96, 2.156)\n  let ultScaling = ult(e, 3.80, 4.104)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillResShredDebuff' text='Skill res shred' />\n        <FormSwitch name='skillDefShredDebuff' text='Skill def shred' />\n        <FormSwitch name='ultDefShredDebuff' text='Ult def shred' />\n        <FormSlider name='targetDebuffs' text='Target debuffs' min={0} max={5} />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillResShredDebuff: true,\n      skillDefShredDebuff: true,\n      ultDefShredDebuff: true,\n      targetDebuffs: 5,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 4) ? r.targetDebuffs * 0.20 : 0\n\n      // Boost\n      x.RES_PEN += (r.skillResShredDebuff) ? skillResShredValue : 0\n      x.RES_PEN += (r.skillResShredDebuff && r.targetDebuffs >= 3) ? 0.03 : 0\n      x.DEF_SHRED += (r.skillDefShredDebuff) ? skillDefShredBufValue : 0\n      x.DEF_SHRED += (r.ultDefShredDebuff) ? ultDefShredValue : 0\n      x.ELEMENTAL_DMG += (e >= 6) ? r.targetDebuffs * 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction serval(e) {\n  let talentExtraDmgScaling = talent(e, 0.72, 0.792)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.40, 1.54)\n  let ultScaling = ult(e, 1.80, 1.944)\n  let dotScaling = skill(e, 1.04, 1.144)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='targetShocked' text='Target shocked' />\n        <FormSwitch name='enemyDefeatedBuff' text='Enemy killed buff' />\n      </Flex>\n    ),\n    defaults: () => ({\n      targetShocked: true,\n      enemyDefeatedBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.enemyDefeatedBuff) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n\n      x.BASIC_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0\n      x.SKILL_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0\n      x.ULT_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += (e >= 6 && r.targetShocked) ? 0.30 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction seele(e) {\n  let buffedStateDmgBuff = talent(e, 0.80, 0.88)\n  let speedBoostStacksMax = (e >= 2 ? 2 : 1)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.20, 2.42)\n  let ultScaling = ult(e, 4.25, 4.59)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='buffedState' text='Buffed state' />\n        <FormSlider name='speedBoostStacks' text='Speed boost stacks' min={0} max={speedBoostStacksMax} />\n        <FormSwitch name='e6UltTargetDebuff' text='E6 ult debuff' disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      buffedState: true,\n      speedBoostStacks: speedBoostStacksMax,\n      e6UltTargetDebuff: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 1 && request.enemyHpPercent <= 0.80) ? 0.15 : 0\n      x[Stats.SPD_P] += 0.25 * r.speedBoostStacks\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.buffedState) ? buffedStateDmgBuff : 0\n      x.RES_PEN += (r.buffedState) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      x.BASIC_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0\n      x.SKILL_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0\n      x.ULT_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0\n    }\n  }\n}\n\nfunction sampo(e) {\n  let dotVulnerabilityValue = ult(e, 0.30, 0.32)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0.56, 0.616)\n  let ultScaling = ult(e, 1.60, 1.728)\n  let dotScaling = talent(e, 0.52, 0.572)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='targetDotTakenDebuff' text='Ult dot taken debuff' />\n        <FormSlider name='skillExtraHits' text='Skill extra hits' min={0} max={4} />\n        <FormSwitch name='targetWindShear' text='Target has wind shear' />\n      </Flex>\n    ),\n    defaults: () => ({\n      targetDotTakenDebuff: true,\n      skillExtraHits: 4,\n      targetWindShear: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.SKILL_SCALING += (r.skillExtraHits) * skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n      x.DOT_SCALING += (e >= 6) ? 0.15 : 0\n\n      // Boost\n      x.DOT_VULNERABILITY += (r.targetDotTakenDebuff) ? dotVulnerabilityValue : 0\n      x.DMG_RED_MULTI *= (r.targetWindShear) ? (1 - 0.15) : 1\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction qingque(e) {\n  let skillStackDmg = skill(e, 0.38, 0.408)\n  let talentAtkBuff = talent(e, 0.72, 0.792)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let basicEnhancedScaling = basic(e, 2.40, 2.64)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 2.00, 2.16)\n\n  let hitMultiByTargetsBlast = {\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1), // 0.06\n    3: ASHBLAZING_ATK_STACK * (2 * 1 / 1), // 0.12\n    5: ASHBLAZING_ATK_STACK * (2 * 1 / 1)  // 0.12\n  }\n\n  let hitMultiSingle = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='basicEnhanced' text='Basic enhanced' />\n        <FormSwitch name='basicEnhancedSpdBuff' text='Basic enhanced spd buff' />\n        <FormSlider name='skillDmgIncreaseStacks' text='Skill dmg stacks' min={0} max={4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicEnhanced: true,\n      basicEnhancedSpdBuff: true,\n      skillDmgIncreaseStacks: 4,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.basicEnhanced) ? talentAtkBuff : 0\n      x[Stats.SPD_P] += (r.basicEnhancedSpdBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += (r.basicEnhanced) ? basicEnhancedScaling : basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += (e >= 4) ? x.BASIC_SCALING : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += r.skillDmgIncreaseStacks * skillStackDmg\n      x.ULT_BOOST += (e >= 1) ? 0.10 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      if (r.basicEnhanced) {\n        let hitMulti = hitMultiByTargetsBlast[request.enemyCount]\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      } else {\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiSingle)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      }\n    }\n  }\n}\n\nfunction pela(e) {\n  let ultDefPenValue = ult(e, 0.40, 0.42)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.10, 2.31)\n  let ultScaling = ult(e, 1.00, 1.08)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyDebuffed' text='Enemy debuffed' />\n        <FormSwitch name='skillRemovedBuff' text='Skill removed buff' />\n        <FormSwitch name='ultDefPenDebuff' text='Ult def pen debuff' />\n        <FormSwitch name='e4SkillResShred' text='E4 skill res shred' disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyDebuffed: true,\n      skillRemovedBuff: true,\n      ultDefPenDebuff: true,\n      e4SkillResShred: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.EHR] += 0.10\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.BASIC_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n      x.SKILL_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n      x.ULT_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n\n      x.RES_PEN += (e >= 4 && r.e4SkillResShred) ? 0.12 : 0\n      x.DEF_SHRED += (r.ultDefPenDebuff) ? ultDefPenValue : 0\n\n      x.ELEMENTAL_DMG += (r.enemyDebuffed) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      x.BASIC_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n      x.SKILL_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n      x.ULT_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n    }\n  }\n}\n\nfunction natasha(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: () => {\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.BASIC_DMG += (e >= 6) ? 0.40 * x[Stats.HP] : 0\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction march7th(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 1.50, 1.62)\n  let fuaScaling = talent(e, 1.00, 1.10)\n\n  let hitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: () => {\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      x.FUA_DMG += (e >= 4) ? 0.30 * x[Stats.DEF] : 0\n    }\n  }\n}\n\nfunction lynx(e) {\n  let skillHpPercentBuff = skill(e, 0.075, 0.08)\n  let skillHpFlatBuff = skill(e, 200, 223)\n\n  let basicScaling = basic(e, 0.50, 0.55)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillBuff' text='Skill buff' />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillBuff: true,\n      e4TalentAtkBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.HP_P] += (r.skillBuff) ? skillHpPercentBuff : 0\n      x[Stats.HP] += (r.skillBuff) ? skillHpFlatBuff : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.HP] += (e >= 6 && r.skillBuff) ? 0.06 * x[Stats.HP] : 0\n      x[Stats.ATK] += (e >= 4 && r.skillBuff) ? 0.03 * x[Stats.HP] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction luocha(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 2.00, 2.16)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='fieldActive' text='Field active' />\n        <FormSwitch name='e6ResReduction' text='E6 res reduction' disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      fieldActive: true,\n      e6ResReduction: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r >= 1 && r.fieldActive) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.RES_PEN += (e >= 6 && r.e6ResReduction) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction luka(e) {\n  let basicEnhancedHitValue = basic(e, 0.20, 0.22)\n  let targetUltDebuffDmgTakenValue = ult(e, 0.20, 0.216)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let basicEnhancedScaling = basic(e, 0.20 * 3 + 0.80, 0.22 * 3 + 0.88)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let ultScaling = ult(e, 3.30, 3.564)\n  let dotScaling = skill(e, 3.38, 3.718)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='basicEnhanced' text='Basic enhanced' />\n        <FormSwitch name='targetUltDebuffed' text='Target ult debuffed' />\n        <FormSlider name='basicEnhancedExtraHits' text='Basic extra hits' min={0} max={3} />\n        <FormSwitch name='e1TargetBleeding' text='E1 target bleeding' disabled={e < 1} />\n        <FormSlider name='e4TalentStacks' text='E4 talent stacks' min={0} max={4} disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicEnhanced: true,\n      targetUltDebuffed: true,\n      e1TargetBleeding: true,\n      basicEnhancedExtraHits: 3,\n      e4TalentStacks: 4,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (e >= 4) ? r.e4TalentStacks * 0.05 : 0\n\n      // Scaling\n      x.BASIC_SCALING += (r.basicEnhanced) ? basicEnhancedScaling : basicScaling\n      x.BASIC_SCALING += (r.basicEnhanced && r.basicEnhancedExtraHits) * basicEnhancedHitValue\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.DMG_TAKEN_MULTI += (r.targetUltDebuffed) ? targetUltDebuffDmgTakenValue : 0\n      x.ELEMENTAL_DMG += (e >= 1 && r.e1TargetBleeding) ? 0.15 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction kafka(e) {\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.60, 1.76)\n  let ultScaling = ult(e, 0.80, 0.864)\n  let fuaScaling = talent(e, 1.40, 1.596)\n  let dotScaling = ult(e, 2.90, 3.183)\n\n  let hitMulti = ASHBLAZING_ATK_STACK *\n    (1 * 0.15 + 2 * 0.15 + 3 * 0.15 + 4 * 0.15 + 5 * 0.15 + 6 * 0.25)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='e1DotDmgReceivedDebuff' text='E1 dot dmg debuff' disabled={e < 1} />\n      </Flex>\n    ),\n    defaults: () => ({\n      e1DotDmgReceivedDebuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.DOT_VULNERABILITY += (e >= 1 && r.e1DotDmgReceivedDebuff) ? 0.30 : 0\n      x.DOT_BOOST += (e >= 2) ? 0.25 : 0\n      x.DOT_SCALING += (e >= 6) ? 1.56 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction jingyuan(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.00, 1.10)\n  let ultScaling = ult(e, 2.00, 2.16)\n  let fuaScaling = talent(e, 0.66, 0.726)\n\n  let hitMulti = 0\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillCritBuff' text='Skill cr buff' />\n        <FormSlider name='talentHitsPerAction' text='Talent stacks' min={3} max={10} />\n        <FormSlider name='talentAttacks' text='Talent hit on target' min={0} max={10} />\n        <FormSwitch name='e2DmgBuff' text='E2 dmg buff' disabled={e < 2} />\n        <FormSlider name='e6FuaVulnerabilityStacks' text='E6 vulnerable stacks (applies to all hits)' min={0} max={3} disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillCritBuff: true,\n      talentHitsPerAction: 10,\n      talentAttacks: 10,\n      e2DmgBuff: true,\n      e6FuaVulnerabilityStacks: 3\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      r.talentHitsPerAction = Math.max(r.talentHitsPerAction, r.talentAttacks)\n\n      // Stats\n      x[Stats.CR] += (r.skillCritBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n      x.FUA_CD_BOOST += (r.talentHitsPerAction >= 6) ? 0.25 : 0\n      x.BASIC_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n      x.SKILL_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n      x.ULT_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n\n      x.FUA_VULNERABILITY += (e >= 6) ? r.e6FuaVulnerabilityStacks * 0.12 : 0\n\n      // Lightning lord calcs\n      let stacks = r.talentHitsPerAction\n      let hits = r.talentAttacks\n      let stacksPerMiss = (request.enemyCount >= 3) ? 2 : 0\n      let stacksPerHit = (request.enemyCount >= 3) ? 3 : 1\n      let stacksPreHit = (request.enemyCount >= 3) ? 2 : 1\n\n      // Calc stacks on miss\n      let ashblazingStacks = stacksPerMiss * (stacks - hits)\n\n      // Calc stacks on hit\n      ashblazingStacks += stacksPreHit\n      let atkBoostSum = 0\n      for (let i = 0; i < hits; i++) {\n        atkBoostSum += Math.min(8, ashblazingStacks) * (1 / hits)\n        ashblazingStacks += stacksPerHit\n      }\n\n      hitMulti = atkBoostSum * 0.06\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * r.talentAttacks * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction imbibitorlunae(e) {\n  let righteousHeartStackMax = (e >= 1) ? 10 : 6\n  let outroarStackCdValue = skill(e, 0.12, 0.132)\n  let righteousHeartDmgValue = talent(e, 0.10, 0.11)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let basicEnhanced1Scaling = basic(e, 2.60, 2.86)\n  let basicEnhanced2Scaling = basic(e, 3.80, 4.18)\n  let basicEnhanced3Scaling = basic(e, 5.00, 5.50)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 3.00, 3.24)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='basicEnhancements' text='Basic enhancements' min={0} max={3} />\n        <FormSlider name='skillOutroarStacks' text='Outroar stacks (applied to all hits)' min={0} max={4} />\n        <FormSlider name='talentRighteousHeartStacks' text='Righteous Heart stacks (applied to all hits)' min={0} max={righteousHeartStackMax} />\n        <FormSlider name='e6ResPenStacks' text='E6 RES pen stacks' min={0} max={3} disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicEnhancements: 3,\n      skillOutroarStacks: 4,\n      talentRighteousHeartStacks: righteousHeartStackMax,\n      e6ResPenStacks: 3,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CD] += (request.enemyElementalWeak) ? 0.24 : 0\n      x[Stats.CD] += r.skillOutroarStacks * outroarStackCdValue\n\n      // Scaling\n      x.BASIC_SCALING += {\n        0: basicScaling,\n        1: basicEnhanced1Scaling,\n        2: basicEnhanced2Scaling,\n        3: basicEnhanced3Scaling,\n      }[r.basicEnhancements]\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += r.talentRighteousHeartStacks * righteousHeartDmgValue\n      x.BASIC_RES_PEN += (e >= 6 && r.basicEnhancements == 3) ? 0.20 * r.e6ResPenStacks : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction huohuo(e) {\n  let ultBuffValue = ult(e, 0.40, 0.432)\n  let basicScaling = basic(e, 0.50, 0.55)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuff' text='Ult buff' />\n        <FormSwitch name='skillBuff' text='Skill buff' />\n        <FormSwitch name='e6DmgBuff' text='E6 dmg buff' disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuff: true,\n      skillBuff: true,\n      e6DmgBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.SPD_P] += (e >= 1 && r.skillBuff) ? 0.12 : 0\n      x[Stats.ATK_P] += (r.ultBuff) ? ultBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (e >= 6 && r.skillBuff) ? 0.50 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n    }\n  }\n}\n\nfunction hook(e) {\n  let targetBurnedExtraScaling = talent(e, 1.00, 1.10)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.40, 2.64)\n  let skillEnhancedScaling = skill(e, 2.80, 3.08)\n  let ultScaling = ult(e, 4.00, 4.32)\n  let dotScaling = skill(e, 0.65, 0.715)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedSkill' text='Enhanced skill' />\n        <FormSwitch name='targetBurned' text='Target burned' />\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedSkill: true,\n      targetBurned: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += (r.enhancedSkill) ? skillEnhancedScaling : skillScaling\n      x.ULT_SCALING += ultScaling\n      x.BASIC_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.SKILL_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.ULT_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.SKILL_BOOST += (e >= 1 && r.enhancedSkill) ? 0.20 : 0\n      x.ELEMENTAL_DMG += (e >= 6 && r.targetBurned) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\nfunction himeko(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let ultScaling = ult(e, 2.30, 2.484)\n  let fuaScaling = talent(e, 1.40, 1.54)\n  let dotScaling = 0.30\n\n  let hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1 * 0.20 + 2 * 0.20 + 3 * 0.20 + 4 * 0.40), // 0.168\n    3: ASHBLAZING_ATK_STACK * (2 * 0.20 + 5 * 0.20 + 8 * 0.20 + 8 * 0.40), // 0.372\n    5: ASHBLAZING_ATK_STACK * (3 * 0.20 + 8 * 0.20 + 8 * 0.20 + 8 * 0.40), // 0.42\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='targetBurned' text='Target burned' />\n        <FormSwitch name='selfCurrentHp80Percent' text='Self HP >= 80%' />\n        <FormSwitch name='e1TalentSpdBuff' text='E1 spd buff' disabled={e < 1} />\n        <FormSlider name='e6UltExtraHits' text='E6 ult extra hits' min={0} max={2} disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      targetBurned: true,\n      selfCurrentHp80Percent: true,\n      e1TalentSpdBuff: true,\n      e6UltExtraHits: 2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (r.selfCurrentHp80Percent) ? 0.15 : 0\n      x[Stats.SPD_P] += (e >= 1 && r.e1TalentSpdBuff) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 6) ? r.e6UltExtraHits * ultScaling * 0.40 : 0\n      x.FUA_SCALING += fuaScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.SKILL_BOOST += (r.targetBurned) ? 0.20 : 0\n      x.ELEMENTAL_DMG += (e >= 2 && request.enemyHpPercent <= 0.50) ? 0.15 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n\n      let hitMulti = hitMultiByTargets[request.enemyCount]\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction herta(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.00, 1.10)\n  let ultScaling = ult(e, 2.00, 2.16)\n  let fuaScaling = talent(e, 0.40, 0.43)\n\n  let hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1),\n    3: ASHBLAZING_ATK_STACK * (2 * 1 / 1),\n    5: ASHBLAZING_ATK_STACK * (3 * 1 / 1)\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='techniqueBuff' text='Technique buff' />\n        <FormSwitch name='targetFrozen' text='Target frozen' />\n        <FormSlider name='e2TalentCritStacks' text='E2 talent crit stacks' min={0} max={5} disabled={e < 2} />\n        <FormSwitch name='e6UltAtkBuff' text='E6 ult atk buff' disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      techniqueBuff: true,\n      targetFrozen: true,\n      e2TalentCritStacks: 5,\n      e6UltAtkBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.techniqueBuff) ? 0.40 : 0\n      x[Stats.CR] += (e >= 2) ? r.e2TalentCritStacks * 0.03 : 0\n      x[Stats.ATK_P] += (e >= 6 && r.e6UltAtkBuff) ? 0.25 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.BASIC_SCALING += (e >= 1 && request.enemyHpPercent <= 0.50) ? 0.40 : 0\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      x.SKILL_BOOST += (request.enemyHpPercent >= 0.50) ? 0.45 : 0\n\n      // Boost\n      x.ULT_BOOST += (r.targetFrozen) ? 0.20 : 0\n      x.FUA_BOOST += (e >= 4) ? 0.10 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      let hitMulti = hitMultiByTargets[request.enemyCount]\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction hanya(e) {\n  let ultSpdBuffValue = ult(e, 0.20, 0.21)\n  let ultAtkBuffValue = ult(e, 0.60, 0.648)\n  let talentDmgBoostValue = talent(e, 0.30, 0.33)\n\n  talentDmgBoostValue += (e >= 6) ? 0.10 : 0\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.40, 2.64)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuff' text='Ult buff active' />\n        <FormSwitch name='targetBurdenActive' text='Target burden active' />\n        <FormSwitch name='burdenAtkBuff' text='Burden atk buff' />\n        <FormSwitch name='e2SkillSpdBuff' text='E2 skill spd buff' disabled={e < 2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuff: true,\n      targetBurdenActive: true,\n      burdenAtkBuff: true,\n      skillSpdBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x[Stats.ATK_P] += (r.ultBuff) ? ultAtkBuffValue : 0\n      x[Stats.ATK_P] += (r.burdenAtkBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.e2SkillSpdBuff) ? 0.20 : 0\n\n      // Boost\n      x.ALL_DMG_MULTI = (r.targetBurdenActive) ? talentDmgBoostValue : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.SPD] += (r.ultBuff) ? ultSpdBuffValue * x[Stats.SPD] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction guinaifen(e) {\n  let talentDebuffDmgIncreaseValue = talent(e, 0.07, 0.076)\n  let talentDebuffMax = (e >= 6) ? 4 : 3\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let ultScaling = ult(e, 1.20, 1.296)\n  let dotScaling = skill(e, 2.182, 2.40)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='talentDebuffStacks' text='Talent debuff stacks' min={0} max={talentDebuffMax} />\n        <FormSwitch name='enemyBurned' text='Enemy burned' />\n        <FormSwitch name='e2BurnMultiBoost' text='E2 burn multi boost' disabled={e < 2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentDebuffStacks: talentDebuffMax,\n      enemyBurned: true,\n      e2BurnMultiBoost: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n      x.DOT_SCALING += (e >= 2 && r.e2BurnMultiBoost) ? 0.40 : 0\n\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.enemyBurned) ? 0.20 : 0\n      x.DMG_TAKEN_MULTI += r.talentDebuffStacks * talentDebuffDmgIncreaseValue\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction gepard(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: () => {\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.RES] += 0.20\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x[Stats.ATK] += 0.35 * x[Stats.DEF]\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction fuxuan(e) {\n  let skillCrBuffValue = skill(e, 0.12, 0.132)\n  let skillHpBuffValue = skill(e, 0.06, 0.066)\n  let talentDmgReductionValue = talent(e, 0.18, 0.196)\n\n  let basicScaling = basic(e, 0.50, 0.55)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 1.00, 1.08)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillActive' text='Skill active' />\n        <FormSlider name='e6TeamHpLostPercent' text='E6 team hp lost' min={0} max={1.2} percent disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillActive: true,\n      e6TeamHpLostPercent: 1.2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CD] += (e >= 1) ? 0.30 : 0\n      x[Stats.CR] += (r.skillActive) ? skillCrBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (1 - talentDmgReductionValue)\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.HP] += (r.skillActive) ? skillHpBuffValue * x[Stats.HP] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.HP]\n      x.ULT_DMG += (e >= 6) ? 2.00 * r.e6TeamHpLostPercent * x[Stats.HP] : 0\n    }\n  }\n}\nfunction danheng(e) {\n  let extraPenValue = talent(e, 0.36, 0.396)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.60, 2.86)\n  let ultScaling = ult(e, 4.00, 4.32)\n  let ultExtraScaling = ult(e, 1.20, 1.296)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='talentPenBuff' text='Talent pen buff' />\n        <FormSwitch name='enemySlowed' text='Enemy slowed' />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentPenBuff: true,\n      enemySlowed: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 1 && request.enemyHpPercent >= 0.50) ? 0.12 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (r.enemySlowed) ? ultExtraScaling : 0\n\n      // Boost\n      x.BASIC_BOOST += (r.enemySlowed) ? 0.40 : 0\n      x.RES_PEN += (r.talentPenBuff) ? extraPenValue : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction clara(e) {\n  let ultDmgReductionValue = ult(e, 0.25, 0.27)\n  let ultFuaExtraScaling = ult(e, 1.60, 1.728)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let fuaScaling = talent(e, 1.60, 1.76)\n\n  let hitMultiByTargetsBlast = {\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1),\n    3: ASHBLAZING_ATK_STACK * (2 * 1 / 1),\n    5: ASHBLAZING_ATK_STACK * (2 * 1 / 1) // Clara is 1 hit blast when enhanced\n  }\n\n  let hitMultiSingle = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuff' text='Ult buff' />\n        <FormSwitch name='talentEnemyMarked' text='Enemy marked' />\n        <FormSwitch name='e2UltAtkBuff' text='E2 ult ATK buff' disabled={e < 2} />\n        <FormSwitch name='e4DmgReductionBuff' text='E4 dmg reduction buff' disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuff: true,\n      talentEnemyMarked: true,\n      e2UltAtkBuff: true,\n      e4DmgReductionBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (e >= 2 && r.e2UltAtkBuff) ? 0.30 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      // x.SKILL_SCALING += r.talentEnemyMarked ?\n      x.FUA_SCALING += fuaScaling\n      x.FUA_SCALING += r.ultBuff ? ultFuaExtraScaling : 0\n\n      // Boost\n      x.DMG_RED_MULTI *= (1 - 0.10)\n      x.DMG_RED_MULTI *= r.ultBuff ? (1 - ultDmgReductionValue) : 1\n      x.DMG_RED_MULTI *= (e >= 4 && r.e4DmgReductionBuff) ? (1 - 0.30) : 1\n      x.FUA_BOOST += 0.30\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n\n      // Calc ashblazing: ult buff -> blast, unbuffed -> single\n      if (r.ultBuff) {\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiByTargetsBlast[request.enemyCount])\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      } else {\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiSingle)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      }\n    }\n  }\n}\n\nfunction bronya(e) {\n  let skillDmgBoostValue = skill(e, 0.66, 0.726)\n  let ultAtkBoostValue = ult(e, 0.55, 0.594)\n  let ultCdBoostValue = ult(e, 0.16, 0.168)\n  let ultCdBoostBaseValue = ult(e, 0.20, 0.216)\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let fuaScaling = basicScaling * 0.80\n\n  let hitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='techniqueBuff' text='Technique buff' />\n        <FormSwitch name='battleStartDefBuff' text='Battle start DEF buff' />\n        <FormSwitch name='skillBuff' text='Skill buff' />\n        <FormSwitch name='ultBuff' text='Ult buff' />\n        <FormSwitch name='e2SkillSpdBuff' text='E2 skill SPD buff' disabled={e < 2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      techniqueBuff: true,\n      battleStartDefBuff: true,\n      skillBuff: true,\n      ultBuff: true,\n      e2SkillSpdBuff: false,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.DEF_P] += (r.battleStartDefBuff) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.e2SkillSpdBuff) ? 0.30 : 0\n      x[Stats.ATK_P] += (r.techniqueBuff) ? 0.15 : 0\n      x[Stats.ATK_P] += (r.ultBuff) ? ultAtkBoostValue : 0\n      x.BASIC_CR_BOOST += 1.00\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.FUA_SCALING += (e >= 4) ? fuaScaling : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.10\n      x.ELEMENTAL_DMG += (r.skillBuff) ? skillDmgBoostValue : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      // Order matters?\n      x[Stats.CD] += (r.ultBuff) ? ultCdBoostValue * x[Stats.CD] : 0\n      x[Stats.CD] += (r.ultBuff) ? ultCdBoostBaseValue : 0\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction blade(e) {\n  let enhancedStateDmgBoost = skill(e, 0.40, 0.456)\n  let hpPercentLostTotalMax = 0.90\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let basicEnhancedAtkScaling = skill(e, 0.40, 0.44)\n  let basicEnhancedHpScaling = skill(e, 1.00, 1.10)\n  let ultAtkScaling = ult(e, 0.40, 0.432)\n  let ultHpScaling = ult(e, 1.00, 1.08)\n  let ultLostHpScaling = ult(e, 1.00, 1.08)\n  let fuaAtkScaling = talent(e, 0.44, 0.484)\n  let fuaHpScaling = talent(e, 1.10, 1.21)\n\n  let hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1 * 0.33 + 2 * 0.33 + 3 * 0.34),\n    3: ASHBLAZING_ATK_STACK * (2 * 0.33 + 5 * 0.33 + 8 * 0.34),\n    5: ASHBLAZING_ATK_STACK * (3 * 0.33 + 8 * 0.33 + 8 * 0.34),\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedStateActive' text='Enhanced state' />\n        <FormSlider name='hpPercentLostTotal' text='HP% lost total' min={0} max={hpPercentLostTotalMax} percent />\n        <FormSlider name='e4MaxHpIncreaseStacks' text='E4 max HP stacks' min={0} max={2} disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedStateActive: true,\n      hpPercentLostTotal: hpPercentLostTotalMax,\n      e4MaxHpIncreaseStacks: 2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 2 && r.enhancedStateActive) ? 0.15 : 0\n      x[Stats.HP_P] += (e >= 4) ? r.e4MaxHpIncreaseStacks * 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      // Rest of the scalings are calculated dynamically\n\n      // Boost\n      x.ELEMENTAL_DMG += r.enhancedStateActive ? enhancedStateDmgBoost : 0\n      x.FUA_BOOST += 0.20\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      if (r.enhancedStateActive) {\n        x.BASIC_DMG += basicEnhancedAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicEnhancedHpScaling * x[Stats.HP]\n      } else {\n        x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      }\n\n      x.ULT_DMG += ultAtkScaling * x[Stats.ATK]\n      x.ULT_DMG += ultHpScaling * x[Stats.HP]\n      x.ULT_DMG += ultLostHpScaling * r.hpPercentLostTotal * x[Stats.HP]\n      x.ULT_DMG += (e >= 1 && request.enemyCount == 1) ? 1.50 * r.hpPercentLostTotal * x[Stats.HP] : 0\n\n      let hitMulti = hitMultiByTargets[request.enemyCount]\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += fuaAtkScaling * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n\n      x.FUA_DMG += fuaHpScaling * x[Stats.HP]\n      x.FUA_DMG += (e >= 6) ? 0.50 * x[Stats.HP] : 0\n    }\n  }\n}\n\nfunction bailu(e) {\n  let basicScaling = basic(e, 1.0, 1.1)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='healingMaxHpBuff' text='Healing max HP buff' />\n        <FormSwitch name='talentDmgReductionBuff' text='Talent dmg reduced' />\n        <FormSwitch name='e2UltHealingBuff' text='E2 ult heal buff' disabled={e < 2} />\n        <FormSlider name='e4SkillHealingDmgBuffStacks' text='E4 dmg buff stacks' min={0} max={3} disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      healingMaxHpBuff: true,\n      talentDmgReductionBuff: true,\n      e2UltHealingBuff: true,\n      e4SkillHealingDmgBuffStacks: 0,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.HP_P] += (r.healingMaxHpBuff) ? 0.10 : 0\n      x[Stats.OHB] += (e >= 2 && r.e2UltHealingBuff) ? 0.15 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (r.talentDmgReductionBuff) ? (1 - 0.10) : 1\n      x.ALL_DMG_MULTI += (e >= 4) ? r.e4SkillHealingDmgBuffStacks * 0.10 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += 0\n      x.ULT_DMG += 0\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction asta(e) {\n  let ultSpdBuffValue = ult(e, 50, 52.8)\n  let talentStacksAtkBuff = talent(e, 0.14, 0.154)\n  let talentStacksDefBuff = 0.06\n  let skillExtraDmgHitsMax = (e >= 1) ? 5 : 4\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let skillScaling = skill(e, 0.50, 0.55)\n  let ultScaling = ult(e, 0, 0)\n  let dotScaling = basic(e, 0.50, 0.55)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='skillExtraDmgHits' text='Skill extra hits' min={0} max={skillExtraDmgHitsMax} />\n        <FormSlider name='talentBuffStacks' text='Talent ATK buff stacks' min={0} max={5} />\n        <FormSwitch name='ultSpdBuff' text='Ult SPD buff active' />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentBuffStacks: 5,\n      skillExtraDmgHits: skillExtraDmgHitsMax,\n      ultSpdBuff: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.talentBuffStacks) * talentStacksAtkBuff\n      x[Stats.DEF_P] += (r.talentBuffStacks) * talentStacksDefBuff\n      x[Stats.ERR] += (e >= 4 && r.talentBuffStacks >= 2) ? 0.15 : 0\n      x[Stats.SPD] += (r.ultSpdBuff) ? ultSpdBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.18\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += 0\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction arlan(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.40, 2.64)\n  let ultScaling = ult(e, 3.20, 3.456)\n\n  let talentMissingHpDmgBoostMax = talent(e, 0.72, 0.792)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='selfCurrentHpPercent' text='Self current HP%' min={0.01} max={1.0} percent />\n      </Flex>\n    ),\n    defaults: () => ({\n      selfCurrentHpPercent: 1.00,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x.ELEMENTAL_DMG += Math.min(talentMissingHpDmgBoostMax, 1 - r.selfCurrentHpPercent)\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.SKILL_BOOST += (e >= 1 && r.selfCurrentHpPercent <= 0.50) ? 0.10 : 0\n      x.ULT_BOOST += (e >= 6 && r.selfCurrentHpPercent <= 0.50) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction argenti(e) {\n  let talentMaxStacks = (e >= 4) ? 12 : 10\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let ultScaling = ult(e, 1.60, 1.728)\n  let ultEnhancedScaling = ult(e, 2.80, 3.024)\n  let ultEnhancedExtraHitScaling = ult(e, 0.95, 1.026)\n  let talentCrStackValue = talent(e, 0.025, 0.028)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultEnhanced' text='Enhanced ult' />\n        <FormSlider name='talentStacks' text='Talent stacks' min={0} max={talentMaxStacks} />\n        <FormSlider name='ultEnhancedExtraHits' text='Ult extra hits' min={0} max={6} />\n        <FormSwitch name='e2UltAtkBuff' text='E2 ult ATK buff' disabled={e < 2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultEnhanced: true,\n      talentStacks: talentMaxStacks,\n      ultEnhancedExtraHits: 6,\n      e2UltAtkBuff: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Skills\n      x[Stats.CR] += (r.talentStacks) * talentCrStackValue\n\n      // Traces\n\n      // Eidolons\n      x[Stats.CD] += (e >= 1) ? (r.talentStacks) * 0.04 : 0\n      x[Stats.ATK_P] += (e >= 2 && r.e2UltAtkBuff) ? 0.40 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += (r.ultEnhanced) ? ultEnhancedScaling : ultScaling\n      x.ULT_SCALING += (r.ultEnhancedExtraHits) * ultEnhancedExtraHitScaling\n\n      // BOOST\n      x.ULT_BOOST += (request.enemyHpPercent <= 0.5) ? 0.15 : 0\n      x.ULT_DEF_PEN += (e >= 6) ? 0.30 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction jingliu(e) {\n  let talentCrBuff = talent(e, 0.50, 0.52)\n  let talentHpDrainAtkBuffMax = talent(e, 1.80, 1.98)\n  talentHpDrainAtkBuffMax += (e >= 4) ? 0.30 : 0\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let skillEnhancedScaling = skill(e, 2.50, 2.75)\n  let ultScaling = ult(e, 3.00, 3.24)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='talentEnhancedState' text='Enhanced state' />\n        <FormSlider name='talentHpDrainAtkBuff' text='HP drain ATK buff' min={0} max={talentHpDrainAtkBuffMax} percent />\n        <FormSwitch name='e1CdBuff' text='E1 ult active' disabled={e < 1} />\n        <FormSwitch name='e2SkillDmgBuff' text='E2 skill buff' disabled={e < 2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentEnhancedState: true,\n      talentHpDrainAtkBuff: talentHpDrainAtkBuffMax,\n      e1CdBuff: true,\n      e2SkillDmgBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Skills\n      x[Stats.CR] += (r.talentEnhancedState) ? talentCrBuff : 0\n      x[Stats.ATK_P] += (r.talentEnhancedState) ? r.talentHpDrainAtkBuff : 0\n\n      // Traces\n      x[Stats.RES] += (r.talentEnhancedState) ? 0.35 : 0\n      x.ULT_BOOST += (r.talentEnhancedState) ? 0.20 : 0\n\n      // Eidolons\n      x[Stats.CD] += (e >= 1 && r.e1CdBuff) ? 0.24 : 0\n      x[Stats.CD] += (e >= 6 && r.talentEnhancedState) ? 0.50 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n\n      x.SKILL_SCALING += (r.talentEnhancedState) ? skillEnhancedScaling : skillScaling\n      x.SKILL_SCALING += (e >= 1 && r.talentEnhancedState && request.enemyCount == 1) ? 1 : 0\n\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 1 && request.enemyCount == 1) ? 1 : 0\n\n      x.FUA_SCALING += 0\n\n      // BOOST\n      x.SKILL_BOOST += (e >= 2 && r.talentEnhancedState && r.e2SkillDmgBuff) ? 0.80 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction blackswan(e) {\n  let arcanaStackMultiplier = talent(e, 0.12, 0.132)\n  let stack3ArcanaBlastDmg = talent(e, 1.80, 1.98)\n  let epiphanyDmgTakenBoost = ult(e, 0.25, 0.27)\n  let defShredValue = skill(e, 0.208, 0.22)\n\n  let basicScaling = basic(e, 0.60, 0.66)\n  let skillScaling = skill(e, 0.90, 0.99)\n  let ultScaling = ult(e, 1.20, 1.30)\n  let dotScaling = talent(e, 2.40, 2.64)\n\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='epiphanyDebuff' text='Epiphany debuff' />\n        <FormSwitch name='defDecreaseDebuff' text='Def decrease debuff' />\n        <FormSlider name='arcanaStacks' text='Arcana stacks' min={0} max={50} />\n        <FormSwitch name='e1ResReduction' text='E1 RES reduction' disabled={e < 1} />\n      </Flex>\n    ),\n    defaults: () => ({\n      epiphanyDebuff: true,\n      defDecreaseDebuff: true,\n      arcanaStacks: 7,\n      e1ResReduction: true\n    }),\n    precomputeEffects: (request) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling + arcanaStackMultiplier * r.arcanaStacks\n      x.DOT_SCALING += (r.arcanaStacks >= 3) ? stack3ArcanaBlastDmg : 0\n\n      x.DOT_DEF_PEN += (r.arcanaStacks >= 7) ? 0.20 : 0\n      x.DEF_SHRED += (r.defDecreaseDebuff) ? defShredValue : 0\n      x.DOT_VULNERABILITY += (r.epiphanyDebuff) ? epiphanyDmgTakenBoost : 0\n\n      x.RES_PEN += (e >= 1 && r.e1ResReduction) ? 0.25 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.ELEMENTAL_DMG += Math.min(0.72, 0.60 * x[Stats.EHR])\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction sparkle(e) {\n  let skillCdBuffScaling = skill(e, 0.24, 0.264)\n  let skillCdBuffBase = skill(e, 0.45, 0.486)\n  let cipherTalentStackBoost = ult(e, 0.10, 0.108)\n  let talentBaseStackBoost = ult(e, 0.06, 0.066)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  let atkBoostByQuantumAllies = {\n    0: 0,\n    1: 0.05,\n    2: 0.15,\n    3: 0.30,\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillCdBuff' text='Skill CD buff' />\n        <FormSwitch name='cipherBuff' text='Cipher buff' />\n        <FormSlider name='talentStacks' text='Talent DMG stacks' min={0} max={3} />\n        <FormSlider name='quantumAllies' text='Quantum allies' min={0} max={3} />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillCdBuff: true,\n      cipherBuff: true,\n      talentStacks: 3,\n      quantumAllies: 3,\n    }),\n    precomputeEffects: (request) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      x[Stats.ATK_P] += 0.15 + (atkBoostByQuantumAllies[r.quantumAllies] || 0)\n      x[Stats.ATK_P] += (e >= 1 && r.cipherBuff) ? 0.40 : 0\n\n      x.ELEMENTAL_DMG += (r.cipherBuff) ? r.talentStacks * (talentBaseStackBoost + cipherTalentStackBoost) : r.talentStacks * talentBaseStackBoost\n      x.DEF_SHRED += (e >= 2) ? 0.08 * r.talentStacks : 0\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.CD] += (r.skillCdBuff) ? skillCdBuffBase + skillCdBuffScaling * x[Stats.CD] : 0\n      x[Stats.CD] += (e >= 6 && r.skillCdBuff) ? 0.30 * x[Stats.CD] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction misha(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let ultStackScaling = ult(e, 0.60, 0.65)\n  ultStackScaling += (e >= 4 ? 0.06 : 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='ultHitsOnTarget' text='Ult hits on target' min={1} max={10} />\n        <FormSwitch name='enemyFrozen' text='Enemy frozen' />\n        <FormSwitch name='e2DefReduction' text='E2 def reduction' disabled={e < 2} />\n        <FormSwitch name='e6UltDmgBoost' text='E6 ult dmg boost' disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultHitsOnTarget: 10,\n      enemyFrozen: true,\n      e2DefReduction: true,\n      e6UltDmgBoost: true,\n    }),\n    precomputeEffects: (request) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      x[Stats.CD] += (r.enemyFrozen) ? 0.30 : 0\n\n      x.DEF_SHRED += (e >= 2 && r.e2DefReduction) ? 0.16 : 0\n      x.ELEMENTAL_DMG += (e >= 6 && r.e6UltDmgBoost) ? 0.30 : 0\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultStackScaling * (r.ultHitsOnTarget)\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction skill(e, value1, value2) {\n  return e >= 3 ? value2 : value1\n}\n\nlet talent = skill\n\nfunction ult(e, value1, value2) {\n  return e >= 5 ? value2 : value1\n}\nlet basic = ult\n\nfunction p4(set) {\n  return set >> 2\n}\n\nexport const CharacterConditionals = {\n  get: (request) => {\n    let characterFn = characterOptionMapping[request.characterId]\n    return characterFn(request.characterEidolon)\n  },\n  getDisplayForCharacter: (id, eidolon) => {\n    // console.log('getDisplayForCharacter', id)\n    if (!id || !characterOptionMapping[id]) {\n      return (\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Character passives</HeaderText>\n          <TooltipImage type={Hint.characterPassives()} />\n        </Flex>\n      )\n    }\n\n    let characterFn = characterOptionMapping[id]\n    let display = characterFn(eidolon).display()\n\n    return (\n      <ConfigProvider\n        theme={{\n          token: {\n            opacityLoading: 0.15\n          }\n        }}\n      >\n        <Flex vertical gap={5}>\n          <Flex justify='space-between' align='center'>\n            <HeaderText>Character passives</HeaderText>\n            <TooltipImage type={Hint.characterPassives()} />\n          </Flex>\n          {display}\n        </Flex>\n      </ConfigProvider>\n    )\n  },\n}","import { Constants } from \"./constants.ts\";\n\nexport const CharacterStats = {\n  getZeroes: function () {\n    return {\n      [Constants.Stats.ATK]: 0,\n      [Constants.Stats.DEF]: 0,\n      [Constants.Stats.HP]: 0,\n      [Constants.Stats.ATK_P]: 0,\n      [Constants.Stats.DEF_P]: 0,\n      [Constants.Stats.HP_P]: 0,\n      [Constants.Stats.SPD]: 0,\n      [Constants.Stats.SPD_P]: 0,\n      [Constants.Stats.CR]: 0,\n      [Constants.Stats.CD]: 0,\n      [Constants.Stats.EHR]: 0,\n      [Constants.Stats.RES]: 0,\n      [Constants.Stats.BE]: 0,\n      [Constants.Stats.ERR]: 0,\n      [Constants.Stats.OHB]: 0,\n      [Constants.Stats.Physical_DMG]: 0,\n      [Constants.Stats.Fire_DMG]: 0,\n      [Constants.Stats.Ice_DMG]: 0,\n      [Constants.Stats.Lightning_DMG]: 0,\n      [Constants.Stats.Wind_DMG]: 0,\n      [Constants.Stats.Quantum_DMG]: 0,\n      [Constants.Stats.Imaginary_DMG]: 0,\n    }\n  },\n}\n\n// HP_P: 'HP%',\n// ATK_P: 'ATK%',\n// DEF_P: 'DEF%',\n// HP: 'HP',\n// ATK: 'ATK',\n// DEF: 'DEF',\n// SPD: 'SPD',\n// CD: 'CRIT DMG',\n// CR: 'CRIT Rate',\n// EHR: 'Effect Hit Rate',\n// RES: 'Effect RES',\n// BE: 'Break Effect',\n// ERR: 'Energy Regeneration Rate',\n// OHB: 'Outgoing Healing Boost',\n// Physical_DMG: 'Physical DMG Boost',\n// Fire_DMG: 'Fire DMG Boost',\n// Ice_DMG: 'Ice DMG Boost',\n// Lightning_DMG: 'Lightning DMG Boost',\n// Wind_DMG: 'Wind DMG Boost',\n// Quantum_DMG: 'Quantum DMG Boost',\n// Imaginary_DMG: 'Imaginary DMG Boost'","import { Constants } from \"./constants.ts\";\nimport DB from \"./db\";\nimport { CharacterStats } from \"./characterStats\";\nimport { Utils } from \"./utils\";\n\nlet maxedMainStats\n\nexport const StatCalculator = {\n  getMaxedMainStat: (relic) => {\n    if (!maxedMainStats) {\n      maxedMainStats = {\n        [Constants.Stats.SPD]: [7.613, 11.419, 16.426, 25.032],\n        [Constants.Stats.HP]: [139.991, 281.111, 469.647, 705.600],\n        [Constants.Stats.ATK]: [69.996, 140.556, 234.824, 352.800],\n        [Constants.Stats.HP_P]: [8.571, 17.211, 28.754, 43.200],\n        [Constants.Stats.ATK_P]: [8.571, 17.211, 28.754, 43.200],\n        [Constants.Stats.DEF_P]: [10.714, 21.514, 35.942, 54.000],\n        [Constants.Stats.CR]: [6.428, 12.908, 21.565, 32.400],\n        [Constants.Stats.CD]: [12.856, 25.817, 43.130, 64.800],\n        [Constants.Stats.OHB]: [6.856, 13.769, 23.003, 34.561],\n        [Constants.Stats.EHR]: [8.571, 17.211, 28.754, 43.200],\n        [Constants.Stats.BE]: [12.856, 25.817, 43.130, 64.800],\n        [Constants.Stats.ERR]: [3.857, 7.745, 12.939, 19.439],\n        [Constants.Stats.Physical_DMG]: [7.714, 15.490, 25.878, 38.880],\n        [Constants.Stats.Fire_DMG]: [7.714, 15.490, 25.878, 38.880],\n        [Constants.Stats.Ice_DMG]: [7.714, 15.490, 25.878, 38.880],\n        [Constants.Stats.Lightning_DMG]: [7.714, 15.490, 25.878, 38.880],\n        [Constants.Stats.Wind_DMG]: [7.714, 15.490, 25.878, 38.880],\n        [Constants.Stats.Quantum_DMG]: [7.714, 15.490, 25.878, 38.880],\n        [Constants.Stats.Imaginary_DMG]: [7.714, 15.490, 25.878, 38.880],\n      }\n    }\n\n    return maxedMainStats[relic.main.stat][relic.grade - 2]\n  },\n\n  calculateCharacterWithRelics(character, relics) {\n    if (!character) return console.log('No character selected');\n\n    let form = character.form\n    let characterMetadata = DB.getMetadata().characters[character.id]\n    let characterLevel = form.characterLevel\n\n    let lightConeMetadata;\n    let lightConeLevel;\n    let lightConeSuperimposition;\n    let lightConeStats;\n    let superimpositionStats;\n\n    if (form.lightCone && form.lightCone != '0') {\n      lightConeMetadata = DB.getMetadata().lightCones[form.lightCone]\n      lightConeLevel = form.lightConeLevel\n      lightConeSuperimposition = form.lightConeSuperimposition\n      lightConeStats = lightConeMetadata.promotions[lightConeLevel]\n      superimpositionStats = lightConeMetadata.superimpositions[lightConeSuperimposition]\n    } else {\n      console.log('No light cone selected');\n      lightConeLevel = 0\n      lightConeSuperimposition = 0\n      lightConeStats = {}\n      superimpositionStats = {}\n    }\n\n    let traceStats = characterMetadata.traces\n    let characterStats = characterMetadata.promotions[characterLevel]\n\n    let element = characterMetadata.element\n    let elementalMultipliers = [\n      element == 'Physical' ? 1 : 0,\n      element == 'Fire' ? 1 : 0,\n      element == 'Ice' ? 1 : 0,\n      element == 'Thunder' ? 1 : 0,\n      element == 'Wind' ? 1 : 0,\n      element == 'Quantum' ? 1 : 0,\n      element == 'Imaginary' ? 1 : 0,\n    ]\n\n    let baseStats = {\n      base: {\n        ...CharacterStats.getZeroes(),\n        ...characterStats\n      },\n      traces: {\n        ...CharacterStats.getZeroes(),\n        ...traceStats\n      },\n      lightCone: {\n        ...CharacterStats.getZeroes(),\n        ...lightConeStats,\n        ...superimpositionStats\n      }\n    }\n\n    let lc = baseStats.lightCone\n    let base = baseStats.base\n    let trace = baseStats.traces\n\n    let { relicSets, ornamentSets } = Utils.relicsToSetArrays(relics);\n\n    console.log(characterMetadata, lightConeMetadata)\n    console.log(baseStats)\n    console.log(relics)\n\n    function sum(relics, stat) {\n      let total = 0\n      for (let relic of relics) {\n        if (!relic) continue\n        total += relic.augmentedStats[stat] || 0\n\n        if (stat == relic.augmentedStats.mainStat) {\n          total += relic.augmentedStats.mainValue\n        }\n      }\n\n      return total\n    }\n\n    let crSum = sum(relics, Constants.Stats.CR)\n    let cdSum = sum(relics, Constants.Stats.CD)\n\n    let hero = {\n      [Constants.Stats.HP]: (base[Constants.Stats.HP] + lc[Constants.Stats.HP]) * (1 + 0.12 * Math.min(1, ornamentSets[1] >> 1) + 0.12 * Math.min(1, relicSets[12] >> 1) + sum(relics, Constants.Stats.HP_P) + trace[Constants.Stats.HP_P] + lc[Constants.Stats.HP_P]) + sum(relics, Constants.Stats.HP),\n      [Constants.Stats.ATK]: (base[Constants.Stats.ATK] + lc[Constants.Stats.ATK]) * (1 + 0.12 * Math.min(1, ornamentSets[0] >> 1) + 0.12 * Math.min(1, ornamentSets[10] >> 1) + 0.12 * Math.min(1, relicSets[1] >> 1) + 0.12 * Math.min(1, relicSets[15] >> 1) + sum(relics, Constants.Stats.ATK_P) + trace[Constants.Stats.ATK_P] + lc[Constants.Stats.ATK_P]) + sum(relics, Constants.Stats.ATK),\n      [Constants.Stats.DEF]: (base[Constants.Stats.DEF] + lc[Constants.Stats.DEF]) * (1 + 0.15 * Math.min(1, ornamentSets[3] >> 1) + 0.15 * Math.min(1, relicSets[2] >> 1) + sum(relics, Constants.Stats.DEF_P) + trace[Constants.Stats.DEF_P] + lc[Constants.Stats.DEF_P]) + sum(relics, Constants.Stats.DEF),\n      [Constants.Stats.SPD]: (base[Constants.Stats.SPD] + lc[Constants.Stats.SPD]) * (1 + 0.06 * Math.min(1, relicSets[13] >> 1) + 0.06 * (relicSets[1] >> 2) + sum(relics, Constants.Stats.SPD_P) + trace[Constants.Stats.SPD_P]) + sum(relics, Constants.Stats.SPD) + trace[Constants.Stats.SPD],\n      [Constants.Stats.CR]: 0.08 * Math.min(1, ornamentSets[5] >> 1) + 0.08 * Math.min(1, ornamentSets[8] >> 1) + (base[Constants.Stats.CR] + lc[Constants.Stats.CR] + crSum + trace[Constants.Stats.CR]),\n      [Constants.Stats.CD]: 0.16 * Math.min(1, ornamentSets[4] >> 1) + (base[Constants.Stats.CD] + lc[Constants.Stats.CD] + cdSum + trace[Constants.Stats.CD]),\n      [Constants.Stats.EHR]: 0.1 * Math.min(1, ornamentSets[2] >> 1) + (base[Constants.Stats.EHR] + lc[Constants.Stats.EHR] + sum(relics, Constants.Stats.EHR) + trace[Constants.Stats.EHR]),\n      [Constants.Stats.RES]: 0.1 * Math.min(1, ornamentSets[9] >> 1) + (base[Constants.Stats.RES] + lc[Constants.Stats.RES] + sum(relics, Constants.Stats.RES) + trace[Constants.Stats.RES]),\n      [Constants.Stats.BE]: 0.16 * Math.min(1, ornamentSets[6] >> 1) + 0.16 * Math.min(1, relicSets[10] >> 1) + 0.16 * (relicSets[10] >> 2) + (base[Constants.Stats.BE] + lc[Constants.Stats.BE] + sum(relics, Constants.Stats.BE) + trace[Constants.Stats.BE]),\n      [Constants.Stats.ERR]: 0.05 * Math.min(1, ornamentSets[7] >> 1) + 0.05 * Math.min(1, ornamentSets[11] >> 1) + (base[Constants.Stats.ERR] + lc[Constants.Stats.ERR] + sum(relics, Constants.Stats.ERR) + trace[Constants.Stats.ERR]),\n      [Constants.Stats.OHB]: 0.1 * Math.min(1, relicSets[0] >> 1) + (base[Constants.Stats.OHB] + lc[Constants.Stats.OHB] + sum(relics, Constants.Stats.OHB) + trace[Constants.Stats.OHB]),\n      [Constants.Stats.Physical_DMG]: 0.1 * Math.min(1, relicSets[4] >> 1) + (base[Constants.Stats.Physical_DMG] + lc[Constants.Stats.Physical_DMG] + sum(relics, Constants.Stats.Physical_DMG) + trace[Constants.Stats.Physical_DMG]),\n      [Constants.Stats.Fire_DMG]: 0.1 * Math.min(1, relicSets[6] >> 1) + (base[Constants.Stats.Fire_DMG] + lc[Constants.Stats.Fire_DMG] + sum(relics, Constants.Stats.Fire_DMG) + trace[Constants.Stats.Fire_DMG]),\n      [Constants.Stats.Ice_DMG]: 0.1 * Math.min(1, relicSets[3] >> 1) + (base[Constants.Stats.Ice_DMG] + lc[Constants.Stats.Ice_DMG] + sum(relics, Constants.Stats.Ice_DMG) + trace[Constants.Stats.Ice_DMG]),\n      [Constants.Stats.Lightning_DMG]: 0.1 * Math.min(1, relicSets[8] >> 1) + (base[Constants.Stats.Lightning_DMG] + lc[Constants.Stats.Lightning_DMG] + sum(relics, Constants.Stats.Lightning_DMG) + trace[Constants.Stats.Lightning_DMG]),\n      [Constants.Stats.Wind_DMG]: 0.1 * Math.min(1, relicSets[9] >> 1) + (base[Constants.Stats.Wind_DMG] + lc[Constants.Stats.Wind_DMG] + sum(relics, Constants.Stats.Wind_DMG) + trace[Constants.Stats.Wind_DMG]),\n      [Constants.Stats.Quantum_DMG]: 0.1 * Math.min(1, relicSets[7] >> 1) + (base[Constants.Stats.Quantum_DMG] + lc[Constants.Stats.Quantum_DMG] + sum(relics, Constants.Stats.Quantum_DMG) + trace[Constants.Stats.Quantum_DMG]),\n      [Constants.Stats.Imaginary_DMG]: 0.1 * Math.min(1, relicSets[11] >> 1) + (base[Constants.Stats.Imaginary_DMG] + lc[Constants.Stats.Imaginary_DMG] + sum(relics, Constants.Stats.Imaginary_DMG) + trace[Constants.Stats.Imaginary_DMG])\n    }\n\n    let elementalDmg = 0\n    if (elementalMultipliers[0]) elementalDmg = 0.1 * Math.min(1, relicSets[4] >> 1) + (base[Constants.Stats.Physical_DMG] + lc[Constants.Stats.Physical_DMG] + sum(relics, Constants.Stats.Physical_DMG) + trace[Constants.Stats.Physical_DMG])\n    if (elementalMultipliers[1]) elementalDmg = 0.1 * Math.min(1, relicSets[6] >> 1) + (base[Constants.Stats.Fire_DMG] + lc[Constants.Stats.Fire_DMG] + sum(relics, Constants.Stats.Fire_DMG) + trace[Constants.Stats.Fire_DMG])\n    if (elementalMultipliers[2]) elementalDmg = 0.1 * Math.min(1, relicSets[3] >> 1) + (base[Constants.Stats.Ice_DMG] + lc[Constants.Stats.Ice_DMG] + sum(relics, Constants.Stats.Ice_DMG) + trace[Constants.Stats.Ice_DMG])\n    if (elementalMultipliers[3]) elementalDmg = 0.1 * Math.min(1, relicSets[8] >> 1) + (base[Constants.Stats.Lightning_DMG] + lc[Constants.Stats.Lightning_DMG] + sum(relics, Constants.Stats.Lightning_DMG) + trace[Constants.Stats.Lightning_DMG])\n    if (elementalMultipliers[4]) elementalDmg = 0.1 * Math.min(1, relicSets[9] >> 1) + (base[Constants.Stats.Wind_DMG] + lc[Constants.Stats.Wind_DMG] + sum(relics, Constants.Stats.Wind_DMG) + trace[Constants.Stats.Wind_DMG])\n    if (elementalMultipliers[5]) elementalDmg = 0.1 * Math.min(1, relicSets[7] >> 1) + (base[Constants.Stats.Quantum_DMG] + lc[Constants.Stats.Quantum_DMG] + sum(relics, Constants.Stats.Quantum_DMG) + trace[Constants.Stats.Quantum_DMG])\n    if (elementalMultipliers[6]) elementalDmg = 0.1 * Math.min(1, relicSets[11] >> 1) + (base[Constants.Stats.Imaginary_DMG] + lc[Constants.Stats.Imaginary_DMG] + sum(relics, Constants.Stats.Imaginary_DMG) + trace[Constants.Stats.Imaginary_DMG])\n\n    // let cappedCrit = Math.min(hero[Constants.Stats.CR] + form.buffCr, 1)\n    let ehp = hero[Constants.Stats.HP] / (1 - hero[Constants.Stats.DEF] / (hero[Constants.Stats.DEF] + 200 + 10 * 80))\n    let cv = 100 * (crSum * 2 + cdSum)\n\n    hero.ED = elementalDmg\n    hero.CV = cv\n    hero.EHP = ehp\n\n    hero.WEIGHT = 0\n    hero.BASIC = 0\n    hero.SKILL = 0\n    hero.ULT = 0\n    hero.FUA = 0\n    hero.DOT = 0\n    hero.xATK = 0\n    hero.xDEF = 0\n    hero.xHP = 0\n    hero.xSPD = 0\n    hero.xCR = 0\n    hero.xCD = 0\n    hero.xEHR = 0\n    hero.xRES = 0\n    hero.xBE = 0\n    hero.xERR = 0\n    hero.xOHB = 0\n    hero.xELEMENTAL_DMG = 0\n\n\n    return hero;\n  },\n\n  calculate(character) {\n    if (!character) return console.log('No character selected');\n\n    const relicsById = window.store.getState().relicsById\n    let relics = Object.values(character.equipped).map(x => relicsById[x])\n\n    return StatCalculator.calculateCharacterWithRelics(character, relics)\n  },\n}","import { inPlaceSort } from 'fast-sort';\nimport DB from './db';\nimport { Message } from \"./message\";\nimport { SaveState } from \"./saveState\";\nimport { Constants } from \"./constants.ts\";\nimport { Utils } from \"./utils\";\nimport { LightConeConditionals } from \"./lightConeConditionals\";\nimport { CharacterConditionals } from \"./characterConditionals\";\nimport { CharacterStats } from \"./characterStats\";\nimport { StatCalculator } from \"./statCalculator\";\n\nlet relics\nlet consts\nlet aggs\nlet rows = []\nlet filteredIndices\nlet filterModel\nlet sortModel\n\nlet columnsToAggregate\nlet columnsToAggregateMap\n\nexport const OptimizerTabController = {\n  setMetadata: (inputConsts, inputRelics) => {\n    consts = inputConsts\n    relics = inputRelics\n  },\n\n  getMetadata: () => {\n    return {\n      consts: consts,\n      relics: relics,\n    }\n  },\n\n  setAggs: (x) => {\n    aggs = x\n  },\n\n  getAggs: () => {\n    return aggs\n  },\n\n  setRows: (x) => {\n    rows = x\n  },\n\n  setTopRow: (x) => {\n    // delete x.id\n    window.optimizerGrid.current.api.updateGridOptions({ pinnedTopRowData: [x] })\n  },\n\n  getRows: () => {\n    return rows\n  },\n\n  equipClicked: () => {\n    console.log('Equip clicked');\n    let formValues = OptimizerTabController.getForm()\n    let characterId = formValues.characterId\n\n    if (!characterId) {\n      return;\n    }\n    DB.addFromForm(formValues)\n\n    let selectedNodes = window.optimizerGrid.current.api.getSelectedNodes()\n    if (!selectedNodes || selectedNodes.length == 0) {\n      return\n    }\n\n    let row = selectedNodes[0].data\n    let build = OptimizerTabController.calculateRelicsFromId(row.id)\n\n    DB.equipRelicIdsToCharacter(Object.values(build), characterId)\n    Message.success('Equipped relics')\n    OptimizerTabController.setTopRow(row)\n    window.setOptimizerBuild(build);\n    window.relicsGrid.current.api.redrawRows()\n    SaveState.save()\n  },\n\n  cellClicked: (event) => {\n    let data = event.data\n\n    if (event.rowPinned == \"top\") {\n      console.log('Top row clicked', event.data)\n      let fieldValues = OptimizerTabController.getForm()\n      if (event.data && fieldValues.characterId) {\n        let character = DB.getCharacterById(fieldValues.characterId);\n\n        if (character) {\n          window.setOptimizerBuild(character.equipped);\n        }\n      }\n      return\n    }\n\n    console.log('cellClicked', event);\n\n    let build = OptimizerTabController.calculateRelicsFromId(data.id)\n    console.log('build', build)\n    window.setOptimizerBuild(build);\n  },\n\n  getColumnsToAggregate: (map) => {\n    if (!columnsToAggregate) {\n      columnsToAggregateMap = {\n        [Constants.Stats.HP]: true,\n        [Constants.Stats.ATK]: true,\n        [Constants.Stats.DEF]: true,\n        [Constants.Stats.SPD]: true,\n        [Constants.Stats.CR]: true,\n        [Constants.Stats.CD]: true,\n        [Constants.Stats.EHR]: true,\n        [Constants.Stats.RES]: true,\n        [Constants.Stats.BE]: true,\n        [Constants.Stats.ERR]: true,\n        [Constants.Stats.OHB]: true,\n        // For custom ones remember to set the min/max in aggregate()\n        'ED': true,\n        'CV': true,\n        'WEIGHT': true,\n        'EHP': true,\n\n        'BASIC': true,\n        'SKILL': true,\n        'ULT': true,\n        'FUA': true,\n        'DOT': true,\n\n        'xATK': true,\n        'xDEF': true,\n        'xHP': true,\n        'xSPD': true,\n        'xCR': true,\n        'xCD': true,\n        'xEHR': true,\n        'xRES': true,\n        'xBE': true,\n        'xERR': true,\n        'xOHB': true,\n        'xELEMENTAL_DMG': true,\n\n      }\n      columnsToAggregate = Object.keys(columnsToAggregateMap)\n    }\n\n    return map ? columnsToAggregateMap : columnsToAggregate\n  },\n\n  resetDataSource: () => {\n    window.optimizerGrid.current.api.updateGridOptions({ datasource: OptimizerTabController.getDataSource(sortModel, filterModel) })\n  },\n\n  getDataSource: (newSortModel, newFilterModel) => {\n    sortModel = newSortModel\n    filterModel = newFilterModel\n    return {\n      getRows: (params) => {\n        console.log(params);\n        aggs = undefined\n        window.optimizerGrid.current.api.showLoadingOverlay()\n\n        // Give it time to show the loading page before we block\n        Utils.sleep(100).then(() => {\n          if (params.sortModel.length > 0 && params.sortModel[0] != sortModel) {\n            sortModel = params.sortModel[0]\n            sort()\n          }\n\n          if (filterModel) {\n            filter(filterModel)\n            let indicesSubArray = filteredIndices.slice(params.startRow, params.endRow);\n            let subArray = []\n            for (let index of indicesSubArray) {\n              subArray.push(rows[index])\n            }\n            aggregate(subArray)\n            params.successCallback(subArray, filteredIndices.length)\n          } else {\n            let subArray = rows.slice(params.startRow, params.endRow);\n            aggregate(subArray)\n\n            params.successCallback(subArray, rows.length)\n          }\n          window.optimizerGrid.current.api.hideOverlay()\n          OptimizerTabController.redrawRows()\n        })\n      },\n    };\n  },\n\n  calculateRelicsFromId: (id) => {\n    let lSize = consts.lSize\n    let pSize = consts.pSize\n    let fSize = consts.fSize\n    let bSize = consts.bSize\n    let gSize = consts.gSize\n    let hSize = consts.hSize\n\n    let x = id\n    let l = (x % lSize);\n    let p = (((x - l) / lSize) % pSize);\n    let f = (((x - p * lSize - l) / (lSize * pSize)) % fSize);\n    let b = (((x - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize)) % bSize);\n    let g = (((x - b * fSize * pSize * lSize - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize * bSize)) % gSize);\n    let h = (((x - g * bSize * fSize * pSize * lSize - b * fSize * pSize * lSize - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize * bSize * gSize)) % hSize);\n\n    let characterId = OptimizerTabController.getForm().characterId\n    relics.Head[h].optimizerCharacterId = characterId\n    relics.Hands[g].optimizerCharacterId = characterId\n    relics.Body[b].optimizerCharacterId = characterId\n    relics.Feet[f].optimizerCharacterId = characterId\n    relics.PlanarSphere[p].optimizerCharacterId = characterId\n    relics.LinkRope[l].optimizerCharacterId = characterId\n\n    return {\n      Head: relics.Head[h].id,\n      Hands: relics.Hands[g].id,\n      Body: relics.Body[b].id,\n      Feet: relics.Feet[f].id,\n      PlanarSphere: relics.PlanarSphere[p].id,\n      LinkRope: relics.LinkRope[l].id\n    };\n  },\n\n  getForm: () => {\n    let form = window.optimizerForm.getFieldsValue();\n    return OptimizerTabController.fixForm(form);\n  },\n\n  getDisplayFormValues: (form) => {\n    let newForm = JSON.parse(JSON.stringify(form))\n\n    newForm.maxHp = unsetMax(form.maxHp)\n    newForm.minHp = unsetMin(form.minHp)\n    newForm.maxAtk = unsetMax(form.maxAtk)\n    newForm.minAtk = unsetMin(form.minAtk)\n    newForm.maxDef = unsetMax(form.maxDef)\n    newForm.minDef = unsetMin(form.minDef)\n    newForm.maxSpd = unsetMax(form.maxSpd)\n    newForm.minSpd = unsetMin(form.minSpd)\n    newForm.maxCr = unsetMax(form.maxCr, true)\n    newForm.minCr = unsetMin(form.minCr, true)\n    newForm.maxCd = unsetMax(form.maxCd, true)\n    newForm.minCd = unsetMin(form.minCd, true)\n    newForm.maxEhr = unsetMax(form.maxEhr, true)\n    newForm.minEhr = unsetMin(form.minEhr, true)\n    newForm.maxRes = unsetMax(form.maxRes, true)\n    newForm.minRes = unsetMin(form.minRes, true)\n    newForm.maxBe = unsetMax(form.maxBe, true)\n    newForm.minBe = unsetMin(form.minBe, true)\n    newForm.maxCv = unsetMax(form.maxCv)\n    newForm.minCv = unsetMin(form.minCv)\n    newForm.maxWeight = unsetMax(form.maxWeight)\n    newForm.minWeight = unsetMin(form.minWeight)\n    newForm.maxEhp = unsetMax(form.maxEhp)\n    newForm.minEhp = unsetMin(form.minEhp)\n\n    newForm.maxBasic = unsetMax(form.maxBasic)\n    newForm.minBasic = unsetMin(form.minBasic)\n    newForm.maxSkill = unsetMax(form.maxSkill)\n    newForm.minSkill = unsetMin(form.minSkill)\n    newForm.maxUlt = unsetMax(form.maxUlt)\n    newForm.minUlt = unsetMin(form.minUlt)\n    newForm.maxFua = unsetMax(form.maxFua)\n    newForm.minFua = unsetMin(form.minFua)\n    newForm.maxDot = unsetMax(form.maxDot)\n    newForm.minDot = unsetMin(form.minDot)\n\n    newForm.buffAtk = unsetMin(form.buffAtk)\n    newForm.buffAtkP = unsetMin(form.buffAtkP, true)\n    newForm.buffCr = unsetMin(form.buffCr, true)\n    newForm.buffCd = unsetMin(form.buffCd, true)\n    newForm.buffSpd = unsetMin(form.buffSpd)\n    newForm.buffSpdP = unsetMin(form.buffSpdP, true)\n    newForm.buffBe = unsetMin(form.buffBe, true)\n    newForm.buffDmgBoost = unsetMin(form.buffDmgBoost, true)\n    newForm.buffDefShred = unsetMin(form.buffDefShred, true)\n    newForm.buffResPen = unsetMin(form.buffResPen, true)\n    if (!newForm.setConditionals) {\n      newForm.setConditionals = {\n        [Constants.Sets.PasserbyOfWanderingCloud]: [undefined, true],\n        [Constants.Sets.MusketeerOfWildWheat]: [undefined, true],\n        [Constants.Sets.KnightOfPurityPalace]: [undefined, true],\n        [Constants.Sets.HunterOfGlacialForest]: [undefined, true],\n        [Constants.Sets.ChampionOfStreetwiseBoxing]: [undefined, 5],\n        [Constants.Sets.GuardOfWutheringSnow]: [undefined, true],\n        [Constants.Sets.FiresmithOfLavaForging]: [undefined, true],\n        [Constants.Sets.GeniusOfBrilliantStars]: [undefined, true],\n        [Constants.Sets.BandOfSizzlingThunder]: [undefined, true],\n        [Constants.Sets.EagleOfTwilightLine]: [undefined, true],\n        [Constants.Sets.ThiefOfShootingMeteor]: [undefined, true],\n        [Constants.Sets.WastelanderOfBanditryDesert]: [undefined, 0],\n        [Constants.Sets.LongevousDisciple]: [undefined, 2],\n        [Constants.Sets.MessengerTraversingHackerspace]: [undefined, true],\n        [Constants.Sets.TheAshblazingGrandDuke]: [undefined, 0],\n        [Constants.Sets.PrisonerInDeepConfinement]: [undefined, 0],\n        [Constants.Sets.SpaceSealingStation]: [undefined, true],\n        [Constants.Sets.FleetOfTheAgeless]: [undefined, true],\n        [Constants.Sets.PanCosmicCommercialEnterprise]: [undefined, true],\n        [Constants.Sets.BelobogOfTheArchitects]: [undefined, true],\n        [Constants.Sets.CelestialDifferentiator]: [undefined, false],\n        [Constants.Sets.InertSalsotto]: [undefined, true],\n        [Constants.Sets.TaliaKingdomOfBanditry]: [undefined, true],\n        [Constants.Sets.SprightlyVonwacq]: [undefined, true],\n        [Constants.Sets.RutilantArena]: [undefined, true],\n        [Constants.Sets.BrokenKeel]: [undefined, true],\n        [Constants.Sets.FirmamentFrontlineGlamoth]: [undefined, true],\n        [Constants.Sets.PenaconyLandOfTheDreams]: [undefined, true],\n      }\n    }\n\n    if (!form.enemyLevel) {\n      newForm.enemyLevel = 95\n      newForm.enemyCount = 1\n      newForm.enemyResistance = 0.2\n      newForm.enemyHpPercent = 1.0\n      newForm.enemyElementalWeak = true\n      newForm.enemyWeaknessBroken = false\n      newForm.enemyElementalResistance = false\n    }\n\n    let defaultOptions = CharacterConditionals.get(form).defaults()\n    if (!newForm.characterConditionals) newForm.characterConditionals = {}\n    for (let option of Object.keys(defaultOptions)) {\n      if (newForm.characterConditionals[option] == undefined) {\n        newForm.characterConditionals[option] = defaultOptions[option]\n      }\n    }\n\n    let defaultLcOptions = LightConeConditionals.get(form).defaults()\n    if (!newForm.lightConeConditionals) newForm.lightConeConditionals = {}\n    for (let option of Object.keys(defaultLcOptions)) {\n      if (newForm.lightConeConditionals[option] == undefined) {\n        newForm.lightConeConditionals[option] = defaultLcOptions[option]\n      }\n    }\n\n    if (!newForm.statDisplay) {\n      newForm.statDisplay = 'base'\n    }\n\n    if (![1, 3, 5].includes(newForm.enemyCount)) {\n      newForm.enemyCount = 1\n    }\n\n    if (!newForm.weights) {\n      newForm.weights = {\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF_P]: 1,\n        [Constants.Stats.SPD_P]: 1,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.DEF]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 1,\n        [Constants.Stats.BE]: 1,\n        topPercent: 100\n      }\n    }\n\n    console.log('Form update', form, newForm, defaultOptions)\n    return newForm\n  },\n\n  validateForm: (x) => {\n    console.log('validate', x)\n    if (!x.lightCone || !x.lightConeLevel || !x.lightConeSuperimposition) {\n      Message.error('Missing light cone fields')\n      console.log('Missing light cone')\n      return false;\n    }\n\n    if (!x.characterId || !x.characterLevel || x.characterEidolon == undefined) {\n      Message.error('Missing character fields')\n      console.log('Missing character')\n      return false;\n    }\n\n    if (!x.weights || !x.weights.topPercent) {\n      Message.error('Substat weight filter should have a Top % value greater than 0%. Make sure to set the Top % value with your substat weights.', 10)\n      console.log('Top percent')\n      return false;\n    }\n\n    if (x.weights.topPercent > 0 && Object.values(Constants.Stats).map(stat => x.weights[stat]).filter(x => !!x).length == 0) {\n      Message.error('Top % of weighted relics was selected but all weights are set to 0. Make sure to set the substat weights for your character.', 10)\n      console.log('Top percent')\n      return false;\n    }\n    return true\n  },\n\n  fixForm: (x) => {\n    let MAX_INT = Constants.MAX_INT;\n\n    x.maxHp = fixValue(x.maxHp, MAX_INT)\n    x.minHp = fixValue(x.minHp, 0)\n    x.maxAtk = fixValue(x.maxAtk, MAX_INT)\n    x.minAtk = fixValue(x.minAtk, 0)\n    x.maxDef = fixValue(x.maxDef, MAX_INT)\n    x.minDef = fixValue(x.minDef, 0)\n    x.maxSpd = fixValue(x.maxSpd, MAX_INT)\n    x.minSpd = fixValue(x.minSpd, 0)\n    x.maxCr = fixValue(x.maxCr, MAX_INT, 100)\n    x.minCr = fixValue(x.minCr, 0, 100)\n    x.maxCd = fixValue(x.maxCd, MAX_INT, 100)\n    x.minCd = fixValue(x.minCd, 0, 100)\n    x.maxEhr = fixValue(x.maxEhr, MAX_INT, 100)\n    x.minEhr = fixValue(x.minEhr, 0, 100)\n    x.maxRes = fixValue(x.maxRes, MAX_INT, 100)\n    x.minRes = fixValue(x.minRes, 0, 100)\n    x.maxBe = fixValue(x.maxBe, MAX_INT, 100)\n    x.minBe = fixValue(x.minBe, 0, 100)\n\n    x.maxCv = fixValue(x.maxCv, MAX_INT)\n    x.minCv = fixValue(x.minCv, 0)\n    x.maxWeight = fixValue(x.maxWeight, MAX_INT)\n    x.minWeight = fixValue(x.minWeight, 0)\n    x.maxEhp = fixValue(x.maxEhp, MAX_INT)\n    x.minEhp = fixValue(x.minEhp, 0)\n\n    x.maxBasic = fixValue(x.maxBasic, MAX_INT)\n    x.minBasic = fixValue(x.minBasic, 0)\n    x.maxSkill = fixValue(x.maxSkill, MAX_INT)\n    x.minSkill = fixValue(x.minSkill, 0)\n    x.maxUlt = fixValue(x.maxUlt, MAX_INT)\n    x.minUlt = fixValue(x.minUlt, 0)\n    x.maxFua = fixValue(x.maxFua, MAX_INT)\n    x.minFua = fixValue(x.minFua, 0)\n    x.maxDot = fixValue(x.maxDot, MAX_INT)\n    x.minDot = fixValue(x.minDot, 0)\n\n    x.buffAtk = fixValue(x.buffAtk, 0)\n    x.buffAtkP = fixValue(x.buffAtkP, 0, 100)\n    x.buffCr = fixValue(x.buffCr, 0, 100)\n    x.buffCd = fixValue(x.buffCd, 0, 100)\n    x.buffSpd = fixValue(x.buffSpd, 0)\n    x.buffSpdP = fixValue(x.buffSpdP, 0, 100)\n    x.buffBe = fixValue(x.buffBe, 0, 100)\n    x.buffDmgBoost = fixValue(x.buffDmgBoost, 0, 100)\n    x.buffDefShred = fixValue(x.buffDefShred, 0, 100)\n    x.buffResPen = fixValue(x.buffResPen, 0, 100)\n\n    x.mainHead = x.mainHead || []\n    x.mainHands = x.mainHands || []\n    x.mainBody = x.mainBody || []\n    x.mainFeet = x.mainFeet || []\n    x.mainPlanarSphere = x.mainPlanarSphere || []\n    x.mainLinkRope = x.mainLinkRope || []\n\n    return x\n  },\n\n  updateFilters: () => {\n    if (window.optimizerForm) {\n      let fieldValues = OptimizerTabController.getForm()\n      window.onOptimizerFormValuesChange({}, fieldValues);\n    }\n  },\n\n  resetFilters: () => {\n    let fieldValues = OptimizerTabController.getForm()\n    let newForm = {\n      \"characterEidolon\": fieldValues.characterEidolon,\n      \"characterId\": fieldValues.characterId,\n      \"characterLevel\": fieldValues.characterLevel,\n      \"enhance\": 15,\n      \"grade\": 5,\n      \"includeEquippedRelics\": true,\n      \"keepCurrentRelics\": false,\n      \"lightCone\": fieldValues.lightCone,\n      \"lightConeLevel\": fieldValues.lightConeLevel,\n      \"lightConeSuperimposition\": fieldValues.lightConeSuperimposition,\n      \"mainBody\": [],\n      \"mainFeet\": [],\n      \"mainHands\": [],\n      \"mainHead\": [],\n      \"mainLinkRope\": [],\n      \"mainPlanarSphere\": [],\n      \"ornamentSets\": [],\n      \"predictMaxedMainStat\": true,\n      \"rankFilter\": true,\n      \"relicSets\": [],\n    }\n\n    window.optimizerForm.setFieldsValue(OptimizerTabController.getDisplayFormValues(newForm))\n    OptimizerTabController.updateFilters()\n  },\n\n  changeCharacter: (id) => {\n    console.log('ChangeCharacter')\n    let character = DB.getCharacterById(id)\n    if (character) {\n      let displayFormValues = OptimizerTabController.getDisplayFormValues(character.form)\n      window.optimizerForm.setFieldsValue(displayFormValues)\n      if (character.form.lightCone) {\n        let lightConeMetadata = DB.getMetadata().lightCones[character.form.lightCone]\n        window.setSelectedLightCone(lightConeMetadata)\n      }\n      window.store.getState().setStatDisplay(character.form.statDisplay || 'base')\n    } else {\n      let displayFormValues = OptimizerTabController.getDisplayFormValues({\n        characterId: id,\n        characterEidolon: 0\n      })\n      window.optimizerForm.setFieldsValue(displayFormValues)\n      window.store.getState().setStatDisplay('base')\n    }\n\n    setPinnedRow(id)\n    OptimizerTabController.updateFilters()\n  },\n\n  refreshPinned: () => {\n    let fieldValues = OptimizerTabController.getForm()\n    if (fieldValues.characterId) {\n      setPinnedRow(fieldValues.characterId)\n    }\n  },\n\n  redrawRows: () => {\n    window.optimizerGrid.current.api.redrawRows()\n  },\n\n  applyRowFilters: () => {\n    let fieldValues = OptimizerTabController.getForm()\n    filterModel = fieldValues\n    console.log('Apply filters to rows', fieldValues);\n    OptimizerTabController.resetDataSource()\n  }\n}\n\nfunction unsetMin(value, percent) {\n  if (value == undefined) return undefined\n  return value == 0 ? undefined : parseFloat((percent == true ? value * 100 : value).toFixed(1))\n}\nfunction unsetMax(value, percent) {\n  if (value == undefined) return undefined\n  return value == Constants.MAX_INT ? undefined : parseFloat((percent == true ? value * 100 : value).toFixed(1))\n}\n\nfunction fixValue(value, def, div) {\n  if (value == null) {\n    return def\n  }\n  div = div || 1\n  return value / div\n}\n\n\nfunction aggregate(subArray) {\n  let minAgg = CharacterStats.getZeroes()\n  for (let column of OptimizerTabController.getColumnsToAggregate()) {\n    minAgg[column] = Constants.MAX_INT\n  }\n\n  function setMinMax(name) {\n    minAgg[name] = Constants.MAX_INT\n    maxAgg[name] = 0\n  }\n\n  let maxAgg = CharacterStats.getZeroes()\n  minAgg['ED'] = Constants.MAX_INT\n  maxAgg['ED'] = 0\n  minAgg['CV'] = Constants.MAX_INT\n  maxAgg['CV'] = 0\n  minAgg['WEIGHT'] = Constants.MAX_INT\n  maxAgg['WEIGHT'] = 0\n  minAgg['EHP'] = Constants.MAX_INT\n  maxAgg['EHP'] = 0\n\n  setMinMax('BASIC')\n  setMinMax('SKILL')\n  setMinMax('ULT')\n  setMinMax('FUA')\n  setMinMax('DOT')\n  setMinMax('xATK')\n  setMinMax('xDEF')\n  setMinMax('xHP')\n  setMinMax('xSPD')\n  setMinMax('xCR')\n  setMinMax('xCD')\n  setMinMax('xEHR')\n  setMinMax('xRES')\n  setMinMax('xBE')\n  setMinMax('xERR')\n  setMinMax('xOHB')\n  setMinMax('xELEMENTAL_DMG')\n\n  for (let row of subArray) {\n    for (let column of OptimizerTabController.getColumnsToAggregate()) {\n      let value = row[column]\n      if (value < minAgg[column]) minAgg[column] = value\n      if (value > maxAgg[column]) maxAgg[column] = value\n    }\n  }\n  aggs = {\n    minAgg: minAgg,\n    maxAgg: maxAgg\n  }\n}\n\nfunction sort() {\n  if (sortModel.sort == 'desc') {\n    inPlaceSort(rows).desc(sortModel.colId)\n  } else {\n    inPlaceSort(rows).asc(sortModel.colId)\n  }\n}\n\nfunction filter(filterModel) {\n  let isCombat = filterModel.statDisplay == 'combat'\n  let indices = []\n\n  if (isCombat) {\n    for (let i = 0; i < rows.length; i++) {\n      let row = rows[i]\n      let valid =\n        row.xHP >= filterModel.minHp && row.xHP <= filterModel.maxHp &&\n        row.xATK >= filterModel.minAtk && row.xATK <= filterModel.maxAtk &&\n        row.xDEF >= filterModel.minDef && row.xDEF <= filterModel.maxDef &&\n        row.xSPD >= filterModel.minSpd && row.xSPD <= filterModel.maxSpd &&\n        row.xCR >= filterModel.minCr && row.xCR <= filterModel.maxCr &&\n        row.xCD >= filterModel.minCd && row.xCD <= filterModel.maxCd &&\n        row.xEHR >= filterModel.minEhr && row.xEHR <= filterModel.maxEhr &&\n        row.xRES >= filterModel.minRes && row.xRES <= filterModel.maxRes &&\n        row.xBE >= filterModel.minBe && row.xBE <= filterModel.maxBe &&\n        row.CV >= filterModel.minCv && row.CV <= filterModel.maxCv &&\n        row.EHP >= filterModel.minEhp && row.EHP <= filterModel.maxEhp &&\n        row.WEIGHT >= filterModel.minWeight && row.WEIGHT <= filterModel.maxWeight &&\n        row.BASIC >= filterModel.minBasic && row.BASIC <= filterModel.maxBasic &&\n        row.SKILL >= filterModel.minSkill && row.SKILL <= filterModel.maxSkill &&\n        row.ULT >= filterModel.minUlt && row.ULT <= filterModel.maxUlt &&\n        row.FUA >= filterModel.minFua && row.FUA <= filterModel.maxFua &&\n        row.DOT >= filterModel.minDot && row.DOT <= filterModel.maxDot\n      if (valid) {\n        indices.push(i)\n      }\n    }\n  } else {\n    for (let i = 0; i < rows.length; i++) {\n      let row = rows[i]\n      let valid =\n        row[Constants.Stats.HP] >= filterModel.minHp && row[Constants.Stats.HP] <= filterModel.maxHp &&\n        row[Constants.Stats.ATK] >= filterModel.minAtk && row[Constants.Stats.ATK] <= filterModel.maxAtk &&\n        row[Constants.Stats.DEF] >= filterModel.minDef && row[Constants.Stats.DEF] <= filterModel.maxDef &&\n        row[Constants.Stats.SPD] >= filterModel.minSpd && row[Constants.Stats.SPD] <= filterModel.maxSpd &&\n        row[Constants.Stats.CR] >= filterModel.minCr && row[Constants.Stats.CR] <= filterModel.maxCr &&\n        row[Constants.Stats.CD] >= filterModel.minCd && row[Constants.Stats.CD] <= filterModel.maxCd &&\n        row[Constants.Stats.EHR] >= filterModel.minEhr && row[Constants.Stats.EHR] <= filterModel.maxEhr &&\n        row[Constants.Stats.RES] >= filterModel.minRes && row[Constants.Stats.RES] <= filterModel.maxRes &&\n        row[Constants.Stats.BE] >= filterModel.minBe && row[Constants.Stats.BE] <= filterModel.maxBe &&\n        row.CV >= filterModel.minCv && row.CV <= filterModel.maxCv &&\n        row.EHP >= filterModel.minEhp && row.EHP <= filterModel.maxEhp &&\n        row.WEIGHT >= filterModel.minWeight && row.WEIGHT <= filterModel.maxWeight &&\n        row.BASIC >= filterModel.minBasic && row.BASIC <= filterModel.maxBasic &&\n        row.SKILL >= filterModel.minSkill && row.SKILL <= filterModel.maxSkill &&\n        row.ULT >= filterModel.minUlt && row.ULT <= filterModel.maxUlt &&\n        row.FUA >= filterModel.minFua && row.FUA <= filterModel.maxFua &&\n        row.DOT >= filterModel.minDot && row.DOT <= filterModel.maxDot\n      if (valid) {\n        indices.push(i)\n      }\n    }\n  }\n\n  filteredIndices = indices\n}\nfunction setPinnedRow(characterId) {\n  let character = DB.getCharacterById(characterId)\n  let stats = StatCalculator.calculate(character)\n\n  window.optimizerGrid.current.api.updateGridOptions({ pinnedTopRowData: [stats] })\n}","import { Constants, Stats } from \"./constants.ts\";\n\nconst SIZE = 35\n\n// When adding new rows, use:\n// let i = 0\n// offset + i++\n\nexport const BufferPacker = {\n  extractCharacter: (arr, offset) => { // Float32Array\n    offset = offset * SIZE\n    return {\n      id: arr[offset], // 0\n      [Constants.Stats.HP]: arr[offset + 1],\n      [Constants.Stats.ATK]: arr[offset + 2],\n      [Constants.Stats.DEF]: arr[offset + 3],\n      [Constants.Stats.SPD]: arr[offset + 4],\n      [Constants.Stats.CD]: arr[offset + 5],\n      [Constants.Stats.CR]: arr[offset + 6],\n      [Constants.Stats.EHR]: arr[offset + 7],\n      [Constants.Stats.RES]: arr[offset + 8],\n      [Constants.Stats.BE]: arr[offset + 9],\n      [Constants.Stats.ERR]: arr[offset + 10], // 10\n      [Constants.Stats.OHB]: arr[offset + 11],\n      ED: arr[offset + 12],\n      CV: arr[offset + 13],\n      WEIGHT: arr[offset + 14],\n      EHP: arr[offset + 15],\n      BASIC: arr[offset + 16],\n      SKILL: arr[offset + 17],\n      ULT: arr[offset + 18],\n      FUA: arr[offset + 19],\n      DOT: arr[offset + 20], // 20\n      xHP: arr[offset + 21],\n      xATK: arr[offset + 22],\n      xDEF: arr[offset + 23],\n      xSPD: arr[offset + 24],\n      xCR: arr[offset + 25],\n      xCD: arr[offset + 26],\n      xEHR: arr[offset + 27],\n      xRES: arr[offset + 28],\n      xBE: arr[offset + 29],\n      xERR: arr[offset + 30], // 30\n      xOHB: arr[offset + 31],\n      xELEMENTAL_DMG: arr[offset + 32],\n      relicSetIndex: arr[offset + 33],\n      ornamentSetIndex: arr[offset + 34],\n    }\n  },\n\n  extractArrayToResults: (arr, length, results) => {\n    for (let i = 0; i < length; i++) {\n      if (arr[i * SIZE + 1]) {\n        results.push(BufferPacker.extractCharacter(arr, i))\n      }\n    }\n  },\n\n  packCharacter: (arr, offset, character) => {\n    offset = offset * SIZE\n\n    // When adding new rows, use:\n    arr[offset] = character.id // 0\n    arr[offset + 1] = character[Stats.HP]\n    arr[offset + 2] = character[Stats.ATK]\n    arr[offset + 3] = character[Stats.DEF]\n    arr[offset + 4] = character[Stats.SPD]\n    arr[offset + 5] = character[Stats.CD]\n    arr[offset + 6] = character[Stats.CR]\n    arr[offset + 7] = character[Stats.EHR]\n    arr[offset + 8] = character[Stats.RES]\n    arr[offset + 9] = character[Stats.BE]\n    arr[offset + 10] = character[Stats.ERR] // 10\n    arr[offset + 11] = character[Stats.OHB]\n    arr[offset + 12] = character.ELEMENTAL_DMG\n    arr[offset + 13] = character.CV\n    arr[offset + 14] = character.WEIGHT\n    arr[offset + 15] = character.EHP\n    arr[offset + 16] = character.x.BASIC_DMG\n    arr[offset + 17] = character.x.SKILL_DMG\n    arr[offset + 18] = character.x.ULT_DMG\n    arr[offset + 19] = character.x.FUA_DMG\n    arr[offset + 20] = character.x.DOT_DMG // 20\n    arr[offset + 21] = character.x[Stats.HP]\n    arr[offset + 22] = character.x[Stats.ATK]\n    arr[offset + 23] = character.x[Stats.DEF]\n    arr[offset + 24] = character.x[Stats.SPD]\n    arr[offset + 25] = character.x[Stats.CR]\n    arr[offset + 26] = character.x[Stats.CD]\n    arr[offset + 27] = character.x[Stats.EHR]\n    arr[offset + 28] = character.x[Stats.RES]\n    arr[offset + 29] = character.x[Stats.BE]\n    arr[offset + 30] = character.x[Stats.ERR] // 30\n    arr[offset + 31] = character.x[Stats.OHB]\n    arr[offset + 32] = character.x.ELEMENTAL_DMG\n    arr[offset + 33] = character.relicSetIndex\n    arr[offset + 34] = character.ornamentSetIndex\n  },\n\n  cleanFloatBuffer: (buffer) => {\n    new Float64Array(buffer).fill(0);\n  },\n\n  createFloatBuffer: (length) => {\n    return new Float64Array(length * SIZE).buffer\n  }\n}","import { BufferPacker } from \"./bufferPacker\";\n\nlet poolSize = (navigator.hardwareConcurrency || 4) - 1\nlet initialized = 0\nconsole.log('Using pool size ' + poolSize)\nlet workers = []\nlet buffers = []\nlet taskQueue = []\nlet taskStatus = {}\n\nexport const WorkerPool = {\n  initialize: () => {\n    if (initialized < poolSize) {\n      const worker = new Worker(new URL('./worker/optimizerWorker.js', import.meta.url));\n      workers.push(worker)\n      initialized++\n    }\n  },\n\n  nextTask: () => {\n    if (taskQueue.length == 0) return;\n    let { task, callback } = taskQueue.shift()\n    WorkerPool.execute(task, callback)\n  },\n\n  execute: (task, callback, id) => {\n    if (taskStatus[id] == undefined) taskStatus[id] = true\n    if (taskStatus[id] == false) return\n\n    WorkerPool.initialize()\n\n    if (workers.length > 0) {\n      const worker = workers.pop();\n\n      let buffer\n      if (buffers.length > 0) {\n        buffer = buffers.pop()\n        BufferPacker.cleanFloatBuffer(buffer)\n      } else {\n        buffer = BufferPacker.createFloatBuffer(100000)\n      }\n\n      task.buffer = buffer\n\n      worker.onmessage = (message) => {\n        // console.log('worker message', message)\n        if (callback) callback(message.data)\n        workers.push(worker)\n        buffers.push(message.data.buffer)\n        WorkerPool.nextTask()\n      };\n\n      worker.postMessage(task, [task.buffer]);\n    } else {\n      taskQueue.push({ task, callback });\n    }\n  },\n\n  cancel: (id) => {\n    taskStatus[id] = false\n    taskQueue = []\n  },\n\n  state: () => {\n    console.log({\n      poolSize,\n      workers,\n      taskQueue,\n      buffers\n    })\n  }\n}\n\nWorkerPool.initialize()","import { Constants } from \"./constants.ts\";\nimport DB from \"./db\";\nimport { Utils } from \"./utils\";\n\nexport const RelicFilters = {\n  calculateWeightScore: (request, relics) => {\n    let weights = request.weights || {}\n    let statScalings = {\n      [Constants.Stats.HP_P]: 64.8 / 43.2,\n      [Constants.Stats.ATK_P]: 64.8 / 43.2,\n      [Constants.Stats.DEF_P]: 64.8 / 54,\n      [Constants.Stats.HP]: 1 / (DB.getMetadata().characters[request.characterId].promotions[80][Constants.Stats.HP] * 2 * 0.01) * (64.8 / 43.2),\n      [Constants.Stats.ATK]: 1 / (DB.getMetadata().characters[request.characterId].promotions[80][Constants.Stats.ATK] * 2 * 0.01) * (64.8 / 43.2),\n      [Constants.Stats.DEF]: 1 / (DB.getMetadata().characters[request.characterId].promotions[80][Constants.Stats.DEF] * 2 * 0.01) * (64.8 / 54),\n      [Constants.Stats.CR]: 64.8 / 32.4,\n      [Constants.Stats.CD]: 64.8 / 64.8,\n      [Constants.Stats.OHB]: 64.8 / 34.5,\n      [Constants.Stats.EHR]: 64.8 / 43.2,\n      [Constants.Stats.RES]: 64.8 / 43.2,\n      [Constants.Stats.SPD]: 64.8 / 25,\n      [Constants.Stats.BE]: 64.8 / 64.8,\n    }\n\n    weights[Constants.Stats.ATK] = weights[Constants.Stats.ATK_P]\n    weights[Constants.Stats.DEF] = weights[Constants.Stats.DEF_P]\n    weights[Constants.Stats.HP] = weights[Constants.Stats.HP_P]\n\n    for (let weight of Object.keys(weights)) {\n      if (weights[weight] == undefined) {\n        weights[weight] = 0\n      }\n    }\n\n    for (let relic of relics) {\n      let sum = 0\n      for (let substat of relic.substats) {\n        let weight = weights[substat.stat] || 0\n        let scale = statScalings[substat.stat] || 0\n        let value = substat.value || 0\n        sum += value * weight * scale\n      }\n      relic.weightScore = sum\n    }\n\n    return relics\n  },\n\n  applyTopFilter: (request, relics, originalRelics) => {\n    let weights = request.weights || {}\n\n    for (let part of Object.values(Constants.Parts)) {\n      let partition = relics[part]\n      let index = Math.max(1, Math.floor(weights.topPercent / 100 * originalRelics[part].length))\n      relics[part] = partition.sort((a, b) => b.weightScore - a.weightScore).slice(0, index)\n    }\n\n    return relics\n  },\n\n  applyRankFilter: (request, relics) => {\n    if (!request.rankFilter) return relics;\n\n    let characters = DB.getCharacters()\n    let characterId = request.characterId;\n    let higherRankedRelics = {}\n    for (let i = 0; i < characters.length; i++) {\n      let rankedCharacter = characters[i]\n      if (rankedCharacter.id == characterId) {\n        break\n      }\n\n      Object.values(rankedCharacter.equipped)\n        .filter(x => x != null)\n        .map(x => higherRankedRelics[x] = true)\n    }\n\n    return relics.filter(x => !higherRankedRelics[x.id])\n  },\n\n  applyMainFilter: (request, relics) => {\n    let out = []\n    out.push(...relics.filter(x => x.part == Constants.Parts.Head))\n    out.push(...relics.filter(x => x.part == Constants.Parts.Hands))\n    out.push(...relics.filter(x => x.part == Constants.Parts.Body).filter(x => request.mainBody.length == 0 || request.mainBody.includes(x.main.stat)))\n    out.push(...relics.filter(x => x.part == Constants.Parts.Feet).filter(x => request.mainFeet.length == 0 || request.mainFeet.includes(x.main.stat)))\n    out.push(...relics.filter(x => x.part == Constants.Parts.PlanarSphere).filter(x => request.mainPlanarSphere.length == 0 || request.mainPlanarSphere.includes(x.main.stat)))\n    out.push(...relics.filter(x => x.part == Constants.Parts.LinkRope).filter(x => request.mainLinkRope.length == 0 || request.mainLinkRope.includes(x.main.stat)))\n\n    return out;\n  },\n\n  applyEnhanceFilter: (request, relics) => {\n    return relics.filter(x => x.enhance >= request.enhance);\n  },\n\n  applyEquippedFilter: (request, relics) => {\n    if (request.includeEquippedRelics)\n      return relics;\n\n    const characterId = request.characterId || \"99999999\";\n    // TODO: refactor after https://github.com/fribbels/hsr-optimizer/issues/56 is completed\n    let blacklist = [];\n    window.store.getState().characters.forEach(char => {\n      if (char.id == characterId) return;\n      blacklist = blacklist.concat(Object.values(char.equipped));\n    });\n    const ret = relics.filter(x => !blacklist.includes(x.id));\n    return ret;\n  },\n\n  applyGradeFilter: (request, relics) => {\n    return relics.filter(x => x.grade ? x.grade >= request.grade : true);\n  },\n\n  applySetFilter: (request, relics) => {\n    function relicFilter(request, relics) {\n      if (!request.relicSets || request.relicSets.length == 0) {\n        return relics\n      }\n      let allowedSets = Utils.arrayOfZeroes(Object.values(Constants.SetsRelics).length)\n\n      for (let relicSet of request.relicSets) {\n        if (relicSet[0] == '4 Piece') {\n          if (relicSet.length == 1) {\n            allowedSets = Utils.arrayOfValue(Object.values(Constants.SetsRelics).length, 1)\n          }\n          if (relicSet.length == 2) {\n            let index = Constants.RelicSetToIndex[relicSet[1]]\n            allowedSets[index] = 1\n          }\n        }\n        if (relicSet[0] == '2 Piece') {\n          if (relicSet.length == 1) {\n            allowedSets = Utils.arrayOfValue(Object.values(Constants.SetsRelics).length, 1)\n          }\n          if (relicSet.length == 2) {\n            allowedSets = Utils.arrayOfValue(Object.values(Constants.SetsRelics).length, 1)\n          }\n          if (relicSet.length == 3) {\n            if (relicSet[2] == 'Any') {\n              allowedSets = Utils.arrayOfValue(Object.values(Constants.SetsRelics).length, 1)\n            }\n            let index1 = Constants.RelicSetToIndex[relicSet[1]]\n            allowedSets[index1] = 1\n\n            let index2 = Constants.RelicSetToIndex[relicSet[2]]\n            allowedSets[index2] = 1\n          }\n        }\n      }\n\n      return relics.filter(relic => {\n        if (\n          relic.part == Constants.Parts.Head ||\n          relic.part == Constants.Parts.Hands ||\n          relic.part == Constants.Parts.Body ||\n          relic.part == Constants.Parts.Feet) {\n          return allowedSets[Constants.RelicSetToIndex[relic.set]] == 1;\n        } else {\n          return true\n        }\n      })\n    }\n\n    function ornamentFilter(request, relics) {\n      if (!request.ornamentSets || request.ornamentSets.length == 0) {\n        return relics\n      }\n      let allowedSets = Utils.arrayOfZeroes(Object.values(Constants.SetsOrnaments).length)\n\n      for (let ornamentSet of request.ornamentSets) {\n        let index = Constants.OrnamentSetToIndex[ornamentSet]\n        allowedSets[index] = 1\n      }\n\n      return relics.filter(relic => {\n        if (\n          relic.part == Constants.Parts.PlanarSphere ||\n          relic.part == Constants.Parts.LinkRope) {\n          return allowedSets[Constants.OrnamentSetToIndex[relic.set]] == 1;\n        } else {\n          return true\n        }\n      })\n    }\n\n    return ornamentFilter(request, relicFilter(request, relics))\n  },\n\n  applyCurrentFilter: (request, relics) => {\n    if (!request.keepCurrentRelics) return relics;\n\n    let character = DB.getCharacterById(request.characterId)\n    if (!character) {\n      return relics\n    }\n\n    function matchingRelic(part) {\n      if (!character.equipped[part]) {\n        return relics[part]\n      }\n      let match = relics[part].find(x => x.id == character.equipped[part])\n      return match ? [match] : []\n    }\n\n    return {\n      Head: matchingRelic(Constants.Parts.Head),\n      Hands: matchingRelic(Constants.Parts.Hands),\n      Body: matchingRelic(Constants.Parts.Body),\n      Feet: matchingRelic(Constants.Parts.Feet),\n      PlanarSphere: matchingRelic(Constants.Parts.PlanarSphere),\n      LinkRope: matchingRelic(Constants.Parts.LinkRope)\n    }\n  },\n\n  splitRelicsByPart: (relics) => {\n    return {\n      Head: relics.filter(x => x.part == Constants.Parts.Head),\n      Hands: relics.filter(x => x.part == Constants.Parts.Hands),\n      Body: relics.filter(x => x.part == Constants.Parts.Body),\n      Feet: relics.filter(x => x.part == Constants.Parts.Feet),\n      PlanarSphere: relics.filter(x => x.part == Constants.Parts.PlanarSphere),\n      LinkRope: relics.filter(x => x.part == Constants.Parts.LinkRope)\n    }\n  }\n}","import { GPUOptimizer } from \"./gpuOptimizer\";\nimport { Constants } from \"./constants.ts\";\nimport { OptimizerTabController } from './optimizerTabController';\nimport { Utils } from './utils';\nimport DB from \"./db\";\nimport { WorkerPool } from \"./workerPool\";\nimport { BufferPacker } from \"./bufferPacker\";\nimport { RelicFilters } from \"./relicFilters\";\nimport { CharacterStats } from \"./characterStats\";\nimport { Message } from \"./message\";\nimport { StatCalculator } from \"./statCalculator\";\n\nlet WIDTH = 100000;\nlet HEIGHT = 1;\nlet MAX_RESULTS = 2_000_000;\n\n// Flatten a relic's augmented stats + part to a single array & percents -> decimals + zeroing undefined\nfunction relicToArray(relic) {\n  let partToNumber = {\n    [Constants.Parts.Head]: 0,\n    [Constants.Parts.Hands]: 1,\n    [Constants.Parts.Body]: 2,\n    [Constants.Parts.Feet]: 3,\n    [Constants.Parts.PlanarSphere]: 4,\n    [Constants.Parts.LinkRope]: 5\n  }\n\n  let setToNumber = {}\n  if (relic.part == Constants.Parts.PlanarSphere || relic.part == Constants.Parts.LinkRope) {\n    for (let i = 0; i < Object.values(Constants.SetsOrnaments).length; i++) {\n      setToNumber[Object.values(Constants.SetsOrnaments)[i]] = i\n    }\n  } else {\n    for (let i = 0; i < Object.values(Constants.SetsRelics).length; i++) {\n      setToNumber[Object.values(Constants.SetsRelics)[i]] = i\n    }\n  }\n\n  let result = []\n  for (let i = 0; i < Object.values(Constants.Stats).length; i++) {\n    let stat = Object.values(Constants.Stats)[i];\n    result[i] = relic.augmentedStats[stat] || 0\n  }\n\n  result.push(partToNumber[relic.part]);\n  result.push(setToNumber[relic.set]);\n\n  return result;\n}\n\n// Flatten a character's stats to arrays & percents -> decimals + zeroing undefined\nfunction characterToArrays(character) {\n  let result = {\n    base: [],\n    traces: [],\n    lightCone: []\n  }\n\n  for (let i = 0; i < Object.values(Constants.Stats).length; i++) {\n    let stat = Object.values(Constants.Stats)[i];\n    result.base[i] = character.base[stat] || 0\n    result.traces[i] = character.traces[stat] || 0\n    result.lightCone[i] = character.lightCone[stat] || 0\n\n  }\n\n  console.log('Convert', character, result);\n\n  return result;\n}\n\nlet CANCEL = false;\n\nexport const Optimizer = {\n  cancel: (id) => {\n    CANCEL = true\n    WorkerPool.cancel(id)\n  },\n\n  getFilteredRelics: (request) => {\n    let relics = Utils.clone(DB.getRelics());\n    RelicFilters.calculateWeightScore(request, relics)\n\n    relics = RelicFilters.applyEquippedFilter(request, relics); // will reduce iterations if \"off\" is selected\n    relics = RelicFilters.applyEnhanceFilter(request, relics);\n    relics = RelicFilters.applyRankFilter(request, relics);\n\n    // Pre-split filters\n    let preFilteredRelicsByPart = RelicFilters.splitRelicsByPart(relics);\n\n    relics = RelicFilters.applyMainFilter(request, relics);\n    relics = addMainStatToAugmentedStats(relics);\n    relics = applyMaxedMainStatsFilter(request, relics);\n    relics = RelicFilters.applySetFilter(request, relics)\n\n    // Post-split filters\n    relics = splitRelicsByPart(relics);\n\n    relics = RelicFilters.applyCurrentFilter(request, relics);\n    relics = RelicFilters.applyTopFilter(request, relics, preFilteredRelicsByPart);\n\n    return [relics, preFilteredRelicsByPart];\n  },\n\n  optimize: function (request) {\n    CANCEL = false\n\n    window.store.getState().setPermutationsSearched(0)\n    window.store.getState().setPermutationsResults(0)\n\n    let lightConeMetadata = DB.getMetadata().lightCones[request.lightCone];\n    let lightConeStats = lightConeMetadata.promotions[request.lightConeLevel]\n    let lightConeSuperimposition = lightConeMetadata.superimpositions[request.lightConeSuperimposition]\n\n    let characterMetadata = DB.getMetadata().characters[request.characterId]\n    let characterStats = characterMetadata.promotions[request.characterLevel]\n\n    console.log({ lightConeStats })\n    console.log({ characterStats })\n\n    let element = characterMetadata.element\n\n    let baseStats = {\n      base: {\n        ...CharacterStats.getZeroes(),\n        ...characterStats\n      },\n      traces: {\n        ...CharacterStats.getZeroes(),\n        ...characterMetadata.traces\n      },\n      lightCone: {\n        ...CharacterStats.getZeroes(),\n        ...lightConeStats,\n        ...lightConeSuperimposition\n      }\n    }\n\n    const [relics] = this.getFilteredRelics(request);\n\n    let relicsArrays = relicsByPartToArray(relics);\n\n    let elementalMultipliers = [\n      element == 'Physical' ? 1 : 0,\n      element == 'Fire' ? 1 : 0,\n      element == 'Ice' ? 1 : 0,\n      element == 'Thunder' ? 1 : 0,\n      element == 'Wind' ? 1 : 0,\n      element == 'Quantum' ? 1 : 0,\n      element == 'Imaginary' ? 1 : 0,\n    ]\n\n    let character = characterToArrays(baseStats);\n    console.log('Optimize request', request)\n    console.log('Current state', Constants)\n    console.log('Optimize relics', relics)\n    console.log('Optimize relics arrays', relicsArrays)\n    console.log('Optimize character', character)\n    console.log('Optimize elemental multipliers', elementalMultipliers)\n\n    let { relicSetAllowList, relicSetSolutions } = generateRelicSetAllowList(request)\n    let ornamentSetSolutions = generateOrnamentSetAllowList(request)\n    console.log('relicSetAllowList, relicSetSolutions', relicSetAllowList, relicSetSolutions)\n\n    let hSize = relicsArrays.Head.length\n    let gSize = relicsArrays.Hands.length\n    let bSize = relicsArrays.Body.length\n    let fSize = relicsArrays.Feet.length\n    let pSize = relicsArrays.PlanarSphere.length\n    let lSize = relicsArrays.LinkRope.length\n\n    let permutations = hSize * gSize * bSize * fSize * pSize * lSize;\n\n    console.log(`Building kernel, permutations: ${permutations}, blocksize: ${WIDTH * HEIGHT}`)\n    let consts = GPUOptimizer.createConstants(\n      HEIGHT,\n      WIDTH,\n      request,\n      relicsArrays,\n      character,\n      relicSetAllowList,\n      relicSetSolutions,\n      ornamentSetSolutions,\n      elementalMultipliers\n    );\n\n    OptimizerTabController.setMetadata(consts, relics)\n\n    if (permutations == 0) {\n      OptimizerTabController.setRows([])\n      OptimizerTabController.resetDataSource()\n      return\n    }\n\n    if (CANCEL) return;\n\n    window.optimizerGrid.current.api.showLoadingOverlay()\n\n    let results = []\n    let increment = (WIDTH * HEIGHT)\n    let searched = 0\n    let runs = Math.ceil(permutations / increment)\n    let inProgress = runs\n\n    let resultsShown = false\n\n    // Create a special optimization request for the top row, ignoring filters and with a custom callback\n    function handleTopRow() {\n      let relics = Utils.clone(DB.getRelics());\n      RelicFilters.calculateWeightScore(request, relics)\n      relics = relics.filter(x => x.equippedBy == request.characterId)\n      relics = addMainStatToAugmentedStats(relics);\n      relics = applyMaxedMainStatsFilter(request, relics);\n      if (relics.length < 6) return\n\n      relics = splitRelicsByPart(relics);\n\n      let callback = (result) => {\n        let resultArr = new Float64Array(result.buffer)\n        console.log(`Top row complete`)\n\n        let rowData = []\n        BufferPacker.extractArrayToResults(resultArr, 1, rowData);\n        if (rowData.length > 0) {\n          OptimizerTabController.setTopRow(rowData[0])\n        }\n      }\n\n      let input = {\n        topRow: true, // Skip all filters for top row\n        setAllowList: relicSetAllowList,\n        relics: relics,\n        character: baseStats,\n        Constants: Constants,\n        consts: consts,\n        WIDTH: WIDTH,\n        HEIGHT: HEIGHT,\n        skip: 0,\n        permutations: 1,\n        relicSetToIndex: Constants.RelicSetToIndex,\n        ornamentSetToIndex: Constants.OrnamentSetToIndex,\n        elementalMultipliers: elementalMultipliers,\n        request: request,\n      }\n\n      WorkerPool.execute(input, callback, request.optimizationId)\n    }\n    handleTopRow()\n\n    for (let run = 0; run < runs; run++) {\n      let input = {\n        setAllowList: relicSetAllowList,\n        relics: relics,\n        character: baseStats,\n        Constants: Constants,\n        consts: consts,\n        WIDTH: WIDTH,\n        HEIGHT: HEIGHT,\n        skip: run * increment,\n        permutations: permutations,\n        relicSetToIndex: Constants.RelicSetToIndex,\n        ornamentSetToIndex: Constants.OrnamentSetToIndex,\n        elementalMultipliers: elementalMultipliers,\n        request: request,\n      }\n\n      let callback = (result) => {\n        searched += increment\n        inProgress -= 1\n\n        if (CANCEL && resultsShown) {\n          return\n        }\n\n        let resultArr = new Float64Array(result.buffer)\n        // console.log(`Optimizer results`, result, resultArr)\n\n        BufferPacker.extractArrayToResults(resultArr, WIDTH * HEIGHT, results);\n\n        console.log(`Thread complete - status: inProgress ${inProgress}, results: ${results.length}`)\n\n        window.store.getState().setPermutationsResults(results.length)\n        window.store.getState().setPermutationsSearched(Math.min(permutations, searched))\n\n        if (inProgress == 0 || CANCEL) {\n          OptimizerTabController.setRows(results)\n\n          window.optimizerGrid.current.api.updateGridOptions({ datasource: OptimizerTabController.getDataSource() })\n          console.log('Done', results.length);\n          resultsShown = true\n          return\n        }\n\n        if ((results.length >= MAX_RESULTS) && !CANCEL) {\n          CANCEL = true;\n          Optimizer.cancel(request.optimizationId)\n          Message.error('Too many results, stopping at 2,000,000 - please narrow your filters to limit results', 10)\n        }\n      }\n\n      // WorkerPool.execute(input, callback)\n      setTimeout(() => WorkerPool.execute(input, callback, request.optimizationId), 10 * run)\n    }\n  }\n}\n\nfunction applyMaxedMainStatsFilter(request, relics) {\n  if (request.predictMaxedMainStat) {\n    relics.map(x => x.augmentedStats[x.main.stat] = Utils.isFlat(x.main.stat) ? StatCalculator.getMaxedMainStat(x) : StatCalculator.getMaxedMainStat(x) / 100)\n  }\n  return relics\n}\n\nfunction relicsByPartToArray(relics) {\n  return {\n    Head: relics.Head.map(x => relicToArray(x)),\n    Hands: relics.Hands.map(x => relicToArray(x)),\n    Body: relics.Body.map(x => relicToArray(x)),\n    Feet: relics.Feet.map(x => relicToArray(x)),\n    PlanarSphere: relics.PlanarSphere.map(x => relicToArray(x)),\n    LinkRope: relics.LinkRope.map(x => relicToArray(x))\n  }\n}\n\nfunction addMainStatToAugmentedStats(relics) {\n  relics = relics.map(x => structuredClone(x))\n\n  for (let relic of relics) {\n    relic.augmentedStats[relic.augmentedStats.mainStat] = relic.augmentedStats.mainValue\n  }\n  return relics;\n}\n\nfunction splitRelicsByPart(relics) {\n  return {\n    Head: relics.filter(x => x.part == Constants.Parts.Head),\n    Hands: relics.filter(x => x.part == Constants.Parts.Hands),\n    Body: relics.filter(x => x.part == Constants.Parts.Body),\n    Feet: relics.filter(x => x.part == Constants.Parts.Feet),\n    PlanarSphere: relics.filter(x => x.part == Constants.Parts.PlanarSphere),\n    LinkRope: relics.filter(x => x.part == Constants.Parts.LinkRope)\n  }\n}\n\nfunction generateEmptyArr(n) {\n  return Array(n).fill(0)\n}\n\n// [0, 0, 0, 2, 0, 2] => [3, 3, 5, 5]\nfunction relicSetAllowListToIndices(arr) {\n  let out = []\n  for (let i = 0; i < arr.length; i++) {\n    while (arr[i]) {\n      arr[i]--\n      out.push(i);\n    }\n  }\n\n  return out;\n}\n\n// [5, 5] => [[5,5,0,0], [5,5,0,1], [5,5,1,1], [5,5,1,2], ...]\nfunction fillRelicSetArrPossibilities(arr, len) {\n  let out = []\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < len; j++) {\n      let newArr = Utils.arrayOfZeroes(4)\n      newArr[0] = arr[0]\n      newArr[1] = arr[1]\n      newArr[2] = i\n      newArr[3] = j\n\n      out.push(newArr)\n    }\n  }\n\n  return out;\n}\n\nconst permutator = (inputArr) => {\n  let result = [];\n\n  const permute = (arr, m = []) => {\n    if (arr.length === 0) {\n      result.push(m)\n    } else {\n      for (let i = 0; i < arr.length; i++) {\n        let curr = arr.slice();\n        let next = curr.splice(i, 1);\n        permute(curr.slice(), m.concat(next))\n      }\n    }\n  }\n\n  permute(inputArr)\n  return result;\n}\n\n// [[5,5,0,0], [5,5,0,1], [5,5,1,1], [5,5,1,2], ...] => [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0..]\nfunction convertRelicSetIndicesTo1D(setIndices) {\n  let len = Constants.SetsRelicsNames.length\n  if (setIndices.length == 0) {\n    return Utils.arrayOfValue(Math.pow(len, 4), 1);\n  }\n\n  let arr = Utils.arrayOfZeroes(Math.pow(len, 4))\n\n  for (let i = 0; i < setIndices.length; i++) {\n    let y = setIndices[i] // [5,5,2,3]\n    let permutations = permutator(y)\n    for (let x of permutations) {\n      let index1D = x[0] + x[1] * Math.pow(len, 1) + x[2] * Math.pow(len, 2) + x[3] * Math.pow(len, 3)\n      arr[index1D] = 1\n    }\n  }\n\n  return arr\n}\nfunction generateOrnamentSetAllowList(request) {\n  let setRequest = request.ornamentSets || [];\n\n  let len = Constants.SetsOrnamentsNames.length;\n\n  if (setRequest.length == 0) {\n    return Utils.arrayOfValue(len * len, 1);\n  }\n\n  let arr = Utils.arrayOfZeroes(len * len)\n\n  for (let set of setRequest) {\n    let setIndex = Constants.OrnamentSetToIndex[set]\n    let index1D = setIndex + setIndex * len\n    arr[index1D] = 1\n  }\n\n  // console.log('ornamentSetSolutions', arr);\n\n  return arr\n}\n\nfunction generateRelicSetAllowList(request) {\n  // Init\n  let setRequest = request.relicSets || [];\n  let len = Constants.SetsRelicsNames.length;\n  let relicSetAllowList = []\n  let setIndices = []\n\n  // console.log('setRequest', setRequest)\n  for (let setArr of setRequest) {\n    if (setArr[0] == '4 Piece') {\n      // ok\n      if (setArr.length == 1) {\n        // All 4 pieces\n        for (let i = 0; i < len; i++) {\n          let arr = generateEmptyArr(len)\n          arr[i] = 4\n          relicSetAllowList.push(arr.join())\n          let indices = relicSetAllowListToIndices(arr)\n          setIndices.push(indices);\n        }\n      }\n\n      // ok\n      if (setArr.length == 2) {\n        // Specific 4 piece\n        let index = Constants.RelicSetToIndex[setArr[1]];\n        let arr = generateEmptyArr(len)\n        arr[index] = 4\n        relicSetAllowList.push(arr.join())\n        let indices = relicSetAllowListToIndices(arr)\n        setIndices.push(indices);\n      }\n    }\n\n    if (setArr[0] == '2 Piece') {\n      // ok\n      if (setArr.length == 1) {\n        // Any 2 piece + Any\n        for (let i = 0; i < len; i++) {\n          let arr = generateEmptyArr(len)\n          arr[i] = 2\n          relicSetAllowList.push(arr.join())\n          let indices = relicSetAllowListToIndices(arr)\n          // setIndices.push(indices);\n          let filledIndices = fillRelicSetArrPossibilities(indices, len)\n          setIndices.push(...filledIndices);\n        }\n\n        // Also means 2 + 2 pieces are allowed\n        for (let i = 0; i < len; i++) {\n          for (let j = 0; j < len; j++) {\n            let arr = generateEmptyArr(len)\n            arr[i] += 2\n            arr[j] += 2\n            relicSetAllowList.push(arr.join())\n            let indices = relicSetAllowListToIndices(arr)\n            setIndices.push(indices);\n          }\n        }\n      }\n\n      // ok\n      if (setArr.length == 2) {\n        // Single 2 piece + Any\n\n        // 2 + 2s\n        let index = Constants.RelicSetToIndex[setArr[1]];\n        for (let i = 0; i < len; i++) {\n          let arr = generateEmptyArr(len)\n          arr[index] = 2\n          arr[i] += 2\n          relicSetAllowList.push(arr.join())\n          let indices = relicSetAllowListToIndices(arr)\n          setIndices.push(indices);\n        }\n\n        // 2 + 0\n        let arr = generateEmptyArr(len)\n        arr[index] = 2\n        relicSetAllowList.push(arr.join())\n        let indices = relicSetAllowListToIndices(arr)\n        // setIndices.push(indices);\n        let filledIndices = fillRelicSetArrPossibilities(indices, len)\n        setIndices.push(...filledIndices);\n      }\n\n      // ok\n      if (setArr.length == 3) {\n        // Specific 2 piece + (2 piece OR any)\n\n        if (setArr[2] == 'Any') {\n          let index = Constants.RelicSetToIndex[setArr[1]];\n          for (let i = 0; i < len; i++) {\n            let arr = generateEmptyArr(len)\n            arr[index] = 2\n            arr[i] += 2\n            relicSetAllowList.push(arr.join())\n            let indices = relicSetAllowListToIndices(arr)\n            setIndices.push(indices);\n          }\n\n          // 2 + 0\n          let arr = generateEmptyArr(len)\n          arr[index] = 2\n          relicSetAllowList.push(arr.join())\n          let indices = relicSetAllowListToIndices(arr)\n          let filledIndices = fillRelicSetArrPossibilities(indices, len)\n          setIndices.push(...filledIndices);\n        } else {\n          let arr = generateEmptyArr(len)\n          let index1 = Constants.RelicSetToIndex[setArr[1]];\n          let index2 = Constants.RelicSetToIndex[setArr[2]];\n          arr[index1] += 2\n          arr[index2] += 2\n          relicSetAllowList.push(arr.join())\n          let indices = relicSetAllowListToIndices(arr)\n          setIndices.push(indices);\n        }\n      }\n    }\n  }\n  let relicSetSolutions = convertRelicSetIndicesTo1D(setIndices);\n\n  relicSetAllowList = [...new Set(relicSetAllowList)]\n  return {\n    relicSetAllowList,\n    relicSetSolutions\n  }\n}","import { Flex, Typography } from \"antd\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nexport default function FormRow(props) {\n  return (\n    <Flex gap={0} vertical style={{\n      paddingTop: 5\n    }}>\n      <Flex // Top bar\n        style={{\n          height: 20,\n          paddingLeft: 15,\n        }}\n        // justify='space-around'\n        align='center'\n      >\n        <Text\n          style={{\n            fontSize: 20,\n          }}\n        >\n          {props.title}\n        </Text>\n      </Flex>\n\n      <Flex\n        style={{\n          paddingTop: 10,\n          paddingLeft: 10,\n          paddingRight: 10,\n          paddingBottom: 10,\n        }}\n        gap={10}\n      >\n        {props.children}\n      </Flex>\n    </Flex>\n  )\n}\nFormRow.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n}\n","import { Flex } from \"antd\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nlet shadow = 'rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.15) 0px 0px 0px 1px inset'\n\nexport default function FilterContainer(props) {\n  return (\n    <Flex\n      vertical\n      style={{\n        // outline: '2px solid #243356',\n        overflow: 'hidden',\n        borderRadius: '10px',\n        boxShadow: shadow,\n        width: 'fit-content',\n        paddingTop: 10\n      }}\n    >\n      {props.children}\n    </Flex>\n  )\n}\nFilterContainer.propTypes = {\n  children: PropTypes.any,\n}\n","import { Flex } from \"antd\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nlet shadow = 'rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.15) 0px 0px 0px 1px inset'\n\nlet panelWidth = 203;\nlet defaultGap = 5;\nlet defaultPadding = 15\n\nlet smallWidth = panelWidth\nlet mediumWidth = panelWidth * 2 + defaultPadding * 2 + 10\n\nexport default function FormCard(props) {\n  return (\n    <Flex\n      style={{\n        borderRadius: 5,\n        backgroundColor: '#243356',\n        height: props.height || 350,\n        padding: defaultPadding,\n        boxShadow: shadow,\n        overflow: props.style?.overflow\n      }}\n    >\n      <Flex\n        vertical\n        style={{ width: props.medium ? mediumWidth : smallWidth }}\n        gap={defaultGap}\n        justify={props.justify || undefined}\n      >\n        {props.children}\n      </Flex>\n    </Flex>\n  )\n}\nFormCard.propTypes = {\n  children: PropTypes.any,\n  justify: PropTypes.string,\n  style: PropTypes.object,\n  height: PropTypes.number,\n  medium: PropTypes.bool,\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Flex, Form, Radio, Select, Switch, Typography } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\n\nimport { Hint } from \"../../lib/hint\";\nimport { HeaderText } from '../HeaderText';\nimport { TooltipImage } from '../TooltipImage';\n\nimport FormCard from './FormCard';\n\nconst { Text } = Typography;\n\nconst OptimizerOptions = ({ defaultGap = 0, panelWidth = 0 }) => {\n  const setStatDisplay = window.store(s => s.setStatDisplay);\n\n  const onChangeStatDisplay = (e) => {\n    const { target: { value } } = e;\n    setStatDisplay(value);\n  };\n\n  return (\n    <FormCard>\n      <Flex justify='space-between' align='center'>\n        <HeaderText>Optimizer options</HeaderText>\n        <TooltipImage type={Hint.optimizerOptions()} />\n      </Flex>\n\n      <Flex align='center'>\n        <Form.Item name=\"rankFilter\" valuePropName=\"checked\">\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            defaultChecked\n            style={{ width: 45, marginRight: 10 }}\n          />\n        </Form.Item>\n        <Text>Rank filter</Text>\n      </Flex>\n\n      <Flex align='center'>\n        <Form.Item name=\"predictMaxedMainStat\" valuePropName=\"checked\">\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            defaultChecked\n            style={{ width: 45, marginRight: 10 }}\n          />\n        </Form.Item>\n        <Text>Maxed main stat</Text>\n      </Flex>\n\n      <Flex align='center'>\n        <Form.Item name=\"keepCurrentRelics\" valuePropName=\"checked\">\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            defaultChecked\n            style={{ width: 45, marginRight: 10 }}\n          />\n        </Form.Item>\n        <Text>Keep current relics</Text>\n      </Flex>\n\n      <Flex align='center'>\n        <Form.Item name=\"includeEquippedRelics\" valuePropName=\"checked\">\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            defaultChecked\n            style={{ width: 45, marginRight: 10 }}\n          />\n        </Form.Item>\n        <Text>Use equipped</Text>\n      </Flex>\n\n      <Flex justify='space-between' align='center' style={{ marginTop: 15 }}>\n        <HeaderText>Relic enhance / rarity</HeaderText>\n        {/*<TooltipImage type={Hint.optimizerOptions()} />*/}\n      </Flex>\n\n      <Flex justify='space-between'>\n        <Form.Item name=\"enhance\">\n          <Select\n            style={{ width: (panelWidth - defaultGap) / 2 }}\n            options={[\n              { value: 0, label: '+0' },\n              { value: 3, label: '+3' },\n              { value: 6, label: '+6' },\n              { value: 9, label: '+9' },\n              { value: 12, label: '+12' },\n              { value: 15, label: '+15' },\n            ]}\n          />\n        </Form.Item>\n\n        <Form.Item name=\"grade\">\n          <Select\n            style={{ width: (panelWidth - defaultGap) / 2 }}\n            options={[\n              { value: 2, label: '2+ stars' },\n              { value: 3, label: '3+ stars' },\n              { value: 4, label: '4+ stars' },\n              { value: 5, label: '5 stars' },\n            ]}\n          />\n        </Form.Item>\n      </Flex>\n\n      <Flex justify='space-between' align='center' style={{ marginTop: 15 }}>\n        <HeaderText>Stat display</HeaderText>\n        {/*<TooltipImage type={Hint.optimizerOptions()} />*/}\n      </Flex>\n\n      <Form.Item name=\"statDisplay\">\n        <Radio.Group\n          onChange={onChangeStatDisplay}\n          optionType=\"button\"\n          buttonStyle=\"solid\"\n          style={{ width: '100%', display: 'flex' }}\n        >\n          <Radio style={{ display: 'flex', flex: 1, justifyContent: 'center', paddingInline: 0 }} value={'base'} defaultChecked>Base stats</Radio>\n          <Radio style={{ display: 'flex', flex: 1, justifyContent: 'center', paddingInline: 0 }} value={'combat'}>Combat stats</Radio>\n        </Radio.Group>\n      </Form.Item>\n\n      {/*\n      <Button type=\"primary\" onClick={showDrawer}>\n        Advanced Options\n      </Button>\n      <Drawer\n        placement=\"right\"\n        closable={false}\n        onClose={onClose}\n        open={open}\n        getContainer={false}\n        width={250}\n      >\n        <HeaderText>\n          Damage Buffs\n          Coming Soon\n        </HeaderText>\n\n        <Divider style={{marginTop: '8px', marginBottom: '12px'}}/>\n\n      </Drawer>\n\n      <Text>Actions</Text>\n      <Button type=\"primary\" onClick={saveCharacterClicked} style={{width: '100%'}}>\n        Save Character\n      </Button> */}\n    </FormCard>\n\n  );\n};\n\nexport default OptimizerOptions;","import { Flex, Form, InputNumber, Slider, Typography } from \"antd\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Utils } from \"../../lib/utils\";\nimport PropTypes from \"prop-types\";\n\nlet sliderWidth = 130\nconst Text = styled(Typography)`\n  white-space: pre-line;\n`\n\nexport function FormStatRollSlider(props) {\n  return (\n    <Flex gap={5} style={{marginBottom: 0}} align='center'>\n      <Flex justify='flex-start' style={{width: 45, marginRight: 10}}>\n        <Text>\n          {props.text}\n        </Text>\n      </Flex>\n      <Flex align='center' justify='flex-start' gap={10}>\n        <Form.Item name={['weights', props.name]}>\n          <Slider\n            min={0}\n            max={1}\n            step={0.25}\n            style={{\n              minWidth: sliderWidth,\n              marginTop: 0,\n              marginBottom: 0,\n              marginLeft: 0,\n            }}\n            onChangeComplete={(x) => window.onOptimizerFormValuesChange(x, window.optimizerForm.getFieldsValue(), true)}\n          />\n        </Form.Item>\n      </Flex>\n    </Flex>\n  )\n}\nFormStatRollSlider.propTypes = {\n  text: PropTypes.string,\n  name: PropTypes.string,\n}\n\n\nexport function FormStatRollSliderTopPercent() {\n  const [inputValue, setInputValue] = useState(1);\n  const onChange = (newValue) => {\n    setInputValue(newValue);\n  };\n\n  return (\n    <Flex gap={5} style={{marginBottom: 0}} align='center'>\n      <Form.Item name={['weights', 'topPercent']}>\n        <InputNumber\n          size='small'\n          style={{width: 50, marginRight: 5}}\n          controls={false}\n          min={1}\n          max={100}\n          onChange={(x) => {\n            onChange(x)\n            window.onOptimizerFormValuesChange(x, window.optimizerForm.getFieldsValue(), true)\n          }}\n          parser={(value) => value == null || value == '' ? 0 : Utils.precisionRound(value) }\n          formatter={(value) => `${Utils.precisionRound(value)}`}\n        />\n      </Form.Item>\n\n      <Flex align='center' justify='flex-start' gap={10}>\n        <Form.Item name={['weights', 'topPercent']}>\n          <Slider\n            min={1}\n            max={100}\n            step={1}\n            style={{\n              minWidth: sliderWidth,\n              marginTop: 0,\n              marginBottom: 0,\n              marginLeft: 0,\n            }}\n            keyboard={false}\n            tooltip={{\n              formatter: (value) => `${Utils.precisionRound(value)}%`\n            }}\n            value={typeof inputValue === 'number' ? inputValue : 0}\n            onChange={onChange}\n            onChangeComplete={(x) => window.onOptimizerFormValuesChange(x, window.optimizerForm.getFieldsValue(), true)}\n          />\n        </Form.Item>\n      </Flex>\n    </Flex>\n  )\n}","import { Divider, Flex } from 'antd';\nimport * as React from 'react';\n\nexport default function VerticalDivider() {\n  return (\n    <Flex vertical>\n      <Divider type=\"vertical\" style={{flexGrow: 1, margin: '10px 10px'}}/>\n    </Flex>\n  );\n}\n\n","import { ConfigProvider, Drawer, Flex, Form, Popover, Select, Switch, Typography } from \"antd\";\nimport { Constants } from \"../../lib/constants.ts\";\nimport VerticalDivider from \"../VerticalDivider\";\nimport React, { useMemo } from \"react\";\nimport { HeaderText } from \"../HeaderText\";\nimport PropTypes from \"prop-types\";\nimport { Assets } from \"../../lib/assets\";\n\nconst { Text } = Typography;\n\nconst setConditionalsIconWidth = 40\nconst setConditionalsNameWidth = 200\nconst setConditionalsWidth = 80\nconst defaultGap = 5\n\nexport const FormSetConditionals = () => {\n  let conditionalSetEffectsDrawerOpen = window.store(s => s.conditionalSetEffectsDrawerOpen);\n  let setConditionalSetEffectsDrawerOpen = window.store(s => s.setConditionalSetEffectsDrawerOpen);\n\n  const setChampionOfStreetwiseBoxingOptions = useMemo(() => {\n    let options = []\n    for (let i = 0; i <= 5; i++) {\n      options.push({\n        display: i + 'x',\n        value: i,\n        label: `${i} stacks (+${i * 5}% ATK)`\n      })\n    }\n\n    return options\n  }, []);\n  const setWastelanderOfBanditryDesert = useMemo(() => {\n    return [\n      {\n        display: 'Off',\n        value: 0,\n        label: 'Off'\n      },\n      {\n        display: 'CR',\n        value: 1,\n        label: 'Debuffed (+10% CR)'\n      },\n      {\n        display: 'CR+CD',\n        value: 2,\n        label: 'Imprisoned (+10% CR + 20% CD)'\n      }\n    ]\n  }, []);\n  const setLongevousDiscipleOptions = useMemo(() => {\n    let options = []\n    for (let i = 0; i <= 2; i++) {\n      options.push({\n        display: i + 'x',\n        value: i,\n        label: `${i} stacks (+${i * 8}% CR)`\n      })\n    }\n\n    return options\n  }, []);\n  const setTheAshblazingGrandDukeOptions = useMemo(() => {\n    let options = []\n    for (let i = 0; i <= 8; i++) {\n      options.push({\n        display: i + 'x',\n        value: i,\n        label: `${i} stacks (+${6 * i}% ATK)`\n      })\n    }\n\n    return options\n  }, []);\n  const setPrisonerInDeepConfinementOptions = useMemo(() => {\n    let options = []\n    for (let i = 0; i <= 3; i++) {\n      options.push({\n        display: i + 'x',\n        value: i,\n        label: `${i} stacks (+${6 * i}% DEF ignore)`\n      })\n    }\n\n    return options\n  }, []);\n\n  let defaultMessage = 'Enabled by default - effects will apply to combat calculations.'\n\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          opacityLoading: 0.15\n        }\n      }}\n    >\n      <Drawer\n        title=\"Conditional set effects\"\n        placement=\"right\"\n        onClose={() => setConditionalSetEffectsDrawerOpen(false)}\n        open={conditionalSetEffectsDrawerOpen}\n        width={750}\n        forceRender\n      >\n        <Flex justify='center'>\n          <Flex vertical gap={defaultGap}>\n            <Flex gap={defaultGap} align='center' justify='flex-start'>\n              <Text style={{ width: setConditionalsIconWidth }}></Text>\n              <Text style={{ width: setConditionalsNameWidth }}></Text>\n              <Text style={{ marginLeft: 'auto' }}>4 Piece</Text>\n            </Flex>\n\n            <ConditionalSetOption\n              set={Constants.Sets.PasserbyOfWanderingCloud}\n              description=\"At the beginning of the battle, immediately regenerates 1 Skill Point.\"\n              conditional={defaultMessage}\n              p4Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.MusketeerOfWildWheat}\n              description=\"The wearer's SPD increases by 6% and Basic ATK DMG increases by 10%.\"\n              conditional={defaultMessage}\n              p4Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.KnightOfPurityPalace}\n              description=\"Increases the max DMG that can be absorbed by the Shield created by the wearer by 20%.\"\n              conditional={defaultMessage}\n              p4Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.HunterOfGlacialForest}\n              description=\"After the wearer uses their Ultimate, their CRIT DMG increases by 25% for 2 turn(s).\"\n              conditional={'When enabled, CRIT DMG buff is applied to all calculations.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.ChampionOfStreetwiseBoxing}\n              selectOptions={setChampionOfStreetwiseBoxingOptions}\n              description=\"After the wearer attacks or is hit, their ATK increases by 5% for the rest of the battle. This effect can stack up to 5 time(s).\"\n              conditional={'The selected ATK% buff is applied to all calculations based on the number of stacks.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.GuardOfWutheringSnow}\n              description=\"At the beginning of the turn, if the wearer's HP is equal to or less than 50%, restores HP equal to 8% of their Max HP and regenerates 5 Energy.\"\n              conditional={defaultMessage}\n              p4Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.FiresmithOfLavaForging}\n              description=\"Increases the wearer's Skill DMG by 12%. After unleashing Ultimate, increases the wearer's Fire DMG by 12% for the next attack.\"\n              conditional={'The Skill DMG increase is always active by default. When enabled, the Fire DMG buff is applied to all calculations.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.GeniusOfBrilliantStars}\n              description=\"When the wearer deals DMG to the target enemy, ignores 10% DEF. If the target enemy has Quantum Weakness, the wearer additionally ignores 10% DEF.\"\n              conditional={'The 10% DEF pen increase is always active by default. When enabled, treats the enemy as having Quantum Weakness and penetrates 10% more DEF.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.BandOfSizzlingThunder}\n              description=\"When the wearer uses their Skill, increases the wearer's ATK by 20% for 1 turn(s).\"\n              conditional={'When enabled, ATK% buff is applied to all calculations.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.EagleOfTwilightLine}\n              description=\"After the wearer uses their Ultimate, their action is Advanced Forward by 25%.\"\n              conditional={defaultMessage}\n              p4Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.ThiefOfShootingMeteor}\n              description=\"Increases the wearer's Break Effect by 16%. When the wearer inflicts Weakness Break on an enemy, regenerates 3 Energy.\"\n              conditional={defaultMessage}\n              p4Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.WastelanderOfBanditryDesert}\n              selectOptions={setWastelanderOfBanditryDesert}\n              description=\"When attacking debuffed enemies, the wearer's CRIT Rate increases by 10%, and their CRIT DMG increases by 20% against Imprisoned enemies.\"\n              conditional={'Applies the selected buffs to all calculations.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.LongevousDisciple}\n              selectOptions={setLongevousDiscipleOptions}\n              description=\"When the wearer is hit or has their HP consumed by an ally or themselves, their CRIT Rate increases by 8% for 2 turn(s) and up to 2 stacks.\"\n              conditional={'The selected CR buff is applied to all calculations based on the number of stacks.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.MessengerTraversingHackerspace}\n              description=\"When the wearer uses their Ultimate on an ally, SPD for all allies increases by 12% for 1 turn(s). This effect cannot be stacked.\"\n              conditional={'When enabled, SPD% buff is applied to all calculations.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.TheAshblazingGrandDuke}\n              selectOptions={setTheAshblazingGrandDukeOptions}\n              description=\"When the wearer uses follow-up attacks, increases the wearer's ATK by 6% every time the follow-up attack deals DMG. This effect can stack up to 8 time(s) and lasts for 3 turn(s). This effect is removed the next time the wearer uses a follow-up attack.\"\n              conditional={'The selected ATK% buff is applied to all calculations except for Follow-up attacks. Follow-up attack calculations instead will start at 0% ATK buff and stack up based on the number of hits performed by the attack. Hits will increase based on the enemy count and assumes the target is positioned in the center for blast / aoe attacks.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.PrisonerInDeepConfinement}\n              selectOptions={setPrisonerInDeepConfinementOptions}\n              description=\"For every DoT the target enemy is afflicted with, the wearer will ignore 6% of its DEF when dealing DMG to it. This effect is valid for a max of 3 DoTs.\"\n              conditional={'The selected DEF% pen buff is applied to all calculations based on the number of stacks.'}\n            />\n          </Flex>\n\n          <VerticalDivider />\n\n          <Flex vertical gap={defaultGap} style={{ marginLeft: 5 }}>\n            <Flex gap={defaultGap} align='center' justify='flex-start'>\n              <Text style={{ width: setConditionalsIconWidth }}></Text>\n              <Text style={{ width: setConditionalsNameWidth }}></Text>\n              <Text style={{ marginLeft: 'auto' }}>2 Piece</Text>\n            </Flex>\n            <ConditionalSetOption\n              set={Constants.Sets.SpaceSealingStation}\n              description=\"\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.FleetOfTheAgeless}\n              description=\"Increases the wearer's ATK by 12%. When the wearer's SPD reaches 120 or higher, the wearer's ATK increases by an extra 12%.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.PanCosmicCommercialEnterprise}\n              description=\"Increases the wearer's Effect Hit Rate by 10%. Meanwhile, the wearer's ATK increases by an amount that is equal to 25% of the current Effect Hit Rate, up to a maximum of 25%.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.BelobogOfTheArchitects}\n              description=\"Increases the wearer's DEF by 15%. When the wearer's Effect Hit Rate is 50% or higher, the wearer gains an extra 15% DEF.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.CelestialDifferentiator}\n              description=\"Increases the wearer's CRIT DMG by 16%. When the wearer's current CRIT DMG reaches 120% or higher, after entering battle, the wearer's CRIT Rate increases by 60% until the end of their first attack.\"\n              conditional={'When enabled, CRIT Rate buff is applied to all calculations.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.InertSalsotto}\n              description=\"Increases the wearer's CRIT Rate by 8%. When the wearer's current CRIT Rate reaches 50% or higher, the wearer's Ultimate and follow-up attack DMG increases by 15%.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.TaliaKingdomOfBanditry}\n              description=\"Increases the wearer's Break Effect by 16%. When the wearer's SPD reaches 145 or higher, the wearer's Break Effect increases by an extra 20%.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.SprightlyVonwacq}\n              description=\"Increases the wearer's Energy Regeneration Rate by 5%. When the wearer's SPD reaches 120 or higher, the wearer's action is Advanced Forward by 40% immediately upon entering battle.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.RutilantArena}\n              description=\"Increases the wearer's CRIT Rate by 8%. When the wearer's current CRIT Rate reaches 70% or higher, the wearer's Basic ATK and Skill DMG increase by 20%.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.BrokenKeel}\n              description=\"Increases the wearer's Effect RES by 10%. When the wearer's Effect RES is at 30% or higher, all allies' CRIT DMG increases by 10%.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.FirmamentFrontlineGlamoth}\n              description=\"Increases the wearer's ATK by 12%. When the wearer's SPD is equal to or higher than 135/160, the wearer deals 12%/18% more DMG.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.PenaconyLandOfTheDreams}\n              description=\"Increases wearer's Energy Regeneration Rate by 5%. Increases DMG by 10% for all other allies that are of the same Type as the wearer.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n          </Flex>\n        </Flex>\n      </Drawer>\n    </ConfigProvider>\n  )\n}\n\nfunction ConditionalSetOption(props) {\n  const content = (\n    <Flex vertical gap={10}>\n      <Flex vertical>\n        <HeaderText>\n          <p>{'Set description'}</p>\n        </HeaderText>\n        <p>{props.description}</p>\n      </Flex>\n\n      <Flex vertical>\n        <HeaderText>\n          <p>{'Enabled effect'}</p>\n        </HeaderText>\n        <p>{props.conditional}</p>\n      </Flex>\n    </Flex>\n  );\n\n  if (Constants.SetsRelicsNames.includes(props.set)) {\n    // Relics\n    let inputType = (<Switch disabled={props.p4Checked} />)\n    if (props.selectOptions) {\n      inputType = (\n        <Select\n          optionLabelProp=\"display\"\n          listHeight={500}\n          size='small'\n          style={{ width: setConditionalsWidth }}\n          dropdownStyle={{ width: 250 }}\n          options={props.selectOptions}\n        />\n      )\n    }\n\n    return (\n      <Popover\n        content={content}\n        title={props.set}\n        mouseEnterDelay={0.5}\n        overlayStyle={{\n          width: 600\n        }}\n      >\n        <Flex gap={defaultGap} align='center' justify='flex-start'>\n          <Flex style={{ width: setConditionalsIconWidth }}>\n            <img src={Assets.getSetImage(props.set, Constants.Parts.PlanarSphere)} style={{ width: 36, height: 36 }}></img>\n          </Flex>\n          <Text style={{ width: setConditionalsNameWidth, textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}>{props.set}</Text>\n          <Flex style={{ width: setConditionalsWidth }} justify='flex-end'>\n            <Form.Item name={['setConditionals', props.set, 1]} valuePropName={props.selectOptions ? 'value' : 'checked'}>\n              {inputType}\n            </Form.Item>\n          </Flex>\n        </Flex>\n      </Popover>\n    )\n  } else {\n    // Ornaments\n    return (\n      <Popover\n        content={content}\n        title={props.set}\n        mouseEnterDelay={0.5}\n        overlayStyle={{\n          width: 600\n        }}\n      >\n        <Flex gap={defaultGap} align='center' justify='flex-start'>\n          <Flex style={{ width: setConditionalsIconWidth }}>\n            <img src={Assets.getSetImage(props.set, Constants.Parts.PlanarSphere)} style={{ width: 36, height: 36 }}></img>\n          </Flex>\n          <Text style={{ width: setConditionalsNameWidth, textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}>{props.set}</Text>\n          <Flex style={{ width: setConditionalsWidth }} justify='flex-end'>\n            <Form.Item name={['setConditionals', props.set, 1]} valuePropName='checked'>\n              <Switch disabled={props.p2Checked} />\n            </Form.Item>\n          </Flex>\n        </Flex>\n      </Popover>\n    )\n  }\n}\nConditionalSetOption.propTypes = {\n  description: PropTypes.string,\n  p2Checked: PropTypes.bool,\n  p4Checked: PropTypes.bool,\n  set: PropTypes.string,\n  conditional: PropTypes.string,\n  selectOptions: PropTypes.array,\n}\n","import {\n  Button,\n  Cascader,\n  ConfigProvider,\n  Divider,\n  Flex,\n  Form,\n  Image,\n  InputNumber,\n  Select,\n  Switch,\n  Tag,\n  Typography,\n} from 'antd';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Optimizer } from '../lib/optimizer';\nimport styled from 'styled-components';\nimport { Constants } from '../lib/constants.ts';\nimport FormRow from './optimizerTab/FormRow';\nimport FilterContainer from './optimizerTab/FilterContainer';\nimport FormCard from './optimizerTab/FormCard';\nimport OptimizerOptions from './optimizerTab/OptimizerOptions';\nimport { CheckOutlined, CloseOutlined, SettingOutlined } from '@ant-design/icons';\nimport { HeaderText } from './HeaderText';\nimport { OptimizerTabController } from '../lib/optimizerTabController';\nimport { TooltipImage } from './TooltipImage';\nimport { SaveState } from '../lib/saveState';\nimport { CharacterConditionals } from \"../lib/characterConditionals\";\nimport { LightConeConditionals } from \"../lib/lightConeConditionals\";\nimport { FormStatRollSlider, FormStatRollSliderTopPercent } from \"./optimizerTab/FormStatRollSlider\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getDefaultForm } from \"../lib/defaultForm\";\nimport { FormSetConditionals } from \"./optimizerTab/FormSetConditionals\";\nimport { Assets } from \"../lib/assets\";\nimport PropTypes from \"prop-types\";\nimport DB from \"../lib/db\";\nimport { Message } from \"../lib/message\";\nimport { Hint } from \"../lib/hint\";\nimport { Utils } from \"../lib/utils\";\n\nconst { Text } = Typography;\nconst { SHOW_CHILD } = Cascader;\n\nlet HorizontalDivider = styled(Divider)`\n  margin: 5px 0px;\n`\n\nfunction generateOrnamentsOptions() {\n  return Object.values(Constants.SetsOrnaments).map(x => {\n    return {\n      value: x,\n      label:\n        <Flex gap={5} align='center'>\n          <img src={Assets.getSetImage(x, Constants.Parts.PlanarSphere)} style={{ width: 26, height: 26 }}></img>\n          <div style={{ display: 'inline-block', overflow: 'hidden', textOverflow: 'ellipsis', width: 250, whiteSpace: 'nowrap' }}>\n            {x}\n          </div>\n        </Flex>\n    }\n  })\n}\n\nfunction generateSetsOptions() {\n  let result = [\n    {\n      value: '4 Piece',\n      label: '4 Piece',\n      children: []\n    },\n    {\n      value: '2 Piece',\n      label: '2 Piece',\n      children: []\n    }\n  ];\n\n  let childrenWithAny = Object.entries(Constants.SetsRelics).map(set => {\n    return {\n      value: set[1],\n      label: set[1]\n    }\n  })\n  childrenWithAny.push({\n    value: 'Any',\n    label: 'Any'\n  })\n\n  function generateLabel(value, parens, label) {\n    let imageSrc = value == 'Any' ? Assets.getBlank() : Assets.getSetImage(value, Constants.Parts.Head)\n    return (\n      <Flex gap={5} align='center'>\n        <img src={imageSrc} style={{ width: 26, height: 26 }}></img>\n        <div style={{ display: 'inline-block', overflow: 'hidden', textOverflow: 'ellipsis', width: 250, whiteSpace: 'nowrap' }}>\n          {parens + label}\n        </div>\n      </Flex>\n    )\n  }\n\n  for (let set of Object.entries(Constants.SetsRelics)) {\n    result[0].children.push({\n      value: set[1],\n      label: generateLabel(set[1], '(4) ', set[1])\n    })\n\n    result[1].children.push({\n      value: set[1],\n      label: generateLabel(set[1], '(2) ', set[1]),\n      children: childrenWithAny.map(x => {\n        let parens = x.value == 'Any' ? '(0) ' : '(2) ';\n        return {\n          value: x.value,\n          label: generateLabel(x.value, parens, x.label)\n        }\n      })\n    })\n  }\n\n  return result;\n}\n\nconst FormStatTextStyled = styled(Text)`\n  display: block;\n  text-align: center;\n`\n\nconst InputNumberStyled = styled(InputNumber)`\n  width: 62px\n`\n\nfunction FilterRow(props) {\n  return (\n    <Flex justify='space-between'>\n      <Form.Item size=\"default\" name={`min${props.name}`}>\n        <InputNumberStyled size=\"small\" controls={false} />\n      </Form.Item>\n      <FormStatTextStyled>{props.label}</FormStatTextStyled>\n      <Form.Item size=\"default\" name={`max${props.name}`}>\n        <InputNumberStyled size=\"small\" controls={false} />\n      </Form.Item>\n    </Flex>\n  )\n}\nFilterRow.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n}\n\n\nlet panelWidth = 203;\nlet defaultGap = 5;\n\nexport default function OptimizerForm() {\n  console.log('======================================================================= RENDER')\n  console.log('OptimizerForm')\n  const [optimizerForm] = Form.useForm();\n  window.optimizerForm = optimizerForm\n\n  const characterEidolon = Form.useWatch('characterEidolon', optimizerForm);\n  const lightConeSuperimposition = Form.useWatch('lightConeSuperimposition', optimizerForm);\n\n  const setConditionalSetEffectsDrawerOpen = window.store(s => s.setConditionalSetEffectsDrawerOpen);\n\n  const activeKey = window.store(s => s.activeKey)\n  const characters = window.store(s => s.characters) // characters set in this localStorage instance\n  const setStatDisplay = window.store(s => s.setStatDisplay)\n\n  const [optimizationId, setOptimizationId] = useState();\n\n  const characterOptions = useMemo(() => Utils.generateCharacterOptions(), []);\n\n  const lightConeOptions = useMemo(() => {\n    let lcData = JSON.parse(JSON.stringify(DB.getMetadata().lightCones));\n\n    for (let value of Object.values(lcData)) {\n      value.value = value.id;\n      value.label = value.name;\n    }\n\n    return Object.values(lcData).sort((a, b) => a.label.localeCompare(b.label))\n  }, []);\n\n  const [selectedLightCone, setSelectedLightCone] = useState({ id: 'None', name: 'Light Cone' });\n  window.selectedLightCone = selectedLightCone\n  window.setSelectedLightCone = (x) => {\n    setSelectedLightCone(x)\n  }\n\n  useEffect(() => {\n    let lcFn = LightConeConditionals.get(optimizerForm.getFieldsValue())\n    let form = optimizerForm.getFieldsValue()\n    let defaults = lcFn.defaults()\n    let lightConeForm = form.lightConeConditionals || {}\n\n    // We can't apply the form to dynamically generated elements, so we use an effect to set the form value to default\n    // Only if there's a missing field\n    Object.assign(defaults, lightConeForm)\n    if (Object.values(defaults).includes(undefined)) {\n      optimizerForm.setFieldValue('lightConeConditionals', lcFn.defaults())\n    }\n  }, [selectedLightCone])\n\n  const initialCharacter = useMemo(() => {\n    let characters = DB.getCharacters(); // retrieve instance localStore saved chars\n    if (characters && characters.length > 0) {\n      let character = characters[0];\n      lightConeSelectorChange(character.form.lightCone)\n      setStatDisplay(character.form.statDisplay || 'base')\n      return characterOptions.find(x => x.id == character.id)\n    }\n  }, []);\n\n  const [selectedCharacter, setSelectedCharacter] = useState(() => initialCharacter);\n  window.setSelectedCharacter = setSelectedCharacter\n\n  // TODO: refactor if/when view-routing/deep-linking implemented\n  // coming from char tab\n  const selectedOptimizerCharacter = window.store(s => s.selectedOptimizerCharacter);\n  const setSelectedOptimizerCharacter = window.store(s => s.setSelectedOptimizerCharacter);\n  useEffect(() => {\n    if (selectedOptimizerCharacter && selectedOptimizerCharacter.id !== selectedCharacter.id) {\n      characterSelectorChange(selectedOptimizerCharacter.id);\n      setSelectedOptimizerCharacter(null);\n    }\n  }, [selectedOptimizerCharacter]);\n\n  useEffect(() => {\n    if (activeKey == 'optimizer' && !selectedCharacter && characters && characters.length > 0 && characters[0].id) {\n      characterSelectorChange(characters[0].id)\n    }\n  }, [activeKey])\n\n  const levelOptions = useMemo(() => {\n    let levelStats = []\n    for (let i = 80; i >= 1; i--) {\n      levelStats.push({\n        value: i,\n        label: `Lv. ${i}`\n      })\n    }\n\n    return levelStats\n  }, []);\n\n  const enemyLevelOptions = useMemo(() => {\n    let levelStats = []\n    for (let i = 95; i >= 1; i--) {\n      levelStats.push({\n        value: i,\n        label: `Lv. ${i}`\n      })\n    }\n\n    return levelStats\n  }, []);\n\n  const enemyCountOptions = useMemo(() => {\n    let levelStats = []\n    for (let i = 1; i <= 5; i += 2) {\n      levelStats.push({\n        value: i,\n        label: `${i} target${i > 1 ? 's' : ''}`\n      })\n    }\n\n    return levelStats\n  }, []);\n\n  const enemyResistanceOptions = useMemo(() => {\n    let levelStats = []\n    for (let i = 20; i <= 60; i += 20) {\n      levelStats.push({\n        value: i / 100,\n        label: `${i}% RES`\n      })\n    }\n\n    return levelStats\n  }, []);\n\n  const enemyHpPercentOptions = useMemo(() => {\n    let levelStats = []\n    for (let i = 100; i >= 1; i--) {\n      levelStats.push({\n        value: i / 100,\n        label: `${i}% HP`\n      })\n    }\n\n    return levelStats\n  }, []);\n\n  const superimpositionOptions = useMemo(() => {\n    return [\n      { value: 1, label: 'S1' },\n      { value: 2, label: 'S2' },\n      { value: 3, label: 'S3' },\n      { value: 4, label: 'S4' },\n      { value: 5, label: 'S5' },\n    ]\n  }, []);\n\n  const eidolonOptions = useMemo(() => {\n    return [\n      { value: 0, label: 'E0' },\n      { value: 1, label: 'E1' },\n      { value: 2, label: 'E2' },\n      { value: 3, label: 'E3' },\n      { value: 4, label: 'E4' },\n      { value: 5, label: 'E5' },\n      { value: 6, label: 'E6' },\n    ]\n  }, []);\n\n\n  function characterSelectorChange(id) {\n    setSelectedCharacter(characterOptions.find(x => x.id == id))\n    OptimizerTabController.changeCharacter(id)\n  }\n\n  function lightConeSelectorChange(id) {\n    setSelectedLightCone(lightConeOptions.find(x => x.id == id))\n  }\n\n  const onFinish = (x) => {\n    OptimizerTabController.fixForm(x);\n    if (!OptimizerTabController.validateForm(x)) {\n      return\n    }\n    DB.addFromForm(x)\n    SaveState.save()\n    console.log('Form finished', x);\n\n    let optimizationId = uuidv4()\n    setOptimizationId(optimizationId)\n    x.optimizationId = optimizationId\n\n    Optimizer.optimize(x)\n  };\n\n  const onFinishFailed = () => {\n    Message.error('Submit failed!');\n  };\n\n  const onValuesChange = (changedValues, allValues, bypass) => {\n    if (!changedValues || !allValues || !allValues.characterId) return;\n    let keys = Object.keys(changedValues)\n    if (bypass) {\n      // Allow certain values to refresh permutations.\n      // Sliders should only update at the end of the drag\n    } else if (keys.length == 1 && (\n      keys[0].startsWith('min') ||\n      keys[0].startsWith('max') ||\n      keys[0].startsWith('buff') ||\n      keys[0].startsWith('weights') ||\n      keys[0].startsWith('statDisplay') ||\n      keys[0] == 'characterConditionals' ||\n      keys[0] == 'lightConeConditionals')) {\n      return;\n    }\n    let request = allValues\n\n    console.log('Values changed', request, changedValues);\n\n    const [relics, preFilteredRelicsByPart] = Optimizer.getFilteredRelics(request, allValues.characterId);\n\n    let permutationDetails = {\n      Head: relics.Head.length,\n      Hands: relics.Hands.length,\n      Body: relics.Body.length,\n      Feet: relics.Feet.length,\n      PlanarSphere: relics.PlanarSphere.length,\n      LinkRope: relics.LinkRope.length,\n      HeadTotal: preFilteredRelicsByPart[Constants.Parts.Head].length,\n      HandsTotal: preFilteredRelicsByPart[Constants.Parts.Hands].length,\n      BodyTotal: preFilteredRelicsByPart[Constants.Parts.Body].length,\n      FeetTotal: preFilteredRelicsByPart[Constants.Parts.Feet].length,\n      PlanarSphereTotal: preFilteredRelicsByPart[Constants.Parts.PlanarSphere].length,\n      LinkRopeTotal: preFilteredRelicsByPart[Constants.Parts.LinkRope].length\n    }\n    window.store.getState().setPermutationDetails(permutationDetails)\n    window.store.getState().setPermutations(relics.Head.length * relics.Hands.length * relics.Body.length * relics.Feet.length * relics.PlanarSphere.length * relics.LinkRope.length)\n  }\n  window.onOptimizerFormValuesChange = onValuesChange;\n\n  const filterOption = (input, option) =>\n    (option?.label ?? '').toLowerCase().includes(input.toLowerCase());\n\n  let parentW = 233;\n  let parentH = 350;\n  let innerW = 350;\n  let innerH = 400;\n\n  const initialValues = useMemo(() => {\n    if (selectedCharacter) {\n      let matchingCharacter = DB.getCharacterById(selectedCharacter.id)\n      if (matchingCharacter) {\n        return OptimizerTabController.getDisplayFormValues(matchingCharacter.form)\n      }\n    }\n\n    return getDefaultForm(initialCharacter)\n  }, [initialCharacter]);\n\n  useEffect(() => {\n    onValuesChange({}, initialValues)\n  }, [initialValues])\n\n  function cancelClicked() {\n    console.log('Cancel clicked');\n    Optimizer.cancel(optimizationId)\n  }\n  window.optimizerCancelClicked = cancelClicked\n\n  function resetClicked() {\n    console.log('Reset clicked');\n    OptimizerTabController.resetFilters()\n  }\n  window.optimizerResetClicked = resetClicked\n\n  function filterClicked() {\n    console.log('Filter clicked');\n    OptimizerTabController.applyRowFilters()\n  }\n  window.optimizerFilterClicked = filterClicked\n\n  function startClicked() {\n    console.log('Start clicked');\n    optimizerForm.submit()\n  }\n  window.optimizerStartClicked = startClicked\n\n  function OrnamentSetTagRenderer(props) {\n    const { value, closable, onClose } = props;\n    const onPreventMouseDown = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n    return (\n      <Tag\n        onMouseDown={onPreventMouseDown}\n        closable={closable}\n        onClose={onClose}\n        style={{ display: 'flex', flexDirection: 'row', paddingInline: '1px', marginInlineEnd: '4px', height: 22, alignItems: 'center', overflow: 'hidden' }}\n      >\n        <Flex>\n          <img title={value} src={Assets.getSetImage(value, Constants.Parts.PlanarSphere)} style={{ width: 26, height: 26 }}></img>\n        </Flex>\n      </Tag>\n    );\n  }\n  OrnamentSetTagRenderer.propTypes = {\n    value: PropTypes.string,\n    closable: PropTypes.bool,\n    onClose: PropTypes.func,\n  }\n\n  function RelicSetTagRenderer(props) {\n    const { value, closable, onClose } = props;\n    // The value comes in as:\n    // \"2 PieceBand of Sizzling Thunder__RC_CASCADER_SPLIT__Guard of Wuthering Snow\"\n    // 3 -> render both, any render one, 2 -> render first twice\n    let pieces = value.split('__RC_CASCADER_SPLIT__')\n    let inner\n    if (pieces.length == 3) {\n      if (pieces[2] == 'Any') {\n        inner =\n          <React.Fragment>\n            <img title={pieces[1]} src={Assets.getSetImage(pieces[1], Constants.Parts.Head)} style={{ width: 26, height: 26 }}></img>\n          </React.Fragment>\n      } else {\n        inner =\n          <React.Fragment>\n            <img title={pieces[1]} src={Assets.getSetImage(pieces[1], Constants.Parts.Head)} style={{ width: 26, height: 26 }}></img>\n            <img title={pieces[2]} src={Assets.getSetImage(pieces[2], Constants.Parts.Head)} style={{ width: 26, height: 26 }}></img>\n          </React.Fragment>\n      }\n    } else {\n      inner =\n        <React.Fragment>\n          <img title={pieces[1]} src={Assets.getSetImage(pieces[1], Constants.Parts.Head)} style={{ width: 26, height: 26 }}></img>\n          <img title={pieces[1]} src={Assets.getSetImage(pieces[1], Constants.Parts.Head)} style={{ width: 26, height: 26 }}></img>\n        </React.Fragment>\n    }\n    RelicSetTagRenderer.propTypes = {\n      value: PropTypes.string,\n      closable: PropTypes.bool,\n      onClose: PropTypes.func,\n    }\n\n    const onPreventMouseDown = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n    return (\n      <Tag\n        onMouseDown={onPreventMouseDown}\n        closable={closable}\n        onClose={onClose}\n        style={{ display: 'flex', flexDirection: 'row', paddingInline: '1px', marginInlineEnd: '4px', height: 22, alignItems: 'center', overflow: 'hidden' }}\n      >\n        <Flex>\n          {inner}\n        </Flex>\n      </Tag>\n    );\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <Form\n        form={optimizerForm}\n        layout=\"vertical\"\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        onValuesChange={onValuesChange}\n        initialValues={initialValues}\n      >\n        <FormSetConditionals />\n\n        <FilterContainer>\n          <FormRow gap={defaultGap} title='Character options'>\n            <FormCard style={{ overflow: 'hidden' }}>\n              <div style={{ width: `${parentW}px`, height: `${parentH}px`, borderRadius: '10px' }}>\n                <Image\n                  preview={false}\n                  width={innerW}\n                  src={Assets.getCharacterPreviewById(selectedCharacter?.id)}\n                  style={{ transform: `translate(${(innerW - parentW) / 2 / innerW * -100}%, ${(innerH - parentH) / 2 / innerH * -100}%)` }}\n                />\n              </div>\n            </FormCard>\n\n            <FormCard>\n              <Flex justify='space-between' align='center'>\n                <HeaderText>Character</HeaderText>\n                <TooltipImage type={Hint.character()} />\n              </Flex>\n              <Flex gap={defaultGap}>\n                <Form.Item size=\"default\" name='characterId'>\n                  <Select\n                    showSearch\n                    filterOption={filterOption}\n                    style={{ width: panelWidth }}\n                    onChange={characterSelectorChange}\n                    options={characterOptions}\n                  />\n                </Form.Item>\n              </Flex>\n              <Flex gap={defaultGap} justify='space-between'>\n                <Form.Item size=\"default\" name='characterLevel'>\n                  <Select\n                    showSearch\n                    style={{ width: (panelWidth - defaultGap) / 2 }}\n                    options={levelOptions}\n                  />\n                </Form.Item>\n                <Form.Item size=\"default\" name='characterEidolon'>\n                  <Select\n                    showSearch\n                    style={{ width: (panelWidth - defaultGap) / 2 }}\n                    options={eidolonOptions}\n                  />\n                </Form.Item>\n              </Flex>\n\n              <Flex justify='space-between' align='center'>\n                <HeaderText>Light cone</HeaderText>\n                <TooltipImage type={Hint.lightCone()} />\n              </Flex>\n              <Flex vertical gap={defaultGap}>\n                <Flex gap={defaultGap}>\n                  <Form.Item size=\"default\" name='lightCone'>\n                    <Select\n                      showSearch\n                      filterOption={filterOption}\n                      style={{ width: panelWidth }}\n                      onChange={lightConeSelectorChange}\n                      options={lightConeOptions}\n                    />\n                  </Form.Item>\n                </Flex>\n                <Flex gap={defaultGap} justify='space-between'>\n                  <Form.Item size=\"default\" name='lightConeLevel'>\n                    <Select\n                      showSearch\n                      style={{ width: (panelWidth - defaultGap) / 2 }}\n                      options={levelOptions}\n                    />\n                  </Form.Item>\n                  <Form.Item size=\"default\" name='lightConeSuperimposition'>\n                    <Select\n                      showSearch\n                      style={{ width: (panelWidth - defaultGap) / 2 }}\n                      options={superimpositionOptions}\n                    />\n                  </Form.Item>\n                </Flex>\n              </Flex>\n            </FormCard>\n\n            <FormCard>\n              {CharacterConditionals.getDisplayForCharacter(selectedCharacter?.id, characterEidolon)}\n            </FormCard>\n\n            <FormCard justify='space-between'>\n              {LightConeConditionals.getDisplayForLightCone(selectedLightCone?.id, lightConeSuperimposition)}\n\n              <Flex vertical gap={5} style={{ marginBottom: 5 }}>\n                <Flex justify='space-between' align='center'>\n                  <HeaderText style={{}}>Enemy options</HeaderText>\n                  <TooltipImage type={Hint.enemyOptions()} />\n                </Flex>\n\n                <Flex gap={defaultGap} justify='space-between'>\n                  <Form.Item size=\"default\" name='enemyLevel'>\n                    <Select\n                      showSearch\n                      filterOption={filterOption}\n                      style={{ width: (panelWidth - defaultGap) / 2 }}\n                      options={enemyLevelOptions}\n                    />\n                  </Form.Item>\n                  <Form.Item size=\"default\" name='enemyCount'>\n                    <Select\n                      showSearch\n                      filterOption={filterOption}\n                      style={{ width: (panelWidth - defaultGap) / 2 }}\n                      options={enemyCountOptions}\n                    />\n                  </Form.Item>\n                </Flex>\n\n                <Flex gap={defaultGap} justify='space-between'>\n                  <Form.Item size=\"default\" name='enemyResistance'>\n                    <Select\n                      showSearch\n                      filterOption={filterOption}\n                      style={{ width: (panelWidth - defaultGap) / 2 }}\n                      options={enemyResistanceOptions}\n                    />\n                  </Form.Item>\n                  <Form.Item size=\"default\" name='enemyHpPercent'>\n                    <Select\n                      showSearch\n                      filterOption={filterOption}\n                      style={{ width: (panelWidth - defaultGap) / 2 }}\n                      options={enemyHpPercentOptions}\n                    />\n                  </Form.Item>\n                </Flex>\n\n                <Flex align='center'>\n                  <Form.Item name=\"enemyElementalWeak\" valuePropName=\"checked\">\n                    <Switch\n                      checkedChildren={<CheckOutlined />}\n                      unCheckedChildren={<CloseOutlined />}\n                      defaultChecked\n                      style={{ width: 45, marginRight: 10 }}\n                    />\n                  </Form.Item>\n                  <Text>Elemental weakness</Text>\n                </Flex>\n\n                <Flex align='center'>\n                  <Form.Item name=\"enemyWeaknessBroken\" valuePropName=\"checked\">\n                    <Switch\n                      checkedChildren={<CheckOutlined />}\n                      unCheckedChildren={<CloseOutlined />}\n                      style={{ width: 45, marginRight: 10 }}\n                    />\n                  </Form.Item>\n                  <Text>Weakness broken</Text>\n                </Flex>\n              </Flex>\n            </FormCard>\n\n            <OptimizerOptions defaultGap={defaultGap} panelWidth={panelWidth} />\n          </FormRow>\n\n          <FormRow title='Relic & stat filters'>\n            <FormCard>\n              <Flex vertical gap={defaultGap}>\n                <Flex justify='space-between' align='center'>\n                  <HeaderText>Main stats</HeaderText>\n                  <TooltipImage type={Hint.mainStats()} />\n                </Flex>\n                <Form.Item size=\"default\" name='mainBody'>\n                  <Select\n                    mode=\"multiple\"\n                    allowClear\n                    style={{\n                      width: panelWidth,\n                    }}\n                    placeholder=\"Body\"\n                    maxTagCount='responsive'>\n                    <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                    <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                    <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                    <Select.Option value={Constants.Stats.CR}>CRIT Rate</Select.Option>\n                    <Select.Option value={Constants.Stats.CD}>CRIT DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.OHB}>Outgoing Healing</Select.Option>\n                    <Select.Option value={Constants.Stats.EHR}>Effect HIT Rate</Select.Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item size=\"default\" name='mainFeet'>\n                  <Select\n                    mode=\"multiple\"\n                    allowClear\n                    style={{\n                      width: panelWidth,\n                    }}\n                    placeholder=\"Feet\"\n                    maxTagCount='responsive'>\n                    <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                    <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                    <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                    <Select.Option value={Constants.Stats.SPD}>Speed</Select.Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item size=\"default\" name='mainPlanarSphere'>\n                  <Select\n                    mode=\"multiple\"\n                    allowClear\n                    style={{\n                      width: panelWidth,\n                    }}\n                    placeholder=\"Planar Sphere\"\n                    listHeight={400}\n                    maxTagCount='responsive'>\n                    <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                    <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                    <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                    <Select.Option value={Constants.Stats.Physical_DMG}>Physical DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.Fire_DMG}>Fire DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.Ice_DMG}>Ice DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.Lightning_DMG}>Lightning DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.Wind_DMG}>Wind DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.Quantum_DMG}>Quantum DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.Imaginary_DMG}>Imaginary DMG</Select.Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item size=\"default\" name='mainLinkRope'>\n                  <Select\n                    mode=\"multiple\"\n                    allowClear\n                    style={{\n                      width: panelWidth,\n                    }}\n                    placeholder=\"Link Rope\"\n                    maxTagCount='responsive'>\n                    <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                    <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                    <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                    <Select.Option value={Constants.Stats.BE}>Break Effect</Select.Option>\n                    <Select.Option value={Constants.Stats.ERR}>Energy Regeneration Rate</Select.Option>\n                  </Select>\n                </Form.Item>\n              </Flex>\n\n              <Flex vertical gap={defaultGap}>\n                <Flex justify='space-between' align='center'>\n                  <HeaderText>Sets</HeaderText>\n                  <TooltipImage type={Hint.sets()} />\n                </Flex>\n\n                <Form.Item size=\"default\" name='ornamentSets'>\n                  <Select\n                    dropdownStyle={{\n                      width: 250\n                    }}\n                    listHeight={500}\n                    mode=\"multiple\"\n                    allowClear\n                    style={{\n                      width: panelWidth\n                    }}\n                    options={generateOrnamentsOptions()}\n                    tagRender={OrnamentSetTagRenderer}\n                    placeholder=\"Planar Ornaments\"\n                    maxTagCount='responsive'>\n                  </Select>\n                </Form.Item>\n                <ConfigProvider\n                  theme={{\n                    components: {\n                      Cascader: {\n                        dropdownHeight: 625,\n                        controlItemWidth: 100,\n                        controlWidth: 100\n                      },\n                    },\n                  }}\n                >\n                  <Form.Item size=\"default\" name='relicSets'>\n                    <Cascader\n                      placeholder=\"Relics\"\n                      options={generateSetsOptions()}\n                      showCheckedStrategy={SHOW_CHILD}\n                      tagRender={RelicSetTagRenderer}\n                      placement='bottomLeft'\n                      maxTagCount='responsive'\n                      multiple={true}\n                      expandTrigger=\"hover\"\n                    />\n                  </Form.Item>\n                </ConfigProvider>\n              </Flex>\n\n              <Button\n                onClick={() => setConditionalSetEffectsDrawerOpen(true)}\n                icon={<SettingOutlined />}\n              >\n                Conditional set effects\n              </Button>\n            </FormCard>\n\n            <FormCard>\n              <Flex vertical gap={defaultGap}>\n                <Flex justify='space-between' align='center'>\n                  <HeaderText>Substat weight filter</HeaderText>\n                  <TooltipImage type={Hint.substatWeightFilter()} />\n                </Flex>\n\n                <Flex vertical gap={0}>\n                  <FormStatRollSlider text='HP' name={Constants.Stats.HP_P} />\n                  <FormStatRollSlider text='ATK' name={Constants.Stats.ATK_P} />\n                  <FormStatRollSlider text='DEF' name={Constants.Stats.DEF_P} />\n                  <FormStatRollSlider text='SPD' name={Constants.Stats.SPD} />\n                  <FormStatRollSlider text='CR' name={Constants.Stats.CR} />\n                  <FormStatRollSlider text='CD' name={Constants.Stats.CD} />\n                  <FormStatRollSlider text='EHR' name={Constants.Stats.EHR} />\n                  <FormStatRollSlider text='RES' name={Constants.Stats.RES} />\n                  <FormStatRollSlider text='BE' name={Constants.Stats.BE} />\n                </Flex>\n                <HorizontalDivider />\n                <Text>Top % of weighted relics</Text>\n                <FormStatRollSliderTopPercent />\n              </Flex>\n            </FormCard>\n\n            <FormCard>\n              <Flex justify='space-between' align='center'>\n                <HeaderText>Stat filters</HeaderText>\n                <TooltipImage type={Hint.statFilters()} />\n              </Flex>\n              <Flex vertical gap={5}>\n                <FilterRow name='Hp' label='HP' />\n                <FilterRow name='Atk' label='ATK' />\n                <FilterRow name='Def' label='DEF' />\n                <FilterRow name='Spd' label='SPD' />\n                <FilterRow name='Cr' label='CR' />\n                <FilterRow name='Cd' label='CD' />\n                <FilterRow name='Ehr' label='EHR' />\n                <FilterRow name='Res' label='RES' />\n                <FilterRow name='Be' label='BE' />\n              </Flex>\n            </FormCard>\n\n            <FormCard>\n              <Flex vertical gap={defaultGap}>\n                <Flex justify='space-between' align='center'>\n                  <HeaderText>Rating filters</HeaderText>\n                  <TooltipImage type={Hint.ratingFilters()} />\n                </Flex>\n\n                <FilterRow name='Cv' label='CV' />\n                <FilterRow name='Weight' label='WEIGHT' />\n                <FilterRow name='Ehp' label='EHP' />\n                <FilterRow name='Basic' label='BASIC' />\n                <FilterRow name='Skill' label='SKILL' />\n                <FilterRow name='Ult' label='ULT' />\n                <FilterRow name='Fua' label='FUA' />\n                <FilterRow name='Dot' label='DOT' />\n              </Flex>\n            </FormCard>\n\n            <FormCard>\n              <Flex vertical gap={defaultGap}>\n                <Flex justify='space-between' align='center'>\n                  <HeaderText>Combat buffs</HeaderText>\n                  <TooltipImage type={Hint.combatBuffs()} />\n                </Flex>\n\n                <Flex vertical gap={defaultGap}>\n                  <Flex justify='space-between'>\n                    <Text>\n                      ATK\n                    </Text>\n                    <Form.Item size=\"default\" name='buffAtk'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      ATK %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffAtkP'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      Crit Rate %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffCr'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      Crit Dmg %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffCd'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      SPD\n                    </Text>\n                    <Form.Item size=\"default\" name='buffSpd'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      SPD %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffSpdP'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      BE %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffBe'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      Dmg Boost %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffDmgBoost'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      Def Shred %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffDefShred'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      RES Pen %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffResPen'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </FormCard>\n          </FormRow>\n        </FilterContainer>\n      </Form>\n    </div>\n  )\n}\n","import { Flex, Image, Tooltip, } from 'antd';\nimport { CheckCircleFilled } from \"@ant-design/icons\";\nimport * as React from \"react\";\nimport { Constants } from \"./constants.ts\";\nimport { Assets } from \"./assets\";\nimport { Utils } from \"./utils\";\nimport PropTypes from \"prop-types\";\n\nexport const Renderer = {\n  floor: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    return Math.floor(x.value)\n  },\n\n  x100Tenths: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    return (x.value * 100).toFixed(1)\n  },\n\n  tenths: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    return (x.value).toFixed(1)\n  },\n\n  relicSet: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    let i = x.value\n\n    let count = Object.values(Constants.SetsRelics).length\n    let setImages = []\n\n    let s1 = i % count\n    let s2 = ((i - s1) / count) % count\n    let s3 = ((i - s2 * count - s1) / (count * count)) % count\n    let s4 = ((i - s3 * count * count - s2 * count - s1) / (count * count * count)) % count\n\n    let relicSets = [s1, s2, s3, s4]\n\n    while (relicSets.length > 0) {\n      let value = relicSets[0]\n      if (relicSets.lastIndexOf(value)) {\n        let setName = Object.entries(Constants.RelicSetToIndex).find(x => x[1] == value)[0]\n        let assetValue = Assets.getSetImage(setName, Constants.Parts.Head)\n        setImages.push(assetValue)\n\n        let otherIndex = relicSets.lastIndexOf(value)\n        relicSets.splice(otherIndex, 1)\n      }\n      relicSets.splice(0, 1)\n    }\n\n    return (\n      <Flex justify='center' style={{ marginTop: -1 }}>\n        <SetDisplay asset={setImages[0]} />\n        <SetDisplay asset={setImages[1]} />\n      </Flex>\n    )\n  },\n\n  ornamentSet: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    let i = x.value\n\n    let ornamentSetCount = Object.values(Constants.SetsOrnaments).length\n    let setImage\n\n    let s1 = i % ornamentSetCount;\n    let s2 = ((i - s1) / ornamentSetCount) % ornamentSetCount;\n\n    if (s1 == s2) {\n      let setName = Object.entries(Constants.OrnamentSetToIndex).find(x => x[1] == s1)[0]\n      setImage = Assets.getSetImage(setName, Constants.Parts.PlanarSphere)\n      return (\n        <Flex justify='center' style={{ marginTop: -1 }}>\n          <SetDisplay asset={setImage} />\n        </Flex>\n      )\n    } else {\n      return ''\n    }\n  },\n\n  anySet: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    let part = x.data.part\n\n    let src = Assets.getSetImage(x.data.set, part)\n    return (\n      <Flex justify='center' title={x.data.set} style={{ marginTop: -1 }}>\n        <SetDisplay asset={src} />\n      </Flex>\n    )\n  },\n\n  characterIcon: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    let equippedBy = x.data.equippedBy\n    if (!equippedBy) return ''\n\n    let src = Assets.getCharacterAvatarById(equippedBy)\n    return (\n      <Flex justify='center' style={{ marginTop: -1 }}>\n        <SetDisplay asset={src} />\n      </Flex>\n    )\n  },\n\n  readableStat: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    return Constants.StatsToReadable[x.value]\n  },\n\n  readablePart: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    return Constants.PartsToReadable[x.value]\n  },\n\n  hideZeroes: (x) => {\n    return x.value == 0 ? \"\" : x.value\n  },\n\n  hideZeroesFloor: (x) => {\n    return x.value == 0 ? \"\" : Math.floor(x.value)\n  },\n\n  hideZeroes10ths: (x) => {\n    return x.value == 0 ? \"\" : Utils.precisionRound(Math.floor(x.value * 10) / 10)\n  },\n\n  mainValueRenderer: (x) => {\n    let part = x.data.part\n    if (part == Constants.Parts.Hands || part == Constants.Parts.Head) {\n      return x.value == 0 ? \"\" : Math.floor(x.value)\n    }\n    return x.value == 0 ? \"\" : Utils.truncate10ths(x.value)\n  },\n\n  hideZeroesX100Tenths: (x) => {\n    return x.value == 0 ? \"\" : Renderer.x100Tenths(x)\n  },\n\n  scoreRenderer: (x) => {\n    return Math.round(x.value)\n  },\n\n  hideNaNAndRound: (x) => {\n    return isNaN(x.value) ? '' : Math.round(x.value)\n  },\n\n  renderSubstatNumber: (substat, relic) => {\n    if (substat.stat == Constants.Stats.SPD) {\n      if (relic.verified) {\n        return Utils.truncate10ths(substat.value).toFixed(1)\n      }\n      return Math.floor(substat.value)\n    }\n\n    return Utils.isFlat(substat.stat) ? Math.floor(substat.value) : Utils.truncate10ths(substat.value).toFixed(1)\n  },\n\n  renderMainStatNumber: (mainstat) => {\n    return Utils.isFlat(mainstat.stat) ? Math.floor(mainstat.value) : Utils.truncate10ths(mainstat.value).toFixed(1)\n  },\n\n  renderGradeCell: (x) => {\n    let relic = x.data\n    return Renderer.renderGrade(relic)\n  },\n  renderGrade: (relic) => {\n    let color = gradeToColor[relic.grade] || ''\n    return (\n      relic.verified\n        ?\n        <Tooltip mouseEnterDelay={0.4} title=\"Relic stats verified by relic scorer\"><CheckCircleFilled style={{ fontSize: '14px', color: color }} /></Tooltip>\n        : <div style={{ width: 14, height: 14, borderRadius: '50%', background: color }} />\n    )\n  },\n}\n\nlet gradeToColor = {\n  5: '#efb679',\n  4: '#cc52f1',\n  3: '#58beed',\n  2: '#63e0ac',\n}\n\nfunction SetDisplay(props) {\n  if (props.asset) {\n    return (\n      <Image src={props.asset} width={32} preview={false}>\n      </Image>\n    )\n  } else {\n    return ''\n  }\n}\nSetDisplay.propTypes = {\n  asset: PropTypes.string,\n}","import { Card, Divider, Flex, Typography } from 'antd';\nimport * as React from 'react';\nimport { Renderer } from \"../lib/renderer\";\nimport { Assets } from \"../lib/assets\";\nimport { Utils } from \"../lib/utils\";\nimport { Constants } from \"../lib/constants.ts\";\nimport DB from \"../lib/db\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nconst iconSize = 23\n\nfunction generateStat(stat, source, main, relic) {\n  if (!stat || !stat.stat || stat.value == null) {\n    return (\n      <Flex justify='space-between'>\n        <Flex>\n          <img src={Assets.getBlank()} style={{ width: iconSize, height: iconSize, marginRight: 3 }}></img>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  let displayValue\n  if (main) {\n    displayValue = Renderer.renderMainStatNumber(stat)\n  } else {\n    displayValue = Renderer.renderSubstatNumber(stat, relic)\n  }\n  displayValue += Utils.isFlat(stat.stat) ? '' : '%'\n\n  return (\n    <Flex justify='space-between'>\n      <Flex>\n        <img src={Assets.getStatIcon(stat.stat)} style={{ width: iconSize, height: iconSize, marginRight: 3 }}></img>\n        <Text>\n          {Constants.StatsToReadable[stat.stat]}\n        </Text>\n      </Flex>\n      <Text>\n        {displayValue}\n      </Text>\n    </Flex>\n  )\n}\n\nfunction getRelic(relic) {\n  if (!relic || !relic.id) {\n    return { substats: [] }\n  }\n\n  return DB.getRelicById(relic.id)\n}\n\nexport default function RelicPreview(props) {\n  // console.log('RelicPreview', props)\n  // const [hovered, setHovered] = React.useState(false);\n\n  let relic = getRelic(props.relic)\n  if (props.source == 'scorer') {\n    relic = props.relic\n  }\n\n  if (!relic) {\n    relic = {\n      enhance: 0,\n      part: undefined,\n      set: undefined,\n      grade: 0\n    }\n  }\n\n  let enhance = relic.enhance\n  let part = relic.part\n  let set = relic.set\n\n  let substats = relic.substats || []\n  let main = relic.main || {}\n  let relicSrc = set ? Assets.getSetImage(set, part) : Assets.getBlank()\n\n  let equippedBy = relic.equippedBy\n  let equippedBySrc = equippedBy ? Assets.getCharacterAvatarById(equippedBy) : Assets.getBlank()\n\n  let scored = props.relic != undefined && props.score != undefined\n\n  function relicClicked() {\n    console.log(relic, props)\n    if (!relic || !relic.part || !relic.set || props.source == 'scorer') return\n\n    window.setSelectedRelic(relic)\n    window.setEditModalOpen(true)\n  }\n\n  return (\n    <Card\n      size=\"small\"\n      hoverable={props.source != 'scorer'}\n      onClick={relicClicked}\n      style={{ width: 200, height: 280 }}\n    // onMouseEnter={() => setHovered(true)}\n    // onMouseLeave={() => setHovered(false)}\n    >\n      <Flex vertical justify='space-between' style={{ height: 255 }}>\n        <Flex justify='space-between' align='center'>\n          <img\n            style={{ height: 50, width: 50 }}\n            title={set}\n            src={relicSrc}\n          />\n          <Flex vertical align='center'>\n            <Flex align='center' gap={5}>\n              {Renderer.renderGrade(relic)}\n              <Flex style={{ width: 30 }} justify='space-around'>\n                <Text>\n                  {part != undefined ? `+${enhance}` : ''}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <img\n            style={{ height: 50, width: 50 }}\n            src={equippedBySrc}\n          />\n        </Flex>\n\n        <Divider style={{ margin: '6px 0px 6px 0px' }} />\n\n        {generateStat(main, props.source, true, relic)}\n\n        <Divider style={{ margin: '6px 0px 6px 0px' }} />\n\n        <Flex vertical gap={0}>\n          {generateStat(substats[0], props.source, false, relic)}\n          {generateStat(substats[1], props.source, false, relic)}\n          {generateStat(substats[2], props.source, false, relic)}\n          {generateStat(substats[3], props.source, false, relic)}\n        </Flex>\n\n        <Divider style={{ margin: '6px 0px 6px 0px' }} />\n\n        <Flex gap={4} justify='space-between'>\n          <Flex>\n            <img src={(scored) ? Assets.getStarBw() : Assets.getBlank()} style={{ width: iconSize, height: iconSize, marginRight: 3 }}></img>\n            <Text>\n              {(scored) ? 'Score' : ''}\n            </Text>\n          </Flex>\n          <Text>\n            {(scored) && `${props.score.score} (${props.score.rating})${props.score.meta.modified ? ' *' : ''}`}\n          </Text>\n        </Flex>\n      </Flex>\n    </Card>\n  );\n}\nRelicPreview.propTypes = {\n  relic: PropTypes.object,\n  source: PropTypes.string,\n  characterId: PropTypes.string,\n  score: PropTypes.object,\n}\n","import { Constants } from \"../lib/constants\";\nimport { Character } from \"../types/Character\";\n\nimport DB from \"./db.js\";\n\nconst minRollValue = 5.1 // Use truncated decimal instead of 5.184 because OCR'd results show truncated\nlet mainStatFreeRolls\n\nfunction setMainStatFreeRolls() {\n  if (!mainStatFreeRolls) {\n    mainStatFreeRolls = {\n      [Constants.Parts.Body]: {\n        [Constants.Stats.HP_P]: 1.32,\n        [Constants.Stats.ATK_P]: 1.284,\n        [Constants.Stats.DEF_P]: 1.305,\n        [Constants.Stats.CR]: 1.644,\n        [Constants.Stats.CD]: 1.658,\n        [Constants.Stats.OHB]: 1.712,\n        [Constants.Stats.EHR]: 1.668\n      },\n      [Constants.Parts.Feet]: {\n        [Constants.Stats.HP_P]: 1.058,\n        [Constants.Stats.ATK_P]: 1.019,\n        [Constants.Stats.DEF_P]: 1,\n        [Constants.Stats.SPD]: 1.567\n      },\n      [Constants.Parts.PlanarSphere]: {\n        [Constants.Stats.HP_P]: 1.583,\n        [Constants.Stats.ATK_P]: 1.559,\n        [Constants.Stats.DEF_P]: 1.587,\n        [Constants.Stats.Physical_DMG]: 1.763,\n        [Constants.Stats.Fire_DMG]: 1.763,\n        [Constants.Stats.Ice_DMG]: 1.763,\n        [Constants.Stats.Lightning_DMG]: 1.763,\n        [Constants.Stats.Wind_DMG]: 1.763,\n        [Constants.Stats.Quantum_DMG]: 1.763,\n        [Constants.Stats.Imaginary_DMG]: 1.763,\n      },\n      [Constants.Parts.LinkRope]: {\n        [Constants.Stats.HP_P]: 1.073,\n        [Constants.Stats.ATK_P]: 1.076,\n        [Constants.Stats.DEF_P]: 1.172,\n        [Constants.Stats.BE]: 1.416,\n        [Constants.Stats.ERR]: 2\n      }\n    }\n  }\n}\n\nconst ratingToRolls = {\n  'F': 1,\n  'D': 2,\n  'C': 3,\n  'B': 4,\n  'A': 5,\n  'S': 6,\n  'SS': 7,\n  'SSS': 8,\n  'WTF': 9,\n}\nconst ratings: { threshold: number, rating: string }[] = [];\nfor (const x of Object.entries(ratingToRolls)) {\n  ratings.push({\n    threshold: x[1],\n    rating: x[0]\n  })\n}\n\nfunction countPairs(arr) {\n  let pairs = 0;\n  const obj = {};\n  arr.forEach(i => {\n    if (obj[i]) {\n      pairs += 1;\n      obj[i] = 0;\n    } else {\n      obj[i] = 1;\n    }\n  });\n  return pairs;\n}\n\nexport const RelicScorer = {\n  scoreCharacterWithRelics: (character, relics) => {\n    if (!character || !character.id) return {}\n\n    const scoredRelics = relics.map(x => RelicScorer.score(x, character.id))\n\n    let sum = 0\n    for (const relic of scoredRelics) {\n      sum += Number(relic.score) + Number(relic.mainStatScore)\n    }\n\n    const missingSets = 3 - countPairs(relics.filter(x => x != undefined).map(x => x.set))\n    const deduction = missingSets * minRollValue * 3\n    console.log(`Missing sets ${missingSets} sets, deducting ${deduction} score`)\n    sum = Math.max(0, sum - deduction)\n\n    const base = 64.8 * 4\n    const avgSubstatScore = (sum - base) / 6\n\n    let rating = 'F'\n    for (let i = 0; i < ratings.length; i++) {\n      if (avgSubstatScore >= ratings[i].threshold * minRollValue) {\n        rating = ratings[i].rating\n        if (avgSubstatScore >= (ratings[i].threshold + 0.5) * (minRollValue)) {\n          rating += '+'\n        }\n      }\n    }\n\n    return {\n      relics: scoredRelics,\n      totalScore: sum,\n      totalRating: rating\n    }\n  },\n\n  scoreCharacter: (character: Character) => {\n    if (!character || !character.id) return {}\n\n    console.log('SCORE CHARACTER', character)\n    const relicsById = window.store.getState().relicsById\n    const relics = Object.values(character.equipped).map(x => relicsById[x])\n\n    return RelicScorer.scoreCharacterWithRelics(character, relics)\n  },\n\n  score: (relic, characterId) => {\n    // console.log('score', relic, characterId)\n\n    setMainStatFreeRolls()\n\n    if (!relic) {\n      return {\n        score: 0,\n        rating: 'N/A',\n        mainStatScore: 0\n      }\n    }\n\n    if (!characterId) {\n      if (relic.optimizerCharacterId) {\n        characterId = relic.optimizerCharacterId\n      } else if (relic.equippedBy) {\n        characterId = relic.equippedBy\n      } else {\n        console.log('no id found')\n        return {\n          score: 0,\n          rating: 'N/A',\n          mainStatScore: 0\n        }\n      }\n    }\n\n    const scaling = {\n      [Constants.Stats.HP_P]: 64.8 / 43.2,\n      [Constants.Stats.ATK_P]: 64.8 / 43.2,\n      [Constants.Stats.DEF_P]: 64.8 / 54,\n      [Constants.Stats.HP]: 1 / (DB.getMetadata().characters[characterId].promotions[80][Constants.Stats.HP] * 2 * 0.01) * (64.8 / 43.2),\n      [Constants.Stats.ATK]: 1 / (DB.getMetadata().characters[characterId].promotions[80][Constants.Stats.ATK] * 2 * 0.01) * (64.8 / 43.2),\n      [Constants.Stats.DEF]: 1 / (DB.getMetadata().characters[characterId].promotions[80][Constants.Stats.DEF] * 2 * 0.01) * (64.8 / 54),\n      [Constants.Stats.CR]: 64.8 / 32.4,\n      [Constants.Stats.CD]: 64.8 / 64.8,\n      [Constants.Stats.OHB]: 64.8 / 34.5,\n      [Constants.Stats.EHR]: 64.8 / 43.2,\n      [Constants.Stats.RES]: 64.8 / 43.2,\n      [Constants.Stats.SPD]: 64.8 / 25,\n      [Constants.Stats.BE]: 64.8 / 64.8,\n    }\n\n    const multipliers = DB.getScoringMetadata(characterId).stats\n\n    let sum = 0\n    for (const substat of relic.substats) {\n      substat.scoreMeta = {\n        multiplier: (multipliers[substat.stat] || 0),\n        score: substat.value * (multipliers[substat.stat] || 0) * scaling[substat.stat]\n      }\n      sum += substat.scoreMeta.score\n    }\n\n    if (relic.part == Constants.Parts.Body || relic.part == Constants.Parts.Feet || relic.part == Constants.Parts.PlanarSphere || relic.part == Constants.Parts.LinkRope) {\n      sum += mainStatFreeRolls[relic.part][relic.main.stat] * minRollValue\n    }\n\n    let rating = 'F'\n    for (let i = 0; i < ratings.length; i++) {\n      if (sum >= ratings[i].threshold * minRollValue) {\n        rating = ratings[i].rating\n        if (sum >= (ratings[i].threshold + 0.5) * (minRollValue)) {\n          rating += '+'\n        }\n      }\n    }\n\n    let mainStatScore = 0\n    const metaParts = DB.getScoringMetadata(characterId).parts\n    const max = 10.368 + 3.6288 * relic.grade * 3\n    if (metaParts[relic.part]) {\n      if (metaParts[relic.part].includes(relic.main.stat)) {\n        mainStatScore = max\n      } else {\n        mainStatScore = max * multipliers[relic.main.stat]\n      }\n    }\n\n    return {\n      score: sum.toFixed(1),\n      rating: rating,\n      mainStatScore: mainStatScore,\n      part: relic.part,\n      meta: DB.getScoringMetadata(characterId)\n    }\n  }\n}","import { Flex } from 'antd';\nimport * as React from 'react';\nimport RelicPreview from './RelicPreview';\nimport { RelicScorer } from '../lib/relicScorer.ts';\nimport DB from \"../lib/db\";\nimport { OptimizerTabController } from \"../lib/optimizerTabController\";\nimport PropTypes from \"prop-types\";\n\nexport default function OptimizerBuildPreview(props) {\n  console.log('OptimizerBuildPreview', props)\n\n  // TODO: Force update was a band-aid fix, revisit if we actually need to\n  const [, forceUpdate] = React.useReducer(o => !o, true);\n  window.forceOptimizerBuildPreviewUpdate = forceUpdate\n\n  let relicsById = DB.getRelicsById()\n  let characterId = OptimizerTabController.getForm().characterId\n\n  let headScore = props.build ? RelicScorer.score(relicsById[props.build?.Head], characterId) : undefined;\n  let handsScore = props.build ? RelicScorer.score(relicsById[props.build?.Hands], characterId) : undefined;\n  let bodyScore = props.build ? RelicScorer.score(relicsById[props.build?.Body], characterId) : undefined;\n  let feetScore = props.build ? RelicScorer.score(relicsById[props.build?.Feet], characterId) : undefined;\n  let planarSphereScore = props.build ? RelicScorer.score(relicsById[props.build?.PlanarSphere], characterId) : undefined;\n  let linkRopeScore = props.build ? RelicScorer.score(relicsById[props.build?.LinkRope], characterId) : undefined;\n\n  return (\n    <Flex gap={5} id=\"optimizerBuildPreviewContainer\">\n      <RelicPreview relic={relicsById[props.build?.Head]} score={headScore} />\n      <RelicPreview relic={relicsById[props.build?.Hands]} score={handsScore} />\n      <RelicPreview relic={relicsById[props.build?.Body]} score={bodyScore} />\n      <RelicPreview relic={relicsById[props.build?.Feet]} score={feetScore} />\n      <RelicPreview relic={relicsById[props.build?.PlanarSphere]} score={planarSphereScore} />\n      <RelicPreview relic={relicsById[props.build?.LinkRope]} score={linkRopeScore} />\n    </Flex>\n  );\n}\nOptimizerBuildPreview.propTypes = {\n  build: PropTypes.object,\n}\n","import { Button, Divider, Flex, Typography } from \"antd\";\nimport React from 'react';\nimport FormCard from \"./FormCard\";\nimport { HeaderText } from \"../HeaderText\";\nimport { TooltipImage } from \"../TooltipImage\";\nimport { OptimizerTabController } from \"../../lib/optimizerTabController\";\nimport { Hint } from \"../../lib/hint\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nfunction PermutationDisplay(props) {\n  let rightText = props.total\n    ? `${Number(props.right).toLocaleString()} / ${Number(props.total).toLocaleString()} - (${Math.ceil(Number(props.right) / Number(props.total) * 100)}%)`\n    : `${Number(props.right).toLocaleString()}`\n\n  return (\n    <Flex justify='space-between'>\n      <Text style={{ lineHeight: '24px' }}>\n        {props.left}\n      </Text>\n      <Divider style={{ margin: 'auto 10px', flexGrow: 1, width: 'unset', minWidth: 'unset' }} dashed />\n      <Text style={{ lineHeight: '24px' }}>\n        {rightText}\n      </Text>\n    </Flex>\n  )\n}\nPermutationDisplay.propTypes = {\n  total: PropTypes.number,\n  right: PropTypes.number,\n  left: PropTypes.string\n}\n\n\nlet defaultGap = 5\n\nexport default function Sidebar() {\n\n  const permutationDetails = window.store(s => s.permutationDetails)\n  const permutations = window.store(s => s.permutations)\n  const permutationsSearched = window.store(s => s.permutationsSearched)\n  const permutationsResults = window.store(s => s.permutationsResults)\n\n  return (\n    <Flex vertical style={{overflow: 'clip'}}>\n      <Flex style={{position: 'sticky', top: '50%', transform: 'translateY(-50%)', paddingLeft: 10}}>\n        <FormCard height={500}>\n          <Flex vertical gap={10}>\n            <Flex justify='space-between' align='center'>\n              <HeaderText>Permutations</HeaderText>\n              <TooltipImage type={Hint.optimizationDetails()} />\n            </Flex>\n\n            <Flex vertical>\n              <PermutationDisplay left='Head' right={permutationDetails.Head} total={permutationDetails.HeadTotal} />\n              <PermutationDisplay left='Hands' right={permutationDetails.Hands} total={permutationDetails.HandsTotal} />\n              <PermutationDisplay left='Body' right={permutationDetails.Body} total={permutationDetails.BodyTotal} />\n              <PermutationDisplay left='Feet' right={permutationDetails.Feet} total={permutationDetails.FeetTotal} />\n              <PermutationDisplay left='Rope' right={permutationDetails.LinkRope} total={permutationDetails.LinkRopeTotal} />\n              <PermutationDisplay left='Sphere' right={permutationDetails.PlanarSphere} total={permutationDetails.PlanarSphereTotal} />\n            </Flex>\n\n            <Flex vertical>\n              <PermutationDisplay left='Perms' right={permutations} />\n              <PermutationDisplay left='Searched' right={permutationsSearched} />\n              <PermutationDisplay left='Results' right={permutationsResults} />\n            </Flex>\n\n            <Flex justify='space-between' align='center' style={{marginTop: 10}}>\n              <HeaderText>Controls</HeaderText>\n              <TooltipImage type={Hint.actions()} />\n            </Flex>\n\n            <Flex gap={defaultGap} style={{ marginBottom: 2 }} vertical>\n              <Flex gap={defaultGap}>\n                <Button type=\"primary\" onClick={window.optimizerStartClicked} style={{ width: '205px' }} >\n                  Start\n                </Button>\n              </Flex>\n              <Flex gap={defaultGap}>\n                <Button onClick={window.optimizerCancelClicked} style={{ width: '100px' }} >\n                  Cancel\n                </Button>\n                <Button onClick={window.optimizerResetClicked} style={{ width: '100px' }} >\n                  Reset\n                </Button>\n              </Flex>\n              <Flex gap={defaultGap}>\n              </Flex>\n            </Flex>\n\n            <Flex justify='space-between' align='center' style={{marginTop: 10}}>\n              <HeaderText>Results</HeaderText>\n              {/*<TooltipImage type={Hint.actions()} />*/}\n            </Flex>\n            <Flex gap={defaultGap} justify='space-around'>\n              <Button onClick={window.optimizerFilterClicked} style={{ width: '100px' }} >\n                Filter\n              </Button>\n              <Button onClick={OptimizerTabController.equipClicked} style={{ width: '100px' }} >\n                Equip\n              </Button>\n            </Flex>\n          </Flex>\n        </FormCard>\n      </Flex>\n    </Flex>\n  )\n}","import tinygradient from 'tinygradient';\nimport { Constants } from \"./constants.ts\";\nimport { OptimizerTabController } from \"./optimizerTabController\";\n\nlet optimizerGridGradient = tinygradient([\n  { color: '#5A1A06', pos: 0 }, // red\n  { color: '#343127', pos: 0.35 },\n  { color: '#38821F', pos: 1 } // green\n]);\nlet relicGridGradient = tinygradient('#343127', '#38821F')\nlet relicColumnRanges\n\nexport const Gradient = {\n  getColor: (decimal, gradient) => {\n    return gradient.rgbAt(decimal).toHexString();\n  },\n\n  getOptimizerColumnGradient: (params) => {\n    let aggs = OptimizerTabController.getAggs()\n\n    try {\n      let colId = params.column.colId\n\n      if (params.data && aggs && OptimizerTabController.getColumnsToAggregate(true)[colId]) {\n        let min = aggs.minAgg[colId]\n        let max = aggs.maxAgg[colId]\n        let value = params.value\n\n        let range = (value - min) / (max - min);\n        if (max == min) {\n          range = 0.5\n        }\n        // console.log(min, max, value, range);\n\n        let color = Gradient.getColor(Math.min(Math.max(range, 0), 1), optimizerGridGradient)\n        return {\n          backgroundColor: color\n        };\n      }\n    } catch (e) { console.error(e) }\n  },\n\n  getRelicGradient(params) {\n    let col = params.column.colId\n    let value = params.value\n    if (!relicColumnRanges) {\n      // Not maxes, just for visual representation of gradient. Calculated by low roll x 5\n      relicColumnRanges = {\n        [`augmentedStats.${Constants.Stats.HP}`]: 169.35,\n        [`augmentedStats.${Constants.Stats.ATK}`]: 84.675,\n        [`augmentedStats.${Constants.Stats.DEF}`]: 84.675,\n        [`augmentedStats.${Constants.Stats.SPD}`]: 10,\n        [`augmentedStats.${Constants.Stats.ATK_P}`]: 0.1728,\n        [`augmentedStats.${Constants.Stats.HP_P}`]: 0.1728,\n        [`augmentedStats.${Constants.Stats.DEF_P}`]: 0.216,\n        [`augmentedStats.${Constants.Stats.CR}`]: 0.1296,\n        [`augmentedStats.${Constants.Stats.CD}`]: 0.2592,\n        [`augmentedStats.${Constants.Stats.EHR}`]: 0.1728,\n        [`augmentedStats.${Constants.Stats.RES}`]: 0.1728,\n        [`augmentedStats.${Constants.Stats.BE}`]: 0.2592,\n        'cs': 35,\n        'ss': 35,\n        'ds': 35,\n        'relicsTabWeight': 64.8,\n        'bestCaseWeight': 64.8,\n        'averageCaseWeight': 64.8,\n      }\n    }\n\n    if (value == 0) {\n      return {}\n    }\n\n    let range\n    if (col == 'relicsTabWeight' || col == 'bestCaseWeight' || col == 'averageCaseWeight') {\n      range = Math.max(0, value - 64.8) / relicColumnRanges[col]\n    } else {\n      range = value / relicColumnRanges[col]\n    }\n\n    let color = Gradient.getColor(Math.min(Math.max(range, 0), 1), relicGridGradient)\n\n    return {\n      backgroundColor: color\n    };\n  }\n}","import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport OptimizerForm from './OptimizerForm'\nimport { Flex, } from 'antd';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport { OptimizerTabController } from '../lib/optimizerTabController';\nimport OptimizerBuildPreview from './OptimizerBuildPreview';\nimport \"../style/style.css\";\nimport { Renderer } from '../lib/renderer';\nimport Sidebar from \"./optimizerTab/Sidebar\";\nimport PropTypes from \"prop-types\";\nimport { Constants } from \"../lib/constants.ts\";\nimport { Gradient } from \"../lib/gradient\";\n\nexport default function OptimizerTab(props) {\n  console.log('OptimizerTab', props)\n  const optimizerGrid = useRef();\n  window.optimizerGrid = optimizerGrid;\n\n  const [optimizerBuild, setOptimizerBuild] = useState();\n  window.setOptimizerBuild = setOptimizerBuild;\n\n  const cellClickedListener = useCallback(event => {\n    OptimizerTabController.cellClicked(event)\n  }, []);\n\n  const DIGITS_4 = 50;\n  const DIGITS_5 = 60;\n\n  const statDisplay = window.store(s => s.statDisplay)\n\n  let baseColumnDefs = [\n    { field: 'relicSetIndex', cellRenderer: Renderer.relicSet, width: 70, headerName: 'Set' },\n    { field: 'ornamentSetIndex', cellRenderer: Renderer.ornamentSet, width: 50, headerName: 'Set' },\n\n    { field: Constants.Stats.ATK, valueFormatter: Renderer.floor, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.DEF, valueFormatter: Renderer.floor, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.HP, valueFormatter: Renderer.floor, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.SPD, valueFormatter: Renderer.tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.CR, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'CR', cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.CD, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'CD', cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.EHR, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'EHR', cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.RES, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'RES', cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.BE, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'BE', cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.ERR, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'ERR' },\n    { field: Constants.Stats.OHB, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'HEAL' },\n\n    { field: 'ED', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'ELEM' },\n    { field: 'CV', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'CV' },\n    { field: 'EHP', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'EHP' },\n    { field: 'WEIGHT', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'WEIGHT' },\n\n    { field: 'BASIC', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'BASIC' },\n    { field: 'SKILL', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'SKILL' },\n    { field: 'ULT', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'ULT' },\n    { field: 'FUA', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'FUA' },\n    { field: 'DOT', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'DOT' },\n  ]\n\n  let combatColumnDefs = [\n    { field: 'relicSetIndex', cellRenderer: Renderer.relicSet, width: 70, headerName: 'Set' },\n    { field: 'ornamentSetIndex', cellRenderer: Renderer.ornamentSet, width: 50, headerName: 'Set' },\n\n    { field: 'xATK', valueFormatter: Renderer.floor, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ ATK' },\n    { field: 'xDEF', valueFormatter: Renderer.floor, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ DEF' },\n    { field: 'xHP', valueFormatter: Renderer.floor, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ HP' },\n    { field: 'xSPD', valueFormatter: Renderer.tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ SPD' },\n    { field: 'xCR', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ CR' },\n    { field: 'xCD', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ CD' },\n    { field: 'xEHR', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ EHR' },\n    { field: 'xRES', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ RES' },\n    { field: 'xBE', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ BE' },\n    { field: 'xERR', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'Σ ERR' },\n    { field: 'xOHB', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'Σ HEAL' },\n\n    { field: 'xELEMENTAL_DMG', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'Σ ELEM' },\n    { field: 'CV', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'CV' },\n    { field: 'EHP', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'EHP' },\n    { field: 'WEIGHT', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'WEIGHT' },\n\n    { field: 'BASIC', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'BASIC' },\n    { field: 'SKILL', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'SKILL' },\n    { field: 'ULT', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'ULT' },\n    { field: 'FUA', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'FUA' },\n    { field: 'DOT', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'DOT' },\n  ]\n\n  const columnDefs = useMemo(() => statDisplay == 'combat' ? combatColumnDefs : baseColumnDefs, [statDisplay]);\n\n  const datasource = useMemo(() => {\n    return OptimizerTabController.getDataSource();\n  }, []);\n\n  const gridOptions = useMemo(() => ({\n    rowHeight: 33,\n    pagination: true,\n    rowSelection: 'single',\n    rowModelType: 'infinite',\n    datasource: datasource,\n    paginationPageSize: 500,\n    paginationPageSizeSelector: [100, 500, 1000],\n    cacheBlockSize: 500,\n    suppressDragLeaveHidesColumns: true,\n    suppressScrollOnNewData: true,\n    suppressCellFocus: true\n  }), []);\n\n  const defaultColDef = useMemo(() => ({\n    cellStyle: Gradient.getOptimizerColumnGradient,\n    sortable: true,\n    sortingOrder: ['desc', 'asc']\n  }), []);\n\n  return (\n    <div style={{ display: props.active ? 'block' : 'none' }}>\n      <Flex style={{ marginBottom: 10 }}>\n        <Flex vertical gap={10}>\n          <OptimizerForm />\n\n          <Flex>\n            <div id=\"optimizerGridContainer\" className=\"ag-theme-balham-dark\" style={{ width: 1225, minHeight: 300, height: 600, resize: 'vertical', overflow: 'hidden' }}>\n              <AgGridReact\n                ref={optimizerGrid}\n\n                gridOptions={gridOptions}\n\n                columnDefs={columnDefs}\n                defaultColDef={defaultColDef}\n\n                animateRows={false}\n                rowSelection='single'\n                headerHeight={24}\n\n                onCellClicked={cellClickedListener}\n              />\n            </div>\n          </Flex>\n\n          <OptimizerBuildPreview build={optimizerBuild} />\n        </Flex>\n\n        <Sidebar />\n      </Flex>\n    </div>\n  );\n}\nOptimizerTab.propTypes = {\n  active: PropTypes.bool,\n}\n","import stringSimilarity from 'string-similarity';\nimport { Parts, Sets, Stats } from './constants.ts';\nimport { RelicAugmenter } from './relicAugmenter';\n\nexport const OcrParserFribbels1 = {\n  parse: (json) => {\n    let relics = json.relics;\n\n    let parsedRelics = []\n    for (let relic of relics) {\n      // console.log(relic)\n      let result = readRelic(relic);\n      let output = RelicAugmenter.augment(result)\n\n      // Temporarily skip broken imports\n      if (output) {\n        parsedRelics.push(result);\n      }\n      // console.log(result);\n    }\n\n    return parsedRelics\n  }\n}\n\nfunction readRelic(relic) {\n  let partMatches = stringSimilarity.findBestMatch(relic.part, Object.values(Parts));\n  // console.log('partMatches', partMatches);\n  let part = partMatches.bestMatch.target\n\n  let setMatches = stringSimilarity.findBestMatch(lowerAlphaNumeric(relic.set), relicSetList.map(x => x[1]))\n  // console.log('setMatches', setMatches, setMatches.bestMatchIndex);\n  let set = relicSetList[setMatches.bestMatchIndex][2];\n  // console.log('set', set);\n\n  let enhance = Math.min(Math.max(parseInt(relic.enhance), 0), 15);\n  let grade = Math.min(Math.max(parseInt(relic.grade), 2), 5);\n\n  let parsedStats = readStats(relic);\n  // console.log(parsedStats);\n\n  return {\n    part: part,\n    set: set,\n    enhance: enhance,\n    grade: grade,\n    main: parsedStats.main,\n    substats: parsedStats.substats\n  }\n}\n\nfunction readStats(relic) {\n  let stats = relic.stats\n  let main\n  let substats = []\n  for (let stat of stats) {\n    let rest = stat.substring(0, stat.lastIndexOf(' ') + 1).trim();\n    let last = stat.substring(stat.lastIndexOf(' ') + 1, stat.length).trim();\n\n    let percent = last.includes('%');\n    let value = parseFloat(last);\n\n    let statMatches = stringSimilarity.findBestMatch(lowerAlphaNumeric(rest), statList.map(x => lowerAlphaNumericPercent(x[1])))\n    let statResult = statList[statMatches.bestMatchIndex][1];\n\n    if (statResult == Stats.ATK_P && !percent) statResult = Stats.ATK;\n    if (statResult == Stats.ATK && percent) statResult = Stats.ATK_P;\n\n    if (statResult == Stats.HP_P && !percent) statResult = Stats.HP;\n    if (statResult == Stats.HP && percent) statResult = Stats.HP_P;\n\n    if (statResult == Stats.DEF_P && !percent) statResult = Stats.DEF;\n    if (statResult == Stats.DEF && percent) statResult = Stats.DEF_P;\n\n    let parsedStat = {\n      stat: statResult,\n      value: value\n    }\n\n    // TODO not sure if accurate anymore - check on its decimals\n    if (!main) {\n      main = fixMainStat(parsedStat, relic)\n    } else {\n      substats.push(parsedStat);\n    }\n  }\n  return {\n    main,\n    substats\n  }\n}\n\nlet relicSetList = Object.entries(Sets)\nfor (let set of relicSetList) {\n  set[2] = set[1]\n  set[1] = lowerAlphaNumeric(set[1])\n}\n\n\nlet statList = Object.entries(Stats)\n\nfunction lowerAlphaNumeric(str) {\n  return str.toLowerCase().replace(/[^a-zA-Z0-9]/g, '')\n}\nfunction lowerAlphaNumericPercent(str) {\n  return str.toLowerCase().replace(/[^a-zA-Z0-9%]/g, '')\n}\n\nfunction fixMainStat(parsedStat) {\n  return parsedStat\n}\n\n\n\n// TODO these don't account for 4th decimal scaling\n// function generateMainStatsByLevelAndRank() {\n//   return {\n//     [Constants.Stats.SPD]: generateFromBaseLevel([1.613,2.419,3.226,4.032], [1.000,1.000,1.100,1.400]),\n//     [Constants.Stats.HP]: generateFromBaseLevel([45.158,67.738,90.317,112.896], [15.805,23.708,31.611,39.514]),\n//     [Constants.Stats.ATK]: generateFromBaseLevel([22.579,33.869,45.158,56.448], [7.903,11.854,15.805,19.757]),\n//     [Constants.Stats.HP_P]: generateFromBaseLevel([2.765,4.147,5.530,6.912], [0.968,1.451,1.935,2.419]),\n//     [Constants.Stats.ATK_P]: generateFromBaseLevel([2.765,4.147,5.530,6.912], [0.968,1.451,1.935,2.419]),\n//     [Constants.Stats.DEF_P]: generateFromBaseLevel([3.456,5.184,6.912,8.640], [1.210,1.814,2.419,3.024]),\n//     [Constants.Stats.CR]: generateFromBaseLevel([2.074,3.110,4.147,5.184], [0.726,1.089,1.451,1.814]),\n//     [Constants.Stats.CD]: generateFromBaseLevel([4.147,6.221,8.294,10.368], [1.451,2.177,2.903,3.629]),\n//     [Constants.Stats.OHB]: generateFromBaseLevel([2.212,3.318,4.424,5.530], [0.774,1.161,1.548,1.935]),\n//     [Constants.Stats.EHR]: generateFromBaseLevel([2.765,4.147,5.530,6.912], [0.968,1.451,1.935,2.419]),\n//     [Constants.Stats.BE]: generateFromBaseLevel([4.147,6.221,8.294,10.368], [1.451,2.177,2.903,3.629]),\n//     [Constants.Stats.ERR]: generateFromBaseLevel([1.244,1.866,2.488,3.110], [0.436,0.653,0.871,1.089]),\n//     [Constants.Stats.Physical_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//     [Constants.Stats.Fire_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//     [Constants.Stats.Ice_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//     [Constants.Stats.Lightning_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//     [Constants.Stats.Wind_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//     [Constants.Stats.Quantum_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//     [Constants.Stats.Imaginary_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//   }\n// }\n\n// function generateFromBaseLevel(bases, levels) {\n//   let valuesByGrade = {}\n//   for (let i = 2; i <= 5; i++) {\n//     valuesByGrade[i] = []\n//     for (let j = 0; j <= 15; j++) {\n//       valuesByGrade[i][j] = bases[i-2] + levels[i-2] * j\n//     }\n//   }\n//   return valuesByGrade\n// }","import stringSimilarity from 'string-similarity';\nimport { Constants, Parts, Sets } from './constants.ts';\nimport { RelicAugmenter } from './relicAugmenter';\n\nimport characters from '../data/characters.json';\nimport lightCones from '../data/light_cones.json';\nimport DB from \"./db\";\nimport { Utils } from \"./utils\";\nimport { Message } from \"./message\";\n\nlet substatMapping;\nlet mainstatMapping;\nlet partMapping;\nlet affixMapping;\nlet metadata\n\nconst formTemplate = {\n  \"characterId\": \"1204\",\n  \"characterLevel\": 80,\n  \"characterEidolon\": 0,\n  \"lightCone\": \"23010\",\n  \"lightConeLevel\": 80,\n  \"lightConeSuperimposition\": 1,\n}\n\nexport const OcrParserKelz3 = {\n  parse: (json) => {\n    OcrParserKelz3.initialize()\n    let relics = json.relics;\n\n    let parsedRelics = []\n    for (let relic of relics) {\n      let result = readRelic(relic);\n      let output = RelicAugmenter.augment(result)\n\n      // Temporarily skip broken imports\n      if (output) {\n        parsedRelics.push(result);\n      }\n      // console.log(result);\n    }\n\n    return parsedRelics\n  },\n\n  parseCharacters: (json) => {\n    OcrParserKelz3.initialize()\n    let characters = json.characters;\n    if (!characters) {\n      return []\n    }\n\n    let parsedCharacters = []\n    for (let character of characters) {\n      let lightCone = undefined\n      if (json.light_cones) {\n        // Find their light cone\n        lightCone = json.light_cones.find(x => x.location == character.key)\n      }\n\n      try {\n        let result = readCharacter(character, lightCone);\n        parsedCharacters.push(result);\n      } catch (e) {\n        Message.warning(`Error reading a character [${character?.key}], try running the scanner again with a dark background to improve scan accuracy`, 10)\n      }\n    }\n\n    return parsedCharacters\n  },\n\n  initialize: () => {\n    if (!substatMapping) {\n      metadata = DB.getMetadata().relics\n      substatMapping = {\n        'ATK': Constants.Stats.ATK,\n        'HP': Constants.Stats.HP,\n        'DEF': Constants.Stats.DEF,\n        'ATK_': Constants.Stats.ATK_P,\n        'HP_': Constants.Stats.HP_P,\n        'DEF_': Constants.Stats.DEF_P,\n        'SPD': Constants.Stats.SPD,\n        'CRIT Rate_': Constants.Stats.CR,\n        'CRIT DMG_': Constants.Stats.CD,\n        'Effect Hit Rate_': Constants.Stats.EHR,\n        'Effect RES_': Constants.Stats.RES,\n        'Break Effect_': Constants.Stats.BE,\n      }\n\n      mainstatMapping = {\n        'ATK': Constants.Stats.ATK_P,\n        'HP': Constants.Stats.HP_P,\n        'DEF': Constants.Stats.DEF_P,\n        'SPD': Constants.Stats.SPD,\n        'CRIT Rate': Constants.Stats.CR,\n        'CRIT DMG': Constants.Stats.CD,\n        'Effect Hit Rate': Constants.Stats.EHR,\n        'Break Effect': Constants.Stats.BE,\n        'Energy Regeneration Rate': Constants.Stats.ERR,\n        'Outgoing Healing Boost': Constants.Stats.OHB,\n        'Physical DMG Boost': Constants.Stats.Physical_DMG,\n        'Fire DMG Boost': Constants.Stats.Fire_DMG,\n        'Ice DMG Boost': Constants.Stats.Ice_DMG,\n        'Lightning DMG Boost': Constants.Stats.Lightning_DMG,\n        'Wind DMG Boost': Constants.Stats.Wind_DMG,\n        'Quantum DMG Boost': Constants.Stats.Quantum_DMG,\n        'Imaginary DMG Boost': Constants.Stats.Imaginary_DMG,\n      }\n\n      partMapping = {\n        [Constants.Parts.Head]: 1,\n        [Constants.Parts.Hands]: 2,\n        [Constants.Parts.Body]: 3,\n        [Constants.Parts.Feet]: 4,\n        [Constants.Parts.PlanarSphere]: 5,\n        [Constants.Parts.LinkRope]: 6,\n      }\n\n      affixMapping = {\n        [Constants.Stats.HP_P]: 'HPAddedRatio',\n        [Constants.Stats.ATK_P]: 'AttackAddedRatio',\n        [Constants.Stats.DEF_P]: 'DefenceAddedRatio',\n        [Constants.Stats.HP]: 'HPDelta',\n        [Constants.Stats.ATK]: 'AttackDelta',\n        [Constants.Stats.DEF]: 'DefenceDelta',\n        [Constants.Stats.SPD]: 'SpeedDelta',\n        [Constants.Stats.CD]: 'CriticalDamageBase',\n        [Constants.Stats.CR]: 'CriticalChanceBase',\n        [Constants.Stats.EHR]: 'StatusProbabilityBase',\n        [Constants.Stats.RES]: 'StatusResistanceBase',\n        [Constants.Stats.BE]: 'BreakDamageAddedRatioBase',\n        [Constants.Stats.ERR]: 'SPRatioBase',\n        [Constants.Stats.OHB]: 'HealRatioBase',\n        [Constants.Stats.Physical_DMG]: 'PhysicalAddedRatio',\n        [Constants.Stats.Fire_DMG]: 'FireAddedRatio',\n        [Constants.Stats.Ice_DMG]: 'IceAddedRatio',\n        [Constants.Stats.Lightning_DMG]: 'ThunderAddedRatio',\n        [Constants.Stats.Wind_DMG]: 'WindAddedRatio',\n        [Constants.Stats.Quantum_DMG]: 'QuantumAddedRatio',\n        [Constants.Stats.Imaginary_DMG]: 'ImaginaryAddedRatio',\n      }\n    }\n  }\n}\n\nconst characterList = Object.values(characters)\nconst lightConeList = Object.values(lightCones)\n\nfunction readCharacter(character, lightCone) {\n  const newCharacter = { ...formTemplate }\n  lightCone = lightCone || undefined\n\n  // Lookup character & light cone ids\n  let characterId\n  if (character.key.startsWith(\"Trailblazer\")) {\n    if (character.key == \"TrailblazerPreservation\") {\n      characterId = characterList.find(x => x.tag == \"playergirl2\").id\n    } else {\n      characterId = characterList.find(x => x.tag == \"playergirl\").id\n    }\n  } else {\n    characterId = characterList.find(x => x.name == character.key).id\n  }\n\n  let lcKey = lightCone?.key\n  const lightConeId = lightConeList.find(x => x.name == lcKey)?.id\n\n  // Set information\n  newCharacter.characterId = characterId\n  newCharacter.characterLevel = character.level\n  newCharacter.characterEidolon = character.eidolon\n  newCharacter.lightCone = lightConeId\n  newCharacter.lightConeLevel = lightCone?.level || 0\n  newCharacter.lightConeSuperimposition = lightCone?.superimposition || 0\n\n  return newCharacter\n}\n\nfunction readRelic(relic) {\n  let partMatches = stringSimilarity.findBestMatch(relic.slot, Object.values(Parts));\n  // console.log('partMatches', partMatches);\n  let part = partMatches.bestMatch.target\n\n  let setMatches = stringSimilarity.findBestMatch(lowerAlphaNumeric(relic.set), relicSetList.map(x => x[1]))\n  let set = relicSetList[setMatches.bestMatchIndex][2];\n\n  let enhance = Math.min(Math.max(parseInt(relic.level), 0), 15);\n  let grade = Math.min(Math.max(parseInt(relic.rarity), 2), 5);\n\n  let parsedStats = readStats(relic, part, grade, enhance);\n\n  let id\n  if (characterList.find(x => x.name == relic.location)) {\n    id = characterList.find(x => x.name == relic.location).id\n  } else {\n    if (relic.location == 'TrailblazerPreservation' && window.store.getState().charactersById[8003]) {\n      id = 8003\n    } else {\n      id = 8004\n    }\n\n    if (relic.location == 'TrailblazerDestruction' && window.store.getState().charactersById[8001]) {\n      id = 8001\n    } else {\n      id = 8002\n    }\n  }\n\n  return {\n    part: part,\n    set: set,\n    enhance: enhance,\n    grade: grade,\n    main: parsedStats.main,\n    substats: parsedStats.substats,\n    equippedBy: relic.location === \"\" ? undefined : id,\n  }\n}\n\nfunction readStats(relic, part, grade, enhance) {\n  let rawSubstats = relic.substats\n  let parsedSubstats = []\n\n  for (let substat of rawSubstats) {\n    let mappedStat = substatMapping[substat.key]\n    let value = substat.value\n\n    parsedSubstats.push({\n      stat: mappedStat,\n      value: value\n    })\n  }\n\n  let rawMainstat = relic.mainstat\n  let parsedMainStat\n  let main\n\n  // console.log(relic, parsedSubstats, rawMainstat);\n\n  if (part == 'Hands') {\n    parsedMainStat = Constants.Stats.ATK\n  } else if (part == 'Head') {\n    parsedMainStat = Constants.Stats.HP\n  } else {\n    parsedMainStat = mainstatMapping[rawMainstat]\n  }\n\n  let partId = partMapping[part]\n  let mainId = affixMapping[parsedMainStat]\n  let query = `${grade}${partId}`\n  let affixMetadata = metadata.relicMainAffixes[query]\n  let mainData = Object.values(affixMetadata.affixes).find(x => x.property == mainId)\n  let mainBase = mainData.base\n  let mainStep = mainData.step\n  let mainValue = mainBase + mainStep * enhance\n  main = {\n    stat: parsedMainStat,\n    value: Utils.truncate10000ths(mainValue * (Utils.isFlat(parsedMainStat) ? 1 : 100))\n  }\n\n  return {\n    main,\n    substats: parsedSubstats\n  }\n}\n\nlet relicSetList = Object.entries(Sets)\nfor (let set of relicSetList) {\n  set[2] = set[1]\n  set[1] = lowerAlphaNumeric(set[1])\n}\n\n\nfunction lowerAlphaNumeric(str) {\n  return str.toLowerCase().replace(/[^a-zA-Z0-9]/g, '')\n}","import React, { useState } from 'react';\nimport { DownloadOutlined, UploadOutlined } from '@ant-design/icons';\nimport { Button, Divider, Flex, Popconfirm, Steps, Tabs, Typography, Upload } from 'antd';\nimport { OcrParserFribbels1 } from '../lib/ocrParserFribbels1';\nimport { OcrParserKelz3 } from '../lib/ocrParserKelz3';\nimport { Message } from '../lib/message';\nimport { DB } from '../lib/db';\nimport { SaveState } from \"../lib/saveState\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nconst spinnerMs = 500\n\n// https://web.dev/patterns/files/save-a-file\nconst saveFile = async (blob, suggestedName) => {\n  // Feature detection. The API needs to be supported\n  // and the app not run in an iframe.\n  const supportsFileSystemAccess =\n    'showSaveFilePicker' in window &&\n    (() => {\n      try {\n        return window.self === window.top;\n      } catch {\n        return false;\n      }\n    })();\n  // If the File System Access API is supported…\n  if (supportsFileSystemAccess) {\n    try {\n      // Show the file save dialog.\n      const handle = await window.showSaveFilePicker({\n        suggestedName,\n        types: [{\n          description: 'JSON',\n          accept: { 'text/json': ['.json'] },\n        }],\n      });\n      // Write the blob to the file.\n      const writable = await handle.createWritable();\n      await writable.write(blob);\n      await writable.close();\n\n    } catch (err) {\n      console.warn(err.name, err.message);\n\n    }\n  } else {\n    // Fallback if the File System Access API is not supported…\n    // Create the blob URL.\n    const blobURL = URL.createObjectURL(blob);\n    // Create the `<a download>` element and append it invisibly.\n    const a = document.createElement('a');\n    a.href = blobURL;\n    a.download = suggestedName;\n    a.style.display = 'none';\n    document.body.append(a);\n    // Programmatically click the element.\n    a.click();\n    // Revoke the blob URL and remove the element.\n    setTimeout(() => {\n      URL.revokeObjectURL(blobURL);\n      a.remove();\n    }, 1000);\n  }\n};\n\nfunction saveDataTab() {\n  async function saveClicked() {\n    try {\n      let stateString = SaveState.save()\n  \n      const blob = new Blob(\n        [ stateString ], \n        { type: 'text/json;charset=utf-8' }\n      )\n  \n      await saveFile(blob, 'fribbels-optimizer-save.json')\n      \n      Message.success('Saved data')\n    } catch (e) {\n      console.warn(e)\n    }\n  }\n\n  return (\n    <Flex vertical gap={5}>\n      <Text>\n        Save your optimizer data to a file.\n      </Text>\n      <Button type=\"primary\" onClick={saveClicked} icon={<DownloadOutlined />} style={{width: 200}}>\n        Save data\n      </Button>\n    </Flex>\n  )\n}\n\nfunction clearDataTab() {\n  const [loading, setLoading] = useState(false);\n\n  function clearDataClicked() {\n    console.log('Clear data')\n    setLoading(true)\n    setTimeout(() => {\n      setLoading(false)\n      DB.resetStore()\n\n      Message.success('Cleared data')\n    }, spinnerMs);\n  }\n  \n  return (\n    <Flex vertical gap={5}>\n      <Text>\n        Clear all optimizer data.\n      </Text>\n      <Popconfirm\n        title=\"Erase all data\"\n        description=\"Are you sure you want to clear all relics and characters?\"\n        onConfirm={clearDataClicked}\n        placement=\"bottom\"\n        okText=\"Yes\"\n        cancelText=\"Cancel\"\n      >\n        <Button type=\"primary\" loading={loading} style={{width: 200}}>\n          Clear data\n        </Button>\n      </Popconfirm>\n    </Flex>\n  )\n}\n\nfunction loadDataTab() {\n  const [current, setCurrent] = useState(0);\n  const [currentSave, setCurrentSave] = useState([]);\n  const [loading1, setLoading1] = useState(false);\n  const [loading2, setLoading2] = useState(false);\n  \n  const onStepChange = (value) => {\n    console.log('onStepChange:', value);\n    setCurrent(value);\n  };\n\n  function beforeUpload(file) {\n    return new Promise(() => {\n      const reader = new FileReader();\n      reader.readAsText(file);\n      reader.onload = () => {\n        let fileUploadText = reader.result;\n        console.log('Uploaded file', fileUploadText);\n\n\n        let json = JSON.parse(fileUploadText)\n        console.log('Parsed json', json);\n\n\n        if (json.fileType || json.source) {\n          setLoading1(true)\n\n          setTimeout(() => {\n            setLoading1(false)\n            setCurrentSave(undefined)\n            onStepChange(1)\n          }, spinnerMs);\n          return\n        }\n\n        setLoading1(true)\n        \n        setTimeout(() => {\n          setLoading1(false)\n          setCurrentSave(json)\n          onStepChange(1)\n        }, spinnerMs);\n      };\n      return false;\n    });\n  }\n\n  function onUploadClick() {\n    onStepChange(0)\n  }\n\n  function loadConfirmed() {\n    setLoading2(true)\n    setTimeout(() => {\n      setLoading2(false)\n      DB.setStore(currentSave)\n      onStepChange(2)\n    }, spinnerMs);\n  }\n\n  function loadDataContentUploadFile() {\n    return (\n      <Flex style={{minHeight: 100}}>\n        <Flex vertical gap={10}>\n          <Text>\n            Load your optimizer data from a file.\n          </Text>\n          <Upload\n            accept=\".json\"\n            name= 'file'\n            onClick={onUploadClick}\n            beforeUpload={beforeUpload}>\n            <Button style={{width: 200}} icon={<UploadOutlined />} loading={loading1}>\n              Load save data\n            </Button>\n          </Upload>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  function confirmLoadData() {\n    if (!currentSave || !currentSave.relics || !currentSave.characters) {\n      return (\n        <Flex style={{minHeight: 100}}>\n          <Flex vertical gap={10} style={{display: current >= 1 ? 'flex' : 'none'}}>\n            Invalid save file, please try a different file. Did you mean to use Relic Importer tab?\n          </Flex>\n        </Flex>\n      )\n    }\n    return (\n      <Flex style={{minHeight: 100}}>\n        <Flex vertical gap={10} style={{display: current >= 1 ? 'flex' : 'none'}}>\n          <Text>\n            File contains {currentSave.relics.length} relics and {currentSave.characters.length} characters. Replace your current data with the uploaded data?\n          </Text>\n          <Button style={{width: 200}} type=\"primary\" onClick={loadConfirmed} loading={loading2}>\n            Use Uploaded Data\n          </Button>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  function loadCompleted() {\n    return (\n      <Flex style={{minHeight: 100}}>\n        <Flex vertical gap={10} style={{display: current >= 2 ? 'flex' : 'none'}}>\n          <Text>\n            Done!\n          </Text>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex gap={5}>\n      <Steps\n        direction=\"vertical\"\n        current={current}\n        items={[\n          {\n            title: '',\n            description: loadDataContentUploadFile(),\n          },\n          {\n            title: '',\n            description: confirmLoadData(),\n          },\n          {\n            title: '',\n            description: loadCompleted(),\n          },\n        ]}\n      />\n    </Flex>\n  )\n}\n\nfunction kelZImporterTab() {\n  const [current, setCurrent] = useState(0);\n  const [currentRelics, setCurrentRelics] = useState([]);\n  const [currentCharacters, setCurrentCharacters] = useState([]);\n  const [loading1, setLoading1] = useState(false);\n  const [loading2, setLoading2] = useState(false);\n\n  const onStepChange = (value) => {\n    console.log('onStepChange:', value);\n    setCurrent(value);\n  };\n\n  function beforeUpload(file) {\n    return new Promise(() => {\n      const reader = new FileReader();\n      reader.readAsText(file);\n      reader.onload = () => {\n        try {\n          let fileUploadText = reader.result;\n\n          let json = JSON.parse(fileUploadText);\n          console.log('JSON', json);\n\n          setLoading1(true)\n\n          if (!json) {\n            setTimeout(() => {\n              setLoading1(false)\n              setCurrentRelics(undefined)\n              setCurrentCharacters(undefined)\n              onStepChange(1)\n            }, spinnerMs);\n            return\n          }\n\n          let relics = [], characters = []\n          if (json.source == 'HSR-Scanner' && json.version == 3) {\n            relics = OcrParserKelz3.parse(json);\n            characters = OcrParserKelz3.parseCharacters(json);\n            characters = characters.sort((a, b) => b.characterLevel - a.characterLevel)\n          } else {\n            setTimeout(() => {\n              setLoading1(false)\n              setCurrentRelics(undefined)\n              setCurrentCharacters(undefined)\n              onStepChange(1)\n            }, spinnerMs);\n            return\n          }\n\n          setTimeout(() => {\n            setLoading1(false)\n            setCurrentRelics(relics)\n            setCurrentCharacters(characters)\n            onStepChange(1)\n          }, spinnerMs);\n\n        } catch (e) {\n          Message.error(e.message, 10)\n          Message.error('Error occurred while importing file, try running the scanner again with a dark background to improve scan accuracy', 10)\n        }\n      };\n      return false;\n    });\n  }\n\n  function onUploadClick() {\n    onStepChange(0)\n  }\n\n  function mergeRelicsConfirmed() {\n    setLoading2(true)\n    setTimeout(() => {\n      setLoading2(false)\n      DB.mergeRelicsWithState(currentRelics)\n      SaveState.save()\n      onStepChange(2)\n    }, spinnerMs);\n  }\n\n  function mergeCharactersConfirmed() {\n    setLoading2(true)\n    setTimeout(() => {\n      setLoading2(false)\n      DB.mergeRelicsWithState(currentRelics, currentCharacters)\n      SaveState.save()\n      onStepChange(2)\n    }, spinnerMs);\n  }\n\n  function kelZImporterContentUploadFile() {\n    return (\n      <Flex style={{minHeight: 100, marginBottom: 30}}>\n        <Flex vertical gap={10}>\n          <Text>\n            Install and run Kel-Z HSR Scanner (<Typography.Link target=\"_blank\" href='https://github.com/kel-z/HSR-Scanner/releases/latest'>Github</Typography.Link>).\n          </Text>\n          <Text>\n            It supports character and light cones imports and all 16:9 resolutions.\n          </Text>\n          <Text>\n            Upload the json file generated by Kel-Z HSR Scanner:\n          </Text>\n          <Upload\n            accept=\".json\"\n            name= 'file'\n            onClick={onUploadClick}\n            beforeUpload={beforeUpload}>\n            <Button style={{width: 210}} icon={<UploadOutlined />} loading={loading1}>\n              Upload HSRScanData file\n            </Button>\n          </Upload>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  function confirmRelicMerge() {\n    if (!currentRelics || !currentRelics.length) {\n      return (\n        <Flex style={{minHeight: 100}}>\n          <Flex vertical gap={10} style={{display: current >= 1 ? 'flex' : 'none'}}>\n            Invalid HSRScanData file, please try a different file\n          </Flex>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex style={{minHeight: 250}}>\n        <Flex vertical gap={10} style={{display: current >= 1 ? 'flex' : 'none'}}>\n          <Text>\n            File contains {currentRelics.length} relics and {currentCharacters?.length || 0} characters.\n          </Text>\n\n          <Text>Import relics only. Updates the optimizer with newly obtained relics.</Text>\n\n          <Button style={{width: 200}} type=\"primary\" onClick={mergeRelicsConfirmed} loading={loading2}>\n            Import relics\n          </Button>\n\n          <Divider/>\n          <Text>\n            Import relics and characters.\n          </Text>\n\n          <Popconfirm\n            title=\"Overwrite optimizer builds\"\n            description=\"Are you sure you want to overwrite your optimizer builds with ingame builds?\"\n            onConfirm={mergeCharactersConfirmed}\n            placement=\"bottom\"\n            okText=\"Yes\"\n            cancelText=\"Cancel\"\n          >\n            <Button style={{width: 200}} type=\"primary\" loading={loading2}>\n              Import relics & characters\n            </Button>\n          </Popconfirm>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  function mergeCompleted() {\n    return (\n      <Flex style={{minHeight: 100}}>\n        <Flex vertical gap={10} style={{display: current >= 2 ? 'flex' : 'none'}}>\n          <Text>\n            Done!\n          </Text>\n          <Text>\n            The Relic scorer can be used to import accurate speed substats\n          </Text>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex gap={5}>\n      <Steps\n        direction=\"vertical\"\n        current={current}\n        items={[\n          {\n            title: '',\n            description: kelZImporterContentUploadFile(),\n          },\n          {\n            title: '',\n            description: confirmRelicMerge(),\n          },\n          {\n            title: '',\n            description: mergeCompleted(),\n          },\n        ]}\n      />\n    </Flex>\n  )\n}\n\nfunction fribbelsImporterTab() {\n  const [current, setCurrent] = useState(0);\n  const [currentRelics, setCurrentRelics] = useState([]);\n  const [currentCharacters, setCurrentCharacters] = useState([]);\n  const [loading1, setLoading1] = useState(false);\n  const [loading2, setLoading2] = useState(false);\n\n  const onStepChange = (value) => {\n    console.log('onStepChange:', value);\n    setCurrent(value);\n  };\n\n  function beforeUpload(file) {\n    return new Promise(() => {\n      const reader = new FileReader();\n      reader.readAsText(file);\n      reader.onload = () => {\n        try {\n          let fileUploadText = reader.result;\n          // console.log('Uploaded text relicImporterTab', fileUploadText);\n\n          let json = JSON.parse(fileUploadText);\n          console.log('JSON', json);\n\n          setLoading1(true)\n\n          if (!json) {\n            setTimeout(() => {\n              setLoading1(false)\n              setCurrentRelics(undefined)\n              setCurrentCharacters(undefined)\n              onStepChange(1)\n            }, spinnerMs);\n            return\n          }\n\n          let relics = [], characters = []\n          if (json.fileType == 'Fribbels HSR Scanner' && json.fileVersion == 'v1.0.0') {\n            relics = OcrParserFribbels1.parse(json);\n          } else {\n            setTimeout(() => {\n              setLoading1(false)\n              setCurrentRelics(undefined)\n              setCurrentCharacters(undefined)\n              onStepChange(1)\n            }, spinnerMs);\n            return\n          }\n\n          setTimeout(() => {\n            setLoading1(false)\n            setCurrentRelics(relics)\n            setCurrentCharacters(characters)\n            onStepChange(1)\n          }, spinnerMs);\n\n        } catch (e) {\n          Message.error(e.message, 10)\n          Message.error('Error occurred while importing file, try running the scanner again with a dark background to improve scan accuracy', 10)\n        }\n      };\n      return false;\n    });\n  }\n\n  function onUploadClick() {\n    onStepChange(0)\n  }\n\n  function mergeRelicsConfirmed() {\n    setLoading2(true)\n    setTimeout(() => {\n      setLoading2(false)\n      DB.mergeRelicsWithState(currentRelics)\n      SaveState.save()\n      onStepChange(2)\n    }, spinnerMs);\n  }\n\n  function fribbelsImporterContentUploadFile() {\n    return (\n      <Flex style={{minHeight: 100, marginBottom: 30}}>\n        <Flex vertical gap={10}>\n          <Text>\n            Install and run Fribbels HSR Scanner (<Typography.Link target=\"_blank\" href='https://github.com/fribbels/Fribbels-Honkai-Star-Rail-Scanner/releases/latest'>Github</Typography.Link>).\n          </Text>\n          <Text>\n            The Kel-Z importer is recommended for scanning speed & character imports. This importer can be used as a backup if that doesn't work.\n          </Text>\n          <Text>\n            Upload the json file generated by the scanner:\n          </Text>\n          <Upload\n            accept=\".json\"\n            name= 'file'\n            onClick={onUploadClick}\n            beforeUpload={beforeUpload}>\n            <Button style={{width: 200}} icon={<UploadOutlined />} loading={loading1}>\n              Upload relics file\n            </Button>\n          </Upload>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  function confirmRelicMerge() {\n    if (!currentRelics || !currentRelics.length) {\n      return (\n        <Flex style={{minHeight: 100}}>\n          <Flex vertical gap={10} style={{display: current >= 1 ? 'flex' : 'none'}}>\n            Invalid relics file, please try a different file\n          </Flex>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex style={{minHeight: 250}}>\n        <Flex vertical gap={10} style={{display: current >= 1 ? 'flex' : 'none'}}>\n          <Text>\n            File contains {currentRelics.length} relics and {currentCharacters?.length || 0} characters.\n          </Text>\n\n          <Text>Import relics only. Updates the optimizer with newly obtained relics.</Text>\n\n          <Button style={{width: 200}} type=\"primary\" onClick={mergeRelicsConfirmed} loading={loading2}>\n            Import relics\n          </Button>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  function mergeCompleted() {\n    return (\n      <Flex style={{minHeight: 100}}>\n        <Flex vertical gap={10} style={{display: current >= 2 ? 'flex' : 'none'}}>\n          <Text>\n            Done!\n          </Text>\n          <Text>\n            The Relic scorer can be used to import accurate speed substats\n          </Text>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex gap={5}>\n      <Steps\n        direction=\"vertical\"\n        current={current}\n        items={[\n          {\n            title: '',\n            description: fribbelsImporterContentUploadFile(),\n          },\n          {\n            title: '',\n            description: confirmRelicMerge(),\n          },\n          {\n            title: '',\n            description: mergeCompleted(),\n          },\n        ]}\n      />\n    </Flex>\n  )\n}\n\nexport default function ImportTab(props) {\n  // Test\n  let tabSize = 'large'\n\n  return (\n    <div style={{display: props.active ? 'block' : 'none'}}>\n      <Flex vertical gap={5} style={{marginLeft: 20, width: 1200}}>\n        <Tabs\n          defaultActiveKey=\"1\"\n          size={tabSize}\n          style={{\n            marginBottom: 32,\n          }}\n          items={[\n            {\n              label: 'Kel-Z scanner importer (Recommended)',\n              key: 0,\n              children: kelZImporterTab(),\n            },\n            {\n              label: 'Fribbels scanner importer',\n              key: 1,\n              children: fribbelsImporterTab(),\n            },\n            {\n              label: 'Save optimizer data',\n              key: 2,\n              children: saveDataTab(),\n            },\n            {\n              label: 'Load optimizer data',\n              key: 3,\n              children: loadDataTab(),\n            },\n            {\n              label: 'Clear optimizer data',\n              key: 4,\n              children: clearDataTab(),\n            },\n          ]}\n        />\n      </Flex>\n    </div>\n  );\n}\nImportTab.propTypes = {\n  active: PropTypes.bool,\n}\n","import styled from 'styled-components';\nimport { Button, Flex, Form, Image, InputNumber, Modal, Radio, Select } from 'antd';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Constants } from '../lib/constants.ts';\nimport { HeaderText } from './HeaderText';\nimport { RelicAugmenter } from '../lib/relicAugmenter';\nimport { Message } from '../lib/message';\nimport PropTypes from \"prop-types\";\nimport { Utils } from \"../lib/utils\";\nimport DB from \"../lib/db\";\nimport { Assets } from \"../lib/assets\";\n\nfunction RadioIcon(props) {\n  return (\n    <Radio.Button value={props.value} style={{ height: 35, width: 50, paddingLeft: 10 }}>\n      <Image\n        preview={false}\n        width={30}\n        src={props.src}\n      />\n    </Radio.Button>\n  )\n}\nRadioIcon.propTypes = {\n  value: PropTypes.string,\n  src: PropTypes.string,\n}\n\nconst InputNumberStyled = styled(InputNumber)`\n  width: 90px\n`\n\nfunction renderMainStat(relic) {\n  let mainStat = relic.main?.stat\n  let mainValue = relic.main?.value\n\n  if (!mainStat) return {}\n\n  return renderStat(mainStat, mainValue)\n}\n\nfunction renderSubstat(relic, index) {\n  let substat = relic.substats[index]\n  if (!substat || !substat.stat) return {}\n\n  let stat = substat.stat\n  let value = substat.value\n\n  return renderStat(stat, value)\n}\n\nfunction renderStat(stat, value) {\n  if (Utils.isFlat(stat) && stat != Constants.Stats.SPD) {\n    return {\n      stat: stat,\n      value: Math.floor(value)\n    }\n  } else {\n    return {\n      stat: stat,\n      value: Utils.precisionRound(Math.floor(value * 10) / 10)\n    }\n  }\n}\n\n// selectedRelic, onOk, setOpen, open, type\nexport default function RelicModal(props) {\n  const [relicForm] = Form.useForm();\n  const [mainStatOptions, setMainStatOptions] = useState([]);\n\n  const characterOptions = useMemo(() => {\n    let characters = DB.getCharacters()\n    let characterData = DB.getMetadata().characters;\n\n    let options = characters.map((character) => {\n      return {\n        value: character.id,\n        label: characterData[character.id].displayName\n      }\n    })\n\n    options = options.sort((a, b) => a.label.localeCompare(b.label))\n    options = [{\n      value: 'None',\n      label: 'Nobody'\n    }, ...options]\n\n    return options\n  }, [props.selectedRelic, props.open]);\n\n  useEffect(() => {\n    let defaultValues = {\n      grade: 5,\n      enhance: 15,\n      part: Constants.Parts.Head,\n      mainStatType: Constants.Stats.HP,\n      mainStatValue: Math.floor(Constants.MainStatsValues[Constants.Stats.HP][5]['base'] + Constants.MainStatsValues[Constants.Stats.HP][5]['increment'] * 15),\n    }\n\n    let relic = props.selectedRelic\n    if (!relic || props.type != 'edit') {\n      // Ignore\n    } else {\n      defaultValues = {\n        equippedBy: relic.equippedBy == undefined ? 'None' : relic.equippedBy,\n        grade: relic.grade,\n        enhance: relic.enhance,\n        set: relic.set,\n        part: relic.part,\n        mainStatType: renderMainStat(relic).stat,\n        mainStatValue: renderMainStat(relic).value,\n        substatType0: renderSubstat(relic, 0).stat,\n        substatValue0: renderSubstat(relic, 0).value,\n        substatType1: renderSubstat(relic, 1).stat,\n        substatValue1: renderSubstat(relic, 1).value,\n        substatType2: renderSubstat(relic, 2).stat,\n        substatValue2: renderSubstat(relic, 2).value,\n        substatType3: renderSubstat(relic, 3).stat,\n        substatValue3: renderSubstat(relic, 3).value,\n      }\n    }\n    relicForm.setFieldsValue(defaultValues)\n  }, [props.selectedRelic, props.open])\n\n  useEffect(() => {\n    let mainStatOptions = [];\n    if (props.selectedRelic?.part) {\n      mainStatOptions = Object.entries(Constants.PartsMainStats[props.selectedRelic?.part]).map(entry => ({\n        label: entry[1],\n        value: entry[1]\n      }));\n    }\n    setMainStatOptions(mainStatOptions || []);\n    relicForm.setFieldValue('mainStatType', props.selectedRelic?.main?.stat);\n  }, [props.selectedRelic?.part, props.selectedRelic?.main?.stat]);\n\n  useEffect(() => {\n    if (mainStatOptions.length > 0) {\n      const mainStatValues = mainStatOptions.map(item => item.value);\n      if (mainStatValues.includes(props.selectedRelic?.main?.stat)) {\n        relicForm.setFieldValue('mainStatType', props.selectedRelic?.main?.stat);\n      }\n      else {\n        relicForm.setFieldValue('mainStatType', mainStatOptions[0].value);\n      }\n    }\n  }, [relicForm, mainStatOptions, props.selectedRelic?.main?.stat]);\n\n  const onFinish = (x) => {\n    console.log('Form finished', x);\n    if (!x.part) {\n      return Message.error('Part field is missing')\n    }\n    if (!x.mainStatType) {\n      return Message.error('Main stat is missing')\n    }\n    if (!x.mainStatValue) {\n      return Message.error('Main stat is missing')\n    }\n    if (!x.set) {\n      return Message.error('Set field is missing')\n    }\n    if (x.enhance == undefined) {\n      return Message.error('Enhance field is missing')\n    }\n    if (x.grade == undefined) {\n      return Message.error('Grade field is missing')\n    }\n    if (x.grade > 5 || x.grade < 2) {\n      return Message.error('Grade value is invalid')\n    }\n    if (x.enhance > 15 || x.enhance < 0) {\n      return Message.error('Enhance value is invalid')\n    }\n    if (!Constants.SetsRelicsNames.includes(x.set) && !Constants.SetsOrnamentsNames.includes(x.set)) {\n      return Message.error('Set value is invalid')\n    }\n    if (Constants.SetsRelicsNames.includes(x.set) && (x.part == Constants.Parts.PlanarSphere || x.part == Constants.Parts.LinkRope)) {\n      return Message.error('The selected set is not an ornament set')\n    }\n    if (Constants.SetsOrnamentsNames.includes(x.set) && (x.part == Constants.Parts.Head ||\n      x.part == Constants.Parts.Hands ||\n      x.part == Constants.Parts.Body ||\n      x.part == Constants.Parts.Feet)) {\n      return Message.error('The selected set is not a relic set')\n    }\n    if (x.substatType0 != undefined && x.substatValue0 == undefined || x.substatType0 == undefined && x.substatValue0 != undefined) {\n      return Message.error('Substat 1 is invalid')\n    }\n    if (x.substatType1 != undefined && x.substatValue1 == undefined || x.substatType1 == undefined && x.substatValue1 != undefined) {\n      return Message.error('Substat 2 is invalid')\n    }\n    if (x.substatType2 != undefined && x.substatValue2 == undefined || x.substatType2 == undefined && x.substatValue2 != undefined) {\n      return Message.error('Substat 3 is invalid')\n    }\n    if (x.substatType3 != undefined && x.substatValue3 == undefined || x.substatType3 == undefined && x.substatValue3 != undefined) {\n      return Message.error('Substat 4 is invalid')\n    }\n\n    if (x.substatType3 != undefined && (x.substatType0 == undefined || x.substatType1 == undefined || x.substatType2 == undefined)) {\n      return Message.error('Substats are out of order')\n    }\n    if (x.substatType2 != undefined && (x.substatType0 == undefined || x.substatType1 == undefined)) {\n      return Message.error('Substats are out of order')\n    }\n    if (x.substatType1 != undefined && (x.substatType0 == undefined)) {\n      return Message.error('Substats are out of order')\n    }\n\n    let substatTypes = [x.substatType0, x.substatType1, x.substatType2, x.substatType3].filter(x => x != undefined)\n    if (new Set(substatTypes).size !== substatTypes.length) {\n      return Message.error('Duplicate substats, only one of each type is allowed')\n    }\n    if (substatTypes.includes(x.mainStatType)) {\n      return Message.error('Substat type is the same as the main stat')\n    }\n\n    if (x.substatValue0 >= 1000 || x.substatValue1 >= 1000 || x.substatValue2 >= 1000 || x.substatValue3 >= 1000) {\n      return Message.error('Substat value is too big')\n    }\n    if (x.mainStatValue >= 1000) {\n      return Message.error('Main stat value is too big')\n    }\n    if (x.substatValue0 <= 0 || x.substatValue1 <= 0 || x.substatValue2 <= 0 || x.substatValue3 <= 0) {\n      return Message.error('Substat values should be positive')\n    }\n    if (x.mainStatValue <= 0) {\n      return Message.error('Main stat values should be positive')\n    }\n\n    let relic = {\n      equippedBy: x.equippedBy == 'None' ? undefined : x.equippedBy,\n      enhance: x.enhance,\n      grade: x.grade,\n      part: x.part,\n      set: x.set,\n      main: {\n        stat: x.mainStatType,\n        value: x.mainStatValue\n      }\n    }\n    let substats = []\n    if (x.substatType0 != undefined && x.substatValue0 != undefined) {\n      substats.push({\n        stat: x.substatType0,\n        value: x.substatValue0\n      })\n    }\n    if (x.substatType1 != undefined && x.substatValue1 != undefined) {\n      substats.push({\n        stat: x.substatType1,\n        value: x.substatValue1\n      })\n    }\n    if (x.substatType2 != undefined && x.substatValue2 != undefined) {\n      substats.push({\n        stat: x.substatType2,\n        value: x.substatValue2\n      })\n    }\n    if (x.substatType3 != undefined && x.substatValue3 != undefined) {\n      substats.push({\n        stat: x.substatType3,\n        value: x.substatValue3\n      })\n    }\n    relic.substats = substats\n    RelicAugmenter.augment(relic)\n\n    console.log('Completed relic', relic)\n\n    props.onOk(relic)\n    props.setOpen(false)\n  };\n  const onFinishFailed = () => {\n    Message.error('Submit failed!');\n    props.setOpen(false)\n  };\n  const onValuesChange = (x) => {\n    let mainStatOptions = [];\n    if (x.part) {\n      mainStatOptions = Object.entries(Constants.PartsMainStats[x.part]).map(entry => ({\n        label: entry[1],\n        value: entry[1]\n      }));\n      setMainStatOptions(mainStatOptions);\n      relicForm.setFieldValue('mainStatType', mainStatOptions[0]?.value);\n    }\n\n    let mainStatType = mainStatOptions[0]?.value || relicForm.getFieldValue('mainStatType');\n    let enhance = relicForm.getFieldValue('enhance');\n    let grade = relicForm.getFieldValue('grade');\n\n    if (mainStatType != undefined && enhance != undefined && grade != undefined) {\n      const specialStats = [Constants.Stats.OHB, Constants.Stats.Physical_DMG, Constants.Stats.Physical_DMG, Constants.Stats.Fire_DMG, Constants.Stats.Ice_DMG, Constants.Stats.Lightning_DMG, Constants.Stats.Wind_DMG, Constants.Stats.Quantum_DMG, Constants.Stats.Imaginary_DMG];\n      const floorStats = [Constants.Stats.HP, Constants.Stats.ATK, Constants.Stats.SPD];\n\n      let mainStatValue = Constants.MainStatsValues[mainStatType][grade]['base'] + Constants.MainStatsValues[mainStatType][grade]['increment'] * enhance;\n\n      if (specialStats.includes(mainStatType)) { // Outgoing Healing Boost and elemental damage bonuses has a weird rounding with one decimal place\n        mainStatValue = Utils.truncate10ths(mainStatValue);\n      } else if (floorStats.includes(mainStatType)) {\n        mainStatValue = Math.floor(mainStatValue);\n      } else {\n        mainStatValue = mainStatValue.toFixed(1);\n      }\n      relicForm.setFieldValue('mainStatValue', mainStatValue);\n    }\n  };\n\n  const handleCancel = () => {\n    props.setOpen(false)\n  };\n  const handleOk = () => {\n    relicForm.submit()\n  };\n\n  let enhanceOptions = []\n  for (let i = 15; i >= 0; i--) {\n    enhanceOptions.push({ value: i, label: '+' + i })\n  }\n\n  let setOptions = []\n  for (let entry of Object.entries(Constants.SetsRelics)) {\n    setOptions.push({\n      label: entry[1],\n      value: entry[1]\n    })\n  }\n  for (let entry of Object.entries(Constants.SetsOrnaments)) {\n    setOptions.push({\n      label: entry[1],\n      value: entry[1]\n    })\n  }\n  let substatOptions = []\n  for (let entry of Object.entries(Constants.SubStats)) {\n    substatOptions.push({\n      label: entry[1],\n      value: entry[1]\n    })\n  }\n\n  const filterOption = (input, option) =>\n    (option?.label ?? '').toLowerCase().includes(input.toLowerCase());\n\n  return (\n    <Form\n      form={relicForm}\n      layout=\"vertical\"\n      preserve={false}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      onValuesChange={onValuesChange}\n    >\n      <Modal\n        width={350}\n        centered\n        destroyOnClose\n        open={props.open} //\n        onCancel={() => props.setOpen(false)}\n        footer={[\n          <Button key=\"back\" onClick={handleCancel}>\n            Cancel\n          </Button>,\n          <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\n            Submit\n          </Button>,\n        ]}\n      >\n        <Flex vertical gap={5}>\n\n          <HeaderText>Equipped by</HeaderText>\n          <Form.Item size=\"default\" name='equippedBy'>\n            <Select\n              showSearch\n              filterOption={filterOption}\n              style={{ width: 300 }}\n              options={characterOptions}\n            />\n          </Form.Item>\n\n          <HeaderText>Part</HeaderText>\n\n          <Form.Item size=\"default\" name='part'>\n            <Radio.Group buttonStyle=\"solid\">\n              <RadioIcon value={Constants.Parts.Head} src={Assets.getPart(Constants.Parts.Head)} />\n              <RadioIcon value={Constants.Parts.Hands} src={Assets.getPart(Constants.Parts.Hands)} />\n              <RadioIcon value={Constants.Parts.Body} src={Assets.getPart(Constants.Parts.Body)} />\n              <RadioIcon value={Constants.Parts.Feet} src={Assets.getPart(Constants.Parts.Feet)} />\n              <RadioIcon value={Constants.Parts.PlanarSphere} src={Assets.getPart(Constants.Parts.PlanarSphere)} />\n              <RadioIcon value={Constants.Parts.LinkRope} src={Assets.getPart(Constants.Parts.LinkRope)} />\n            </Radio.Group>\n          </Form.Item>\n\n          <HeaderText>Set</HeaderText>\n          <Form.Item size=\"default\" name='set'>\n            <Select\n              showSearch\n              allowClear\n              style={{\n                width: 300,\n              }}\n              placeholder=\"Sets\"\n              options={setOptions}\n              maxTagCount='responsive'>\n            </Select>\n          </Form.Item>\n\n          <HeaderText>Enhance / Grade</HeaderText>\n\n          <Flex gap={10}>\n            <Form.Item size=\"default\" name='enhance'>\n              <Select\n                showSearch\n                style={{ width: 145 }}\n                options={enhanceOptions}\n              />\n            </Form.Item>\n            <Form.Item size=\"default\" name='grade'>\n              <Select\n                showSearch\n                style={{ width: 145 }}\n                options={[\n                  { value: 2, label: '2 star' },\n                  { value: 3, label: '3 star' },\n                  { value: 4, label: '4 star' },\n                  { value: 5, label: '5 star' },\n                ]}\n              />\n            </Form.Item>\n          </Flex>\n\n          <HeaderText>Main stat</HeaderText>\n\n          <Flex gap={10}>\n            <Form.Item size=\"default\" name='mainStatType'>\n              <Select\n                showSearch\n                style={{\n                  width: 200,\n                }}\n                placeholder=\"Main Stat\"\n                maxTagCount='responsive'\n                options={mainStatOptions}\n                disabled={mainStatOptions.length <= 1} />\n            </Form.Item>\n\n            <Form.Item size=\"default\" name='mainStatValue'>\n              <InputNumberStyled controls={false} disabled />\n            </Form.Item>\n          </Flex>\n\n          <HeaderText>Substats</HeaderText>\n\n          <Flex gap={10}>\n            <Form.Item size=\"default\" name='substatType0'>\n              <Select\n                showSearch\n                allowClear\n                style={{\n                  width: 200,\n                }}\n                placeholder=\"Substat\"\n                maxTagCount='responsive'\n                options={substatOptions} />\n            </Form.Item>\n\n\n            <Form.Item size=\"default\" name='substatValue0'>\n              <InputNumberStyled controls={false} />\n            </Form.Item>\n          </Flex>\n\n          <Flex gap={10}>\n            <Form.Item size=\"default\" name='substatType1'>\n              <Select\n                showSearch\n                allowClear\n                style={{\n                  width: 200,\n                }}\n                placeholder=\"Substat\"\n                maxTagCount='responsive'\n                options={substatOptions} />\n            </Form.Item>\n\n            <Form.Item size=\"default\" name='substatValue1'>\n              <InputNumberStyled controls={false} />\n            </Form.Item>\n          </Flex>\n\n          <Flex gap={10}>\n            <Form.Item size=\"default\" name='substatType2'>\n              <Select\n                showSearch\n                allowClear\n                style={{\n                  width: 200,\n                }}\n                placeholder=\"Substat\"\n                maxTagCount='responsive'\n                options={substatOptions} />\n            </Form.Item>\n\n            <Form.Item size=\"default\" name='substatValue2'>\n              <InputNumberStyled controls={false} />\n            </Form.Item>\n          </Flex>\n\n          <Flex gap={10}>\n            <Form.Item size=\"default\" name='substatType3'>\n              <Select\n                showSearch\n                allowClear\n                style={{\n                  width: 200,\n                }}\n                placeholder=\"Substat\"\n                maxTagCount='responsive'\n                options={substatOptions} />\n            </Form.Item>\n\n            <Form.Item size=\"default\" name='substatValue3'>\n              <InputNumberStyled controls={false} />\n            </Form.Item>\n          </Flex>\n        </Flex>\n      </Modal>\n    </Form>\n  )\n}\nRelicModal.propTypes = {\n  selectedRelic: PropTypes.object,\n  type: PropTypes.string,\n  onOk: PropTypes.func,\n  setOpen: PropTypes.func,\n  open: PropTypes.bool,\n}\n","import { Button, Flex, Select, Tooltip, Typography } from \"antd\";\nimport React, { useMemo, useState } from \"react\";\nimport { RelicScorer } from \"../lib/relicScorer.ts\";\nimport CheckableTag from \"antd/lib/tag/CheckableTag\";\nimport { HeaderText } from \"./HeaderText\";\nimport DB from \"../lib/db\";\nimport { Utils } from \"../lib/utils\";\nimport { Constants } from \"../lib/constants.ts\";\nimport { Assets } from \"../lib/assets\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nconst tagHeight = 34\nconst imgWidth = 34\n\nexport default function RelicFilterBar() {\n  let setRelicTabFilters = window.store(s => s.setRelicTabFilters);\n  let setSelectedScoringCharacter = window.store(s => s.setSelectedScoringCharacter);\n\n  let [currentlySelectedCharacterId, setCurrentlySelectedCharacterId] = useState()\n\n  const characterOptions = useMemo(() => {\n    return Utils.generateCharacterOptions();\n  }, []);\n\n  function generateImageTags(arr, srcFn, tooltip) {\n    return arr.map(x => {\n      return {\n        key: x,\n        display:\n          tooltip ?\n            (\n              <Tooltip title={x} mouseEnterDelay={0.4}>\n                <img style={{ width: imgWidth }} src={srcFn(x)} />\n              </Tooltip>\n            )\n            :\n            (\n              <img style={{ width: imgWidth }} src={srcFn(x)} />\n            )\n      }\n    })\n  }\n  function generateTextTags(arr, width) { // arr contains [key, value]\n    return arr.map(x => {\n      return {\n        key: x[0],\n        display: (\n          <Flex style={{ width: width, height: tagHeight }} justify='space-around' align='center'>\n            <Text style={{ fontSize: 18 }}>\n              {x[1]}\n            </Text>\n          </Flex>\n        )\n      }\n    })\n  }\n\n  let setsData = generateImageTags(Object.values(Constants.SetsRelics).concat(Object.values(Constants.SetsOrnaments)), (x) => Assets.getSetImage(x, Constants.Parts.PlanarSphere), true)\n  let partsData = generateImageTags(Object.values(Constants.Parts), (x) => Assets.getPart(x), false)\n  let mainStatsData = generateImageTags(Constants.MainStats, (x) => Assets.getStatIcon(x, true), true)\n  let subStatsData = generateImageTags(Constants.SubStats, (x) => Assets.getStatIcon(x, true), true)\n  let enhanceData = generateTextTags([[0, '+0'], [3, '+3'], [6, '+6'], [9, '+9'], [12, '+12'], [15, '+15']])\n\n  function characterSelectorChange(id) {\n    if (!id) return\n\n    let relics = Object.values(window.store.getState().relicsById)\n    console.log('idChange', id)\n\n    setSelectedScoringCharacter(id)\n    setCurrentlySelectedCharacterId(id)\n\n    let scoringMetadata = Utils.clone(DB.getScoringMetadata(id))\n    let possibleSubstats = Object.assign(...Constants.SubStats.map(x => ({ [x]: true })));\n    let level80Stats = DB.getMetadata().characters[id].promotions[80]\n    scoringMetadata.stats[Constants.Stats.HP] = scoringMetadata.stats[Constants.Stats.HP_P] * 38 / (level80Stats[Constants.Stats.HP] * 2 * 0.03888)\n    scoringMetadata.stats[Constants.Stats.ATK] = scoringMetadata.stats[Constants.Stats.ATK_P] * 19 / (level80Stats[Constants.Stats.ATK] * 2 * 0.03888)\n    scoringMetadata.stats[Constants.Stats.DEF] = scoringMetadata.stats[Constants.Stats.DEF_P] * 19 / (level80Stats[Constants.Stats.DEF] * 2 * 0.04860)\n\n    for (let relic of relics) {\n      let scoringResult = RelicScorer.score(relic, id)\n      let subScore = parseFloat(scoringResult.score)\n      let mainScore = 0\n      if (Utils.hasMainStat([relic.part])) {\n        if (scoringMetadata.parts[relic.part].includes(relic.main.stat)) {\n          mainScore = 64.8\n        } else {\n          mainScore = scoringMetadata.stats[relic.main.stat] * 64.8\n        }\n      } else {\n        mainScore = 64.8\n      }\n\n      // Predict substat scores\n      let substats = relic.substats\n      let substatScoreEntries = Object.entries(scoringMetadata.stats)\n        .filter(x => possibleSubstats[x[0]])\n        .filter(x => !substats.map(x => x.stat).includes(x[0])) // Exclude already existing substats\n        .sort((a, b) => b[1] - a[1])\n\n      let bestUnobtainedSubstat = substatScoreEntries[0]\n      let finalSubstats = [...substats.map(x => x.stat), bestUnobtainedSubstat[0]]\n      let finalSubstatWeights = finalSubstats.map(x => scoringMetadata.stats[x])\n      let bestOverallSubstatWeight = finalSubstatWeights.sort((a, b) => b - a)[0]\n      let avgWeight = (finalSubstatWeights.reduce((a, b) => a + b, 0) - bestUnobtainedSubstat[1] / 2) / 4\n\n      let extraRolls = 0\n\n      let missingSubstats = (4 - substats.length)\n      let missingRolls = Math.ceil(((15 - (5 - relic.grade) * 3) - relic.enhance) / 3) - missingSubstats\n\n      for (let i = 0; i < missingSubstats; i++) {\n        extraRolls += 1 * bestUnobtainedSubstat[1]\n      }\n\n      for (let i = 0; i < missingRolls; i++) {\n        extraRolls += bestOverallSubstatWeight\n      }\n\n\n      relic.relicsTabWeight = Utils.precisionRound(subScore + mainScore)\n      relic.bestCaseWeight = relic.relicsTabWeight + extraRolls * 6.48\n      relic.averageCaseWeight = relic.relicsTabWeight + extraRolls * 6.48 * avgWeight\n    }\n\n    DB.setRelics(relics)\n\n    window.relicsGrid.current.api.applyColumnState({\n      defaultState: { sort: null },\n    });\n\n    window.relicsGrid.current.api.applyColumnState({\n      state: [{ colId: 'relicsTabWeight', sort: 'desc' }],\n      defaultState: { sort: null },\n    });\n\n    window.relicsGrid.current.api.redrawRows()\n  }\n\n  function clearClicked() {\n    setRelicTabFilters({\n      set: [],\n      part: [],\n      enhance: [],\n      mainStats: [],\n      subStats: [],\n    })\n  }\n\n  function scoringClicked() {\n    window.setIsScoringModalOpen(true)\n  }\n\n  function rescoreClicked() {\n    characterSelectorChange(currentlySelectedCharacterId)\n  }\n\n  return (\n    <Flex vertical gap={2}>\n      <Flex gap={10}>\n        <Flex vertical flex={1}>\n          <HeaderText>Relic recommendation character</HeaderText>\n          <Flex gap={10}>\n            <Select\n              showSearch\n              filterOption={Utils.characterNameFilterOption}\n              onChange={characterSelectorChange}\n              options={characterOptions}\n              style={{ flex: 1 }}\n            />\n            <Button\n              onClick={rescoreClicked}\n              style={{ flex: 1, padding: '0px' }}\n            >\n              Reapply scores\n            </Button>\n            <Button\n              onClick={scoringClicked}\n              style={{ flex: 1, padding: '0px' }}\n            >\n              Scoring algorithm\n            </Button>\n          </Flex>\n        </Flex>\n        <Flex vertical style={{ height: '100%' }} flex={1}>\n          <HeaderText>Filter actions</HeaderText>\n          <Button onClick={clearClicked}>\n            Clear filters\n          </Button>\n        </Flex>\n      </Flex>\n\n      <Flex gap={10}>\n        <Flex vertical flex={1}>\n          <HeaderText>Part</HeaderText>\n          <FilterRow name='part' tags={partsData} flexBasis='15%' />\n        </Flex>\n        <Flex vertical style={{ height: '100%' }} flex={1}>\n          <HeaderText>Enhance</HeaderText>\n          <FilterRow name='enhance' tags={enhanceData} flexBasis='15%' />\n        </Flex>\n      </Flex>\n\n      <Flex vertical>\n        <HeaderText>Set</HeaderText>\n        <FilterRow name='set' tags={setsData} flexBasis='6.25%' />\n      </Flex>\n\n      <Flex vertical>\n        <HeaderText>Main stats</HeaderText>\n        <FilterRow name='mainStats' tags={mainStatsData} />\n      </Flex>\n\n      <Flex vertical>\n        <HeaderText>Substats</HeaderText>\n        <FilterRow name='subStats' tags={subStatsData} />\n      </Flex>\n    </Flex>\n  )\n}\n\nfunction FilterRow(props) {\n  let relicTabFilters = window.store(s => s.relicTabFilters);\n  let setRelicTabFilters = window.store(s => s.setRelicTabFilters);\n\n  let selectedTags = relicTabFilters[props.name]\n\n  const handleChange = (tag, checked) => {\n    const nextSelectedTags = checked\n      ? [...selectedTags, tag]\n      : selectedTags.filter((t) => t != tag);\n\n    let clonedFilters = Utils.clone(relicTabFilters)\n    clonedFilters[props.name] = nextSelectedTags\n    console.log('Relic tab filters', props.name, clonedFilters);\n\n    setRelicTabFilters(clonedFilters)\n  };\n\n  return (\n    <Flex\n      style={{\n        flexWrap: 'wrap',\n        flexGrow: 1,\n        backgroundColor: '#243356',\n        boxShadow: '0px 0px 0px 1px #3F5A96 inset',\n        borderRadius: 6,\n        overflow: 'hidden'\n      }}\n    >\n      {props.tags.map((tag) => (\n        <CheckableTag\n          key={tag.key}\n          checked={selectedTags.includes(tag.key)}\n          onChange={(checked) => handleChange(tag.key, checked)}\n          style={{\n            flex: 1,\n            flexBasis: props.flexBasis,\n            boxShadow: '1px 1px 0px 0px #3F5A96'\n          }}\n        >\n          <Flex align='center' justify='space-around' style={{ height: '100%' }}>\n            {tag.display}\n          </Flex>\n        </CheckableTag>\n      ))}\n    </Flex>\n  )\n}\nFilterRow.propTypes = {\n  name: PropTypes.string,\n  tags: PropTypes.array,\n  flexBasis: PropTypes.string,\n}\n\n\n","import { Button, Flex, Popconfirm } from 'antd';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\n\nimport RelicPreview from './RelicPreview';\nimport { Constants } from '../lib/constants.ts';\nimport RelicModal from './RelicModal';\nimport { Gradient } from '../lib/gradient';\nimport { Message } from '../lib/message';\nimport { TooltipImage } from './TooltipImage';\nimport RelicFilterBar from \"./RelicFilterBar\";\nimport DB from \"../lib/db\";\nimport { Renderer } from \"../lib/renderer\";\nimport { SaveState } from \"../lib/saveState\";\nimport { Hint } from \"../lib/hint\";\nimport PropTypes from \"prop-types\";\n\nexport default function RelicsTab(props) {\n  const gridRef = useRef();\n  window.relicsGrid = gridRef;\n\n  const [relicRows, setRelicRows] = useState(DB.getRelics());\n  window.setRelicRows = setRelicRows\n\n  const [selectedRelic, setSelectedRelic] = useState();\n\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [addModalOpen, setAddModalOpen] = useState(false);\n  window.setEditModalOpen = setEditModalOpen\n  window.setSelectedRelic = setSelectedRelic\n\n  let relicTabFilters = window.store(s => s.relicTabFilters);\n  useEffect(() => {\n    if (!window.relicsGrid?.current?.api) return\n    console.log('RelicTabFilters', relicTabFilters)\n\n    if (Object.values(relicTabFilters).filter(x => x.length > 0).length == 0) {\n      window.relicsGrid.current.api.setFilterModel(null)\n      return;\n    }\n\n    // Calculate filter conditions\n    let filterModel = {}\n\n    filterModel.set = {\n      conditions: relicTabFilters.set.map(x => ({\n        filterType: 'text',\n        type: 'equals',\n        filter: x\n      })),\n      operator: 'OR'\n    }\n\n    filterModel.part = {\n      conditions: relicTabFilters.part.map(x => ({\n        filterType: 'text',\n        type: 'equals',\n        filter: x\n      })),\n      operator: 'OR'\n    }\n\n\n    filterModel['main.stat'] = {\n      conditions: relicTabFilters.mainStats.map(x => ({\n        filterType: 'text',\n        type: 'equals',\n        filter: x\n      })),\n      operator: 'OR'\n    }\n\n    // Substats have to filter augmented stats individually\n    for (let substatFilter of relicTabFilters.subStats) {\n      filterModel[`augmentedStats.${substatFilter}`] = {\n        filterType: 'number',\n        type: 'greaterThan',\n        filter: 0\n      }\n    }\n\n    // Enhance includes a range from x to x + 2\n    filterModel.enhance = {\n      conditions: relicTabFilters.enhance.flatMap(x => [\n        {\n          filterType: 'number',\n          type: 'equals',\n          filter: x\n        },\n        {\n          filterType: 'number',\n          type: 'equals',\n          filter: x + 1\n        },\n        {\n          filterType: 'number',\n          type: 'equals',\n          filter: x + 2\n        }\n      ]),\n      operator: 'OR'\n    }\n\n    console.log('FilterModel', filterModel)\n\n    // Apply to grid\n    window.relicsGrid.current.api.setFilterModel(filterModel);\n  }, [relicTabFilters])\n\n  const columnDefs = useMemo(() => [\n    { field: 'equippedBy', headerName: 'Owner', cellRenderer: Renderer.characterIcon },\n    { field: 'set', cellRenderer: Renderer.anySet, width: 50, headerName: 'Set', filter: 'agTextColumnFilter' },\n    { field: 'grade', width: 60, cellRenderer: Renderer.renderGradeCell, filter: 'agNumberColumnFilter' },\n    { field: 'part', valueFormatter: Renderer.readablePart, width: 80, filter: 'agTextColumnFilter' },\n    { field: 'enhance', width: 60, filter: 'agNumberColumnFilter' },\n    { field: 'main.stat', valueFormatter: Renderer.readableStat, headerName: 'Main', width: 100, filter: 'agTextColumnFilter' },\n    { field: 'main.value', headerName: 'Value', valueFormatter: Renderer.mainValueRenderer, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.HP_P}`, headerName: 'HP %', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.ATK_P}`, headerName: 'ATK %', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.DEF_P}`, headerName: 'DEF %', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.HP}`, headerName: 'HP', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesFloor, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.ATK}`, headerName: 'ATK', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesFloor, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.DEF}`, headerName: 'DEF', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesFloor, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.SPD}`, headerName: 'SPD', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroes10ths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.CR}`, headerName: 'CR', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.CD}`, headerName: 'CD', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.EHR}`, headerName: 'EHR', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.RES}`, headerName: 'RES', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.BE}`, headerName: 'BE', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    // {field: `cs`, headerName: 'CScore', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.scoreRenderer, filter: 'agNumberColumnFilter'},\n    // {field: `ss`, headerName: 'SScore', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.scoreRenderer, filter: 'agNumberColumnFilter'},\n    // {field: `ds`, headerName: 'DScore', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.scoreRenderer, filter: 'agNumberColumnFilter'},\n    { field: `relicsTabWeight`, headerName: 'WEIGHT', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideNaNAndRound, filter: 'agNumberColumnFilter', width: 70 },\n    { field: `averageCaseWeight`, headerName: 'AVGCASE', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideNaNAndRound, filter: 'agNumberColumnFilter', width: 70 },\n    { field: `bestCaseWeight`, headerName: 'BESTCASE', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideNaNAndRound, filter: 'agNumberColumnFilter', width: 70 },\n  ], []);\n\n  const gridOptions = useMemo(() => ({\n    rowHeight: 33,\n    rowSelection: 'single',\n    // suppressDragLeaveHidesColumns: true,\n    suppressScrollOnNewData: true,\n    suppressCellFocus: true\n  }), []);\n\n  const defaultColDef = useMemo(() => ({\n    sortable: true,\n    width: 45,\n    headerClass: 'relicsTableHeader',\n    sortingOrder: ['desc', 'asc'],\n    filterParams: { maxNumConditions: 100 }\n  }), []);\n\n  const cellClickedListener = useCallback(event => {\n    console.log('cellClicked', event);\n    setSelectedRelic(event.data)\n  }, []);\n\n  const onCellDoubleClickedListener = useCallback(e => {\n    console.log('cellDblClicked', e);\n    setSelectedRelic(e.data);\n    setEditModalOpen(true);\n  }, []);\n\n  function onAddOk(relic) {\n    DB.setRelic(relic)\n    setRelicRows(DB.getRelics())\n    SaveState.save()\n\n    setSelectedRelic(relic)\n\n    Message.success('Successfully added relic')\n    console.log('onAddOk', relic)\n  }\n\n  function onEditOk(relic) {\n    relic.id = selectedRelic.id\n\n    const updatedRelic = { ...selectedRelic, ...relic }\n\n    if (updatedRelic.equippedBy) {\n      DB.equipRelic(updatedRelic, updatedRelic.equippedBy)\n    } else {\n      DB.unequipRelicById(updatedRelic.id);\n    }\n\n    DB.setRelic(updatedRelic)\n    setRelicRows(DB.getRelics())\n    SaveState.save()\n\n    setSelectedRelic(updatedRelic)\n\n    window.forceOptimizerBuildPreviewUpdate()\n    window.forceCharacterTabUpdate()\n\n    Message.success('Successfully edited relic')\n    console.log('onEditOk', updatedRelic)\n  }\n\n  function editClicked() {\n    console.log('edit clicked');\n    setEditModalOpen(true)\n  }\n\n  function addClicked() {\n    console.log('add clicked');\n    setAddModalOpen(true)\n  }\n\n  function deleteClicked() {\n    console.log('delete clicked');\n\n    if (!selectedRelic) return Message.error('No relic selected')\n\n    DB.deleteRelic(selectedRelic.id)\n    setRelicRows(DB.getRelics())\n    setSelectedRelic(undefined)\n    SaveState.save()\n\n    Message.success('Successfully deleted relic')\n  }\n\n\n  return (\n    <Flex style={{ display: props.active ? 'block' : 'none', width: 1250 }}>\n      <RelicModal selectedRelic={selectedRelic} type='add' onOk={onAddOk} setOpen={setAddModalOpen} open={addModalOpen} />\n      <RelicModal selectedRelic={selectedRelic} type='edit' onOk={onEditOk} setOpen={setEditModalOpen} open={editModalOpen} />\n      <Flex vertical gap={10}>\n\n        <RelicFilterBar />\n\n        <div id=\"relicGrid\" className=\"ag-theme-balham-dark\" style={{ width: 1250, height: 500, resize: 'vertical', overflow: 'hidden' }}>\n\n          <AgGridReact\n            ref={gridRef} // Ref for accessing Grid's API\n\n            rowData={relicRows} // Row Data for Rows\n            gridOptions={gridOptions}\n\n            columnDefs={columnDefs} // Column Defs for Columns\n            defaultColDef={defaultColDef} // Default Column Properties\n\n            animateRows={true} // Optional - set to 'true' to have rows animate when sorted\n            headerHeight={24}\n            rowSelection='multiple' // Options - allows click selection of rows\n\n            onCellClicked={cellClickedListener} // Optional - registering for Grid Event\n            onCellDoubleClicked={onCellDoubleClickedListener}\n          />\n        </div>\n        <Flex gap={10}>\n          <Button type=\"primary\" onClick={editClicked} style={{ width: '150px' }} >\n            Edit Relic\n          </Button>\n          <Button type=\"primary\" onClick={addClicked} style={{ width: '150px' }} >\n            Add New Relic\n          </Button>\n          <Popconfirm\n            title=\"Confirm\"\n            description=\"Delete this relic?\"\n            onConfirm={deleteClicked}\n            placement=\"bottom\"\n            okText=\"Yes\"\n            cancelText=\"Cancel\"\n          >\n            <Button type=\"primary\" style={{ width: '150px' }} >\n              Delete Relic\n            </Button>\n          </Popconfirm>\n        </Flex>\n        <Flex gap={10}>\n          <RelicPreview relic={selectedRelic} />\n          <Flex style={{ display: 'block' }}>\n            <TooltipImage type={Hint.relics()} />\n          </Flex>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\nRelicsTab.propTypes = {\n  active: PropTypes.bool,\n}\n","import React from 'react';\nimport { Divider, Flex, Image, Typography } from 'antd';\nimport RelicPreview from './RelicPreview';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { RelicScorer } from '../lib/relicScorer.ts';\nimport { StatCalculator } from '../lib/statCalculator';\nimport { DB } from '../lib/db';\nimport { Assets } from '../lib/assets';\nimport { Utils } from '../lib/utils';\nimport { Constants } from '../lib/constants.ts';\n\nconst { Text } = Typography;\n\nconst StatText = styled(Text)`\n  font-family: Segoe UI,Frutiger,Frutiger Linotype,Dejavu Sans,Helvetica Neue,Arial,sans-serif;\n  font-size: 17px;\n  font-weight: 400;\n`\n\nlet defaultGap = 8;\nlet parentH = 280 * 3 + defaultGap * 2;\nlet parentW = 150 + 200 + defaultGap;\nlet innerW = 1024;\nlet lcParentH = 280;\nlet lcParentW = 240;\nlet lcInnerW = 250;\nlet lcInnerH = 1260 / 902 * lcInnerW;\nlet middleColumnWidth = 240;\n\nexport function CharacterPreview(props) {\n  console.log('CharacterPreview', props)\n\n  const { source, character } = props;\n\n  let relicsById = window.store(s => s.relicsById)\n  let characterTabBlur = window.store(s => s.characterTabBlur);\n  let setCharacterTabBlur = window.store(s => s.setCharacterTabBlur);\n  let isScorer = source == 'scorer'\n\n  if (!character) {\n    return (\n      <Flex style={{ display: 'flex', height: parentH }} gap={defaultGap}>\n        <div style={{ width: parentW, overflow: 'hidden', outline: '2px solid #243356', height: '100%', borderRadius: '10px' }}>\n        </div>\n\n        <Flex gap={defaultGap}>\n          <Flex vertical gap={defaultGap} align='center' style={{ outline: '2px solid #243356', width: '100%', height: '100%', borderRadius: '10px' }}>\n            <Flex vertical style={{ width: middleColumnWidth, height: 280 * 2 + defaultGap }} justify='space-between'>\n              <Flex></Flex>\n            </Flex>\n          </Flex>\n\n          <Flex vertical gap={defaultGap}>\n            <RelicPreview />\n            <RelicPreview />\n            <RelicPreview />\n          </Flex>\n\n          <Flex vertical gap={defaultGap}>\n            <RelicPreview />\n            <RelicPreview />\n            <RelicPreview />\n          </Flex>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  let displayRelics\n  let scoringResults\n  let finalStats\n  if (isScorer) {\n    let relicsArray = Object.values(character.equipped)\n    scoringResults = RelicScorer.scoreCharacterWithRelics(character, relicsArray);\n    displayRelics = character.equipped\n    finalStats = StatCalculator.calculateCharacterWithRelics(character, Object.values(character.equipped));\n  } else {\n    scoringResults = RelicScorer.scoreCharacter(character);\n    displayRelics = {\n      Head: relicsById[character.equipped?.Head],\n      Hands: relicsById[character.equipped?.Hands],\n      Body: relicsById[character.equipped?.Body],\n      Feet: relicsById[character.equipped?.Feet],\n      PlanarSphere: relicsById[character.equipped?.PlanarSphere],\n      LinkRope: relicsById[character.equipped?.LinkRope],\n    }\n    finalStats = StatCalculator.calculate(character);\n  }\n  let scoredRelics = scoringResults.relics || []\n\n  console.log('SCORING RESULTS', scoringResults)\n\n  console.log({ finalStats })\n  console.log({ character })\n\n  let lightConeId = character.form.lightCone\n  let lightConeLevel = character.form.lightConeLevel\n  let lightConeSuperimposition = character.form.lightConeSuperimposition\n  let lightConeMetadata = DB.getMetadata().lightCones[lightConeId]\n  let lightConeName = lightConeMetadata?.name || ''\n  let lightConeSrc = Assets.getLightConePortrait(lightConeMetadata)\n\n  let characterId = character.form.characterId\n  let characterLevel = character.form.characterLevel\n  let characterEidolon = character.form.characterEidolon\n  let characterMetadata = DB.getMetadata().characters[characterId]\n  let characterName = characterMetadata.displayName\n  let characterPath = characterMetadata.path\n  let characterElement = characterMetadata.element\n\n  console.log('Level ' + characterLevel + ' E' + characterEidolon)\n  console.log('Level ' + lightConeLevel + ' S' + lightConeSuperimposition)\n\n  let elementToDmgValueMapping = {\n    Physical: Constants.Stats.Physical_DMG,\n    Fire: Constants.Stats.Fire_DMG,\n    Ice: Constants.Stats.Ice_DMG,\n    Thunder: Constants.Stats.Lightning_DMG,\n    Wind: Constants.Stats.Wind_DMG,\n    Quantum: Constants.Stats.Quantum_DMG,\n    Imaginary: Constants.Stats.Imaginary_DMG,\n  }\n  let elementalDmgValue = elementToDmgValueMapping[characterElement]\n  // let cv = character.cv\n\n  console.log({\n    lightConeMetadata,\n    characterMetadata\n  })\n\n  let iconSize = 25\n\n  function StatRow(props) {\n    const { stat } = props\n    let readableStat = stat.replace('DMG Boost', 'DMG')\n    let value = finalStats[stat]\n\n    if (stat == 'CV') {\n      value = Utils.truncate10ths(value).toFixed(1)\n    } else if (stat == Constants.Stats.SPD) {\n      value = Utils.truncate10ths(value).toFixed(1)\n    } else if (Utils.isFlat(stat)) {\n      value = Math.floor(value)\n    } else {\n      value = Utils.truncate10ths(value * 100).toFixed(1)\n    }\n\n    if (!finalStats) return console.log('No final stats');\n    return (\n      <Flex justify='space-between' align='center'>\n        <img src={Assets.getStatIcon(stat)} style={{ width: iconSize, height: iconSize, marginRight: 3 }} />\n        <StatText>{readableStat}</StatText>\n        <Divider style={{ margin: 'auto 10px', flexGrow: 1, width: 'unset', minWidth: 'unset' }} dashed />\n        <StatText>{`${value}${Utils.isFlat(stat) || stat == 'CV' ? '' : '%'}`}</StatText>\n      </Flex>\n    )\n  }\n  StatRow.propTypes = {\n    stat: PropTypes.string,\n  };\n\n  function Rarity() {\n    let children = []\n    for (let i = 0; i < characterMetadata.rarity; i++) {\n      children.push(\n        <img src={Assets.getStar()} key={i} style={{ width: 20, height: 20 }} />\n      )\n    }\n    return (\n      <Flex gap={0} align='center'>\n        {children}\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex style={{ display: character ? 'flex' : 'none', height: parentH }} gap={defaultGap}>\n      <div style={{ width: `${parentW}px`, height: `${parentH}px`, overflow: 'hidden', borderRadius: '10px' }}>\n        <div\n          style={{\n            position: 'relative',\n          }}\n        >\n          <img\n            src={Assets.getCharacterPortraitById(character.id)}\n            style={{\n              position: 'absolute',\n              left: -DB.getMetadata().characters[character.id].imageCenter.x / 2 + parentW / 2,\n              top: -DB.getMetadata().characters[character.id].imageCenter.y / 2 + parentH / 2,\n              width: innerW,\n              filter: (characterTabBlur && !isScorer) ? 'blur(20px)' : ''\n            }}\n            onLoad={() => setTimeout(() => setCharacterTabBlur(false), 100)}\n          />\n        </div>\n      </div>\n\n      <Flex gap={defaultGap}>\n        <Flex vertical gap={defaultGap} align='center'>\n          <Flex vertical style={{ width: middleColumnWidth, height: 280 * 2 + defaultGap }} justify='space-between'>\n            <Flex vertical gap={defaultGap}>\n              <Flex justify='space-between' style={{ height: 50 }}>\n                <Image\n                  preview={false}\n                  width={50}\n                  src={Assets.getElement(characterElement)}\n                />\n                <Rarity />\n                <Image\n                  preview={false}\n                  width={50}\n                  src={Assets.getPathFromClass(characterPath)}\n                />\n              </Flex>\n              <Flex vertical>\n                <StatText style={{ fontSize: 24, fontWeight: 400, textAlign: 'center' }}>\n                  {characterName}\n                </StatText>\n                <StatText style={{ fontSize: 18, fontWeight: 400, textAlign: 'center' }}>\n                  {`Lv${characterLevel} E${characterEidolon}`}\n                </StatText>\n              </Flex>\n            </Flex>\n\n            <Flex vertical style={{ width: middleColumnWidth, paddingLeft: 8, paddingRight: 12 }} gap={4}>\n              <StatRow stat={Constants.Stats.HP} source={props.source} />\n              <StatRow stat={Constants.Stats.ATK} source={props.source} />\n              <StatRow stat={Constants.Stats.DEF} source={props.source} />\n              <StatRow stat={Constants.Stats.SPD} source={props.source} />\n              <StatRow stat={Constants.Stats.CR} source={props.source} />\n              <StatRow stat={Constants.Stats.CD} source={props.source} />\n              <StatRow stat={Constants.Stats.EHR} source={props.source} />\n              <StatRow stat={Constants.Stats.RES} source={props.source} />\n              <StatRow stat={Constants.Stats.BE} source={props.source} />\n              <StatRow stat={elementalDmgValue} source={props.source} />\n              <StatRow stat={'CV'} source={props.source} />\n            </Flex>\n\n            <Flex vertical>\n              <StatText style={{ fontSize: 17, fontWeight: 600, textAlign: 'center', color: '#e1a564' }} ellipsis={false}>\n                {`Character score: ${scoringResults.totalScore.toFixed(0)} ${scoringResults.totalScore == 0 ? '' : '(' + scoringResults.totalRating + ')'}`}\n              </StatText>\n            </Flex>\n\n            <Flex vertical>\n              <StatText style={{ fontSize: 18, fontWeight: 400, textAlign: 'center' }} ellipsis={true}>\n                {`${lightConeName}`}&nbsp;\n              </StatText>\n              <StatText style={{ fontSize: 18, fontWeight: 400, textAlign: 'center' }}>\n                {`Lv${lightConeLevel} S${lightConeSuperimposition}`}\n              </StatText>\n            </Flex>\n          </Flex>\n          <div style={{ width: `${lcParentW}px`, height: `${lcParentH}px`, overflow: 'hidden', borderRadius: '10px' }}>\n            <img\n              src={lightConeSrc}\n              style={{\n                width: lcInnerW,\n                transform: `translate(${(lcInnerW - lcParentW) / 2 / lcInnerW * -100}%, ${(lcInnerH - lcParentH) / 2 / lcInnerH * -100 + 8}%)`, // Magic # 8 to fit certain LCs\n                filter: (characterTabBlur && !isScorer) ? 'blur(20px)' : ''\n              }}\n            />\n          </div>\n        </Flex>\n\n        <Flex vertical gap={defaultGap}>\n          <RelicPreview relic={displayRelics.Head} source={props.source} characterId={characterId} score={scoredRelics.find(x => x.part == Constants.Parts.Head)} />\n          <RelicPreview relic={displayRelics.Body} source={props.source} characterId={characterId} score={scoredRelics.find(x => x.part == Constants.Parts.Body)} />\n          <RelicPreview relic={displayRelics.PlanarSphere} source={props.source} characterId={characterId} score={scoredRelics.find(x => x.part == Constants.Parts.PlanarSphere)} />\n        </Flex>\n\n        <Flex vertical gap={defaultGap}>\n          <RelicPreview relic={displayRelics.Hands} source={props.source} characterId={characterId} score={scoredRelics.find(x => x.part == Constants.Parts.Hands)} />\n          <RelicPreview relic={displayRelics.Feet} source={props.source} characterId={characterId} score={scoredRelics.find(x => x.part == Constants.Parts.Feet)} />\n          <RelicPreview relic={displayRelics.LinkRope} source={props.source} characterId={characterId} score={scoredRelics.find(x => x.part == Constants.Parts.LinkRope)} />\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\nCharacterPreview.propTypes = {\n  source: PropTypes.string,\n  character: PropTypes.object\n};","import React, { useCallback, useMemo, useRef } from 'react';\n\nimport { Button, Flex, Image, Popconfirm, Typography } from 'antd';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport \"ag-grid-community/styles/ag-theme-balham.css\";\nimport \"../style/style.css\";\nimport DB from '../lib/db';\nimport { CharacterPreview } from './CharacterPreview';\nimport { Assets } from \"../lib/assets\";\nimport { SaveState } from \"../lib/saveState\";\nimport { Message } from \"../lib/message\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nfunction cellImageRenderer(params) {\n  let data = params.data\n  let characterIconSrc = Assets.getCharacterAvatarById(data.id)\n\n  // console.log('CellRenderer', data, characterMetadata)\n\n  return (\n    <Image\n      preview={false}\n      width={50}\n      src={characterIconSrc}\n      style={{ flex: '0 0 auto', maxWidth: '100%', minWidth: 50 }}\n    />\n  )\n}\n\nfunction cellRankRenderer(params) {\n  let data = params.data\n  let character = DB.getCharacters().find(x => x.id == data.id)\n\n  // console.log('CellRenderer', data, characterMetadata)\n  return (\n    <Text style={{ height: '100%' }}>\n      {character.rank + 1}\n    </Text>\n  )\n}\n\nfunction cellNameRenderer(params) {\n  let data = params.data\n  let characterMetadata = DB.getMetadata().characters[data.id]\n  let characterName = characterMetadata.displayName\n\n  let equippedNumber = data.equipped ? Object.values(data.equipped).filter(x => x != undefined).length : 0\n  // console.log('CellRenderer', equippedNumber, data, characterMetadata)\n  let color = '#81d47e'\n  if (equippedNumber < 6) color = '#eae084'\n  if (equippedNumber < 1) color = '#d72f2f'\n\n  return (\n    <Flex align='center' justify='flex-start' style={{ height: '100%', width: '100%' }}>\n      <Text style={{ margin: 'auto', textAlign: 'center', overflow: 'hidden', textOverflow: 'ellipsis', textWrap: 'wrap', fontSize: 14, width: '100%', lineHeight: '18px' }}>\n        {characterName}\n      </Text>\n      <Flex style={{ display: 'block', width: 3, height: '100%', backgroundColor: color }}>\n\n      </Flex>\n    </Flex>\n  )\n}\n\n\nexport default function CharacterTab(props) {\n  console.log('CharacterTab')\n  const characterGrid = useRef(); // Optional - for accessing Grid's API\n  window.characterGrid = characterGrid;\n\n  const [characterRows, setCharacterRows] = React.useState(DB.getCharacters());\n  window.setCharacterRows = setCharacterRows;\n\n  const setSelectedScoringCharacter = window.store(s => s.setSelectedScoringCharacter);\n\n  const characterTabSelectedId = window.store(s => s.characterTabSelectedId)\n  const setCharacterTabSelectedId = window.store(s => s.setCharacterTabSelectedId)\n  const charactersById = window.store(s => s.charactersById)\n  const selectedCharacter = charactersById[characterTabSelectedId]\n\n  const [, forceUpdate] = React.useReducer(o => !o);\n  window.forceCharacterTabUpdate = () => {\n    forceUpdate()\n    characterGrid.current.api.redrawRows()\n  }\n\n  const columnDefs = useMemo(() => [\n    { field: '', headerName: 'Icon', cellRenderer: cellImageRenderer, width: 52 },\n    { field: '', headerName: 'Rank', cellRenderer: cellRankRenderer, width: 50, rowDrag: true },\n    { field: '', headerName: 'Character', flex: 1, cellRenderer: cellNameRenderer },\n  ], []);\n\n  const gridOptions = useMemo(() => ({\n    rowHeight: 50,\n    rowSelection: 'single',\n    rowDragManaged: true,\n    animateRows: true,\n    suppressDragLeaveHidesColumns: true,\n    suppressScrollOnNewData: true,\n    suppressCellFocus: true\n  }), []);\n\n  const defaultColDef = useMemo(() => ({\n    sortable: false,\n    cellStyle: { display: 'flex' }\n  }), []);\n\n  const cellClickedListener = useCallback(event => {\n    console.log('cellClicked', event);\n    let data = event.data\n\n    window.store.getState().setCharacterTabBlur(window.store.getState().characterTabSelectedId != data.id) // Only blur if different character\n    setCharacterTabSelectedId(data.id)\n  }, []);\n\n  // TODO: implement routing to handle this\n  const setActiveKey = window.store(s => s.setActiveKey);\n  const setSelectedOptimizerCharacter = window.store(s => s.setSelectedOptimizerCharacter);\n  const cellDoubleClickedListener = useCallback(e => {\n    // setSelectedChar\n    setSelectedOptimizerCharacter(charactersById[e.data.id]);\n\n    // set view\n    setActiveKey('optimizer');\n  }, []);\n\n  function drag(event, index) {\n    const dragged = event.node.data;\n    DB.insertCharacter(dragged.id, index);\n    SaveState.save()\n    characterGrid.current.api.redrawRows()\n  }\n\n  const onRowDragEnd = useCallback(event => {\n    drag(event, event.overIndex)\n  }, []);\n\n  const onRowDragLeave = useCallback(event => {\n    if (event.overIndex == 0) {\n      drag(event, 0)\n    } else if (event.overIndex == -1 && event.vDirection == 'down') {\n      drag(event, DB.getCharacters().length)\n    } else if (event.overIndex == -1 && event.vDirection == 'up') {\n      drag(event, 0)\n    } else {\n      drag(event, event.overIndex)\n    }\n  }, []);\n\n  function removeClicked() {\n    let selectedNodes = characterGrid.current.api.getSelectedNodes()\n    if (!selectedNodes || selectedNodes.length == 0) {\n      return\n    }\n\n    let row = selectedNodes[0].data\n    let id = row.id\n\n    DB.removeCharacter(id)\n    setCharacterRows(DB.getCharacters())\n    setCharacterTabSelectedId(undefined)\n    if (window.relicsGrid?.current?.api) {\n      window.relicsGrid.current.api.redrawRows()\n    }\n\n    SaveState.save()\n\n    Message.success('Successfully removed character')\n  }\n\n  function unequipClicked() {\n    console.log('unequipClicked', DB.getCharacterById(characterTabSelectedId))\n\n    let selectedNodes = characterGrid.current.api.getSelectedNodes()\n    if (!selectedNodes || selectedNodes.length == 0) {\n      return\n    }\n    let row = selectedNodes[0].data\n    let id = row.id\n\n    DB.unequipCharacter(id);\n\n    characterGrid.current.api.redrawRows()\n    window.forceCharacterTabUpdate()\n    Message.success('Successfully unequipped character')\n    window.relicsGrid.current.api.redrawRows()\n\n    SaveState.save()\n  }\n\n  function scoringAlgorithmClicked() {\n    console.log('Scoring algorithm clicked', characterTabSelectedId)\n    setSelectedScoringCharacter(characterTabSelectedId)\n    window.setIsScoringModalOpen(true)\n  }\n\n  let defaultGap = 8;\n\n  let parentH = 280 * 3 + defaultGap * 2;\n\n  return (\n    <div style={{\n      ...{ display: props.active ? 'block' : 'none' },\n      ...{\n        height: '100%'\n      }\n    }}>\n      <Flex style={{ height: '100%' }} gap={8}>\n        <Flex vertical gap={10}>\n          <div id=\"characterGrid\" className=\"ag-theme-balham-dark\" style={{ display: 'block', width: 230, height: parentH - 85 }}>\n            <AgGridReact\n              ref={characterGrid} // Ref for accessing Grid's API\n\n              rowData={characterRows} // Row Data for Rows\n              gridOptions={gridOptions}\n              getRowNodeId={data => data.id}\n\n              columnDefs={columnDefs} // Column Defs for Columns\n              defaultColDef={defaultColDef} // Default Column Properties\n              deltaRowDataMode={true}\n\n              headerHeight={24}\n\n              onCellClicked={cellClickedListener} // Optional - registering for Grid Event\n              onCellDoubleClicked={cellDoubleClickedListener}\n              onRowDragEnd={onRowDragEnd}\n              onRowDragLeave={onRowDragLeave}\n            />\n          </div>\n          <Flex vertical gap={10}>\n            <Flex justify='space-between'>\n\n              <Popconfirm\n                title=\"Confirm\"\n                description=\"Remove this character?\"\n                onConfirm={removeClicked}\n                placement=\"bottom\"\n                okText=\"Yes\"\n                cancelText=\"Cancel\"\n              >\n                <Button style={{ width: 110 }}>\n                  Remove\n                </Button>\n              </Popconfirm>\n              <Popconfirm\n                title=\"Confirm\"\n                description=\"Unequip this character?\"\n                onConfirm={unequipClicked}\n                placement=\"bottom\"\n                okText=\"Yes\"\n                cancelText=\"Cancel\"\n              >\n                <Button style={{ width: 110 }}>\n                  Unequip\n                </Button>\n              </Popconfirm>\n            </Flex>\n            <Button style={{}} onClick={scoringAlgorithmClicked}>\n              Scoring algorithm\n            </Button>\n          </Flex>\n        </Flex>\n        <CharacterPreview character={selectedCharacter} />\n      </Flex>\n    </div>\n  );\n}\nCharacterTab.propTypes = {\n  active: PropTypes.bool,\n};","import React from 'react';\nimport { Flex, Typography, } from 'antd';\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nexport default function ComingSoonTab(props) {\n  return (\n    <div style={{ display: props.active ? 'block' : 'none' }}>\n      <Flex style={{ margin: 20 }}>\n        <Text>\n          More Star Rail tools coming soon! Drop by the <Typography.Link target=\"_blank\" href=\"https://discord.gg/rDmB4Un7qg\">Discord server</Typography.Link> for updates, to share ideas, or just hang out.\n        </Text>\n      </Flex>\n    </div>\n  );\n}\nComingSoonTab.propTypes = {\n  active: PropTypes.bool,\n};","import React, { useEffect, useState } from 'react';\nimport { Button, Flex, Form, Input, Segmented, Typography, } from 'antd';\nimport { CharacterPreview } from './CharacterPreview';\nimport { SaveState } from '../lib/saveState';\nimport { Message } from \"../lib/message\";\nimport { CharacterConverter } from \"../lib/characterConverter\";\nimport { Assets } from \"../lib/assets\";\nimport PropTypes from \"prop-types\";\nimport DB from \"../lib/db\";\n\nconst { Text } = Typography;\n\nexport default function RelicScorerTab(props) {\n  console.log('RelicScorerTab')\n\n  const [loading, setLoading] = useState(false);\n  const [availableCharacters, setAvailableCharacters] = useState([])\n\n  let scorerId = window.store(s => s.scorerId);\n  let setScorerId = window.store(s => s.setScorerId);\n\n  const [scorerForm] = Form.useForm();\n  window.scorerForm = scorerForm\n\n  function buttonClick() {\n    setLoading(true)\n  }\n\n  function onFinish(x) {\n    console.log('finish', x)\n    // let data = CharacterStats.getTestData()\n\n    const options = {\n      method: 'POST',\n      body: x.scorerId,\n    };\n\n    setScorerId(x.scorerId);\n    SaveState.save()\n\n    // fetch('http://127.0.0.1:5000/getAccount', options) // Local testing\n    fetch('https://08hm0krwt2.execute-api.us-west-2.amazonaws.com/dev/getAccount', options)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(data);\n        if (!data.status || data.status != 'SUCCESS') {\n          setLoading(false)\n          Message.error('Error loading ID')\n          return 'ERROR'\n        }\n        data = data.data\n        let characters = [\n          data.detailInfo.avatarDetailList[3],\n          data.detailInfo.avatarDetailList[0],\n          data.detailInfo.avatarDetailList[1],\n          data.detailInfo.avatarDetailList[2],\n        ]\n          .filter(x => !!x)\n          .filter((item, index, array) => {\n            return array.findIndex((i) => i.avatarId === item.avatarId) === index;\n          });\n\n        console.log('characters', characters)\n\n        let converted = characters.map(x => CharacterConverter.convert(x))\n        setAvailableCharacters(converted)\n        setLoading(false)\n        console.log(converted)\n      })\n      .catch(error => {\n        console.error('Fetch error:', error);\n        setLoading(false)\n      });\n  }\n\n  function scoringClicked() {\n    window.setIsScoringModalOpen(true)\n  }\n\n  function CharacterPreviewSelection(props) {\n    const [selectedCharacter, setSelectedCharacter] = useState(availableCharacters[0]);\n    let setSelectedScoringCharacter = window.store(s => s.setSelectedScoringCharacter);\n\n    // TODO: Revisit if force updates are necessary\n    const [, forceUpdate] = React.useReducer(o => !o, true);\n    window.forceRelicScorerTabUpdate = forceUpdate\n\n    console.log('CharacterPreviewSelection', props)\n\n    useEffect(() => {\n      setSelectedScoringCharacter(selectedCharacter?.id)\n    }, [selectedCharacter])\n\n    let options = []\n    for (let i = 0; i < props.availableCharacters.length; i++) {\n      let availableCharacter = props.availableCharacters[i]\n      options.push({\n        label: (\n          <Flex align='center'>\n            <img style={{ width: 100 }} src={Assets.getCharacterAvatarById(availableCharacter.id)}></img>\n          </Flex>\n        ),\n        value: availableCharacter.id,\n      })\n    }\n\n    function selectionChange(selected) {\n      console.log('selectionChange', selected)\n      setSelectedCharacter(availableCharacters.find(x => x.id == selected))\n      setSelectedScoringCharacter(selected)\n    }\n\n    async function importClicked() {\n      let newRelics = availableCharacters\n        .flatMap(x => Object.values(x.equipped))\n        .filter(x => !!x)\n\n      console.log('importClicked', availableCharacters, newRelics)\n      DB.mergeVerifiedRelicsWithState(newRelics)\n      SaveState.save()\n    }\n\n    return (\n      <Flex vertical align='center' gap={5} style={{ marginBottom: 100 }}>\n        <Flex gap={30} style={{ display: (availableCharacters.length > 0) ? 'block' : 'none' }}>\n          <Button onClick={importClicked}>\n            Import relics into optimizer\n          </Button>\n        </Flex>\n\n        <Flex vertical align='center'>\n          <Segmented options={options} onChange={selectionChange} />\n        </Flex>\n        <div id='previewWrapper' style={{ padding: '5px', backgroundColor: '#182239' }}>\n          <CharacterPreview class='relicScorerCharacterPreview' character={selectedCharacter} source='scorer' />\n        </div>\n      </Flex>\n    )\n  }\n  CharacterPreviewSelection.propTypes = {\n    availableCharacters: PropTypes.array,\n  }\n\n\n  let initialId = undefined\n  let savedId = scorerId\n  if (savedId) {\n    try {\n      let parsed = parseInt(savedId)\n      initialId = isNaN(parsed) ? undefined : parsed\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  return (\n    <div style={{ display: props.active ? 'block' : 'none' }}>\n      <Flex vertical gap={0} align='center'>\n        <Flex gap={10} vertical align='center'>\n          <Text>Input your account ID to score your support characters. The scorer will display the character's stats at level 80 with maxed traces</Text>\n        </Flex>\n        <Form\n          form={scorerForm}\n          onFinish={onFinish}\n          initialValues={{ scorerId: initialId }}\n        >\n          <Flex style={{ margin: 20, width: 1000 }} justify=\"center\" align=\"center\" gap={10}>\n            <Text style={{ width: 'fit-content' }}>Account ID:</Text>\n            <Form.Item size=\"default\" name='scorerId'>\n              <Input style={{ width: 150 }} />\n            </Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading} onClick={buttonClick}>\n              Submit\n            </Button>\n            <Button\n              style={{ width: 200 }}\n              onClick={scoringClicked}\n            >\n              Scoring algorithm\n            </Button>\n          </Flex>\n        </Form>\n        <CharacterPreviewSelection availableCharacters={availableCharacters} />\n      </Flex>\n    </div>\n  );\n}\nRelicScorerTab.propTypes = {\n  active: PropTypes.bool,\n}\n","import React from 'react';\nimport { Button, Divider, Flex, Popconfirm, Typography } from 'antd';\nimport { Message } from '../lib/message';\n\nimport sampleSave from '../data/sample-save.json';\nimport DB from \"../lib/db\";\nimport PropTypes from \"prop-types\";\nimport { Assets } from \"../lib/assets\";\n\nconst { Text } = Typography;\n\nexport default function GettingStartedTab(props) {\n  console.log('GettingStartedTab ')\n\n  function tryItOutClicked() {\n    DB.setStore(JSON.parse(JSON.stringify(sampleSave)))\n\n    Message.success('Successfully loaded data')\n  }\n\n  let screenshotStyle = {border: '2px solid #243356'};\n  let dividerStyle = {marginTop: 40};\n  let titleStyle = {textDecoration: 'underline'}\n  return (\n    <div style={{display: props.active ? 'block' : 'none'}}>\n    <Text>\n      <Flex vertical gap={5} style={{marginLeft: 20, marginBottom: 50, width: 1000}}>\n          <h2>\n            Try it out!\n          </h2>\n\n          <p>\n            If you would like to give the optimizer a try before doing any relic importing, use this to load a sample save file and check out the features.\n          </p>\n          \n          <Popconfirm\n            title=\"Confirm\"\n            description=\"Load a sample save file?\"\n            onConfirm={tryItOutClicked}\n            placement=\"bottom\"\n            okText=\"Yes\"\n            cancelText=\"Cancel\"\n          >\n            <Button type=\"primary\" style={{width: 200}}>\n              Try it out!\n            </Button>\n          </Popconfirm>\n\n\n          <Divider style={dividerStyle}></Divider>\n          {/* ======================================================================================================================= */}\n\n          <h2>\n            Importing\n          </h2>\n\n          <p>\n            The optimizer needs a database of relics to run against.\n            Currently there are 2 supported OCR relic scanners:\n          </p>\n\n          <ul>\n            <li>\n              Recommended: Kel-Z HSR Scanner (<Typography.Link target=\"_blank\" href='https://github.com/kel-z/HSR-Scanner/releases/latest'>Github</Typography.Link>)\n              <ul>\n                <li>Supports all 16:9 resolutions</li>\n                <li>Supports character and light cone imports</li>\n              </ul>\n            </li>\n            <li>\n              Fribbels HSR Scanner (<Typography.Link target=\"_blank\" href='https://github.com/fribbels/Fribbels-Honkai-Star-Rail-Scanner/releases/latest'>Github</Typography.Link>)\n            </li>\n          </ul>\n\n          <Divider style={dividerStyle}></Divider>\n          {/* ======================================================================================================================= */}\n          \n          <h2>\n            Optimizer tab\n          </h2>\n\n          <img src={Assets.getGuideImage('filters')} style={screenshotStyle}></img>\n\n          <h4 style={titleStyle}>\n            Character / Light cone\n          </h4>\n          <p>\n            This section is where the character and light cone options are selected. \n            Both of the level options affect the base stats for the optimization search.\n            Character eidolon effects are selectable from the Character passives section.\n          </p>\n\n          <h4 style={titleStyle}>\n            Main Stats\n          </h4>\n\n          <p>\n            The main stat filters restrict the input for the optimizer to the preferred body, feet, planar sphere, and link rope stats. Multiple options can be chosen for each slot.\n            In most cases, these main stats should be filled in to find best results and exclude unwanted builds.\n          </p>\n\n          <h4 style={titleStyle}>\n            Set filters\n          </h4>\n\n          <img src={Assets.getGuideImage('sets')} style={screenshotStyle}></img>\n\n          <p>\n            The relic set filter allows for a combination of 2-piece sets, 4-piece sets, or can be left empty.\n            When multiple options are chosen, the search results will only show builds with least one of the selected filters active.\n            Conditional set effects can be customized from the menu.\n          </p>\n\n          <h4 style={titleStyle}>\n            Stat filters\n          </h4>\n\n          <p>\n            This section defines the minimum / maximum stats to filter the results by. \n            Left side is minimum and right side is maximum, both inclusive. In this above example, only results with &ge; 134 speed AND &ge; 35% Crit Rate  are shown.\n            Stat abbreviations are ATK / HP / DEF / SPD / Crit Rate / Crit Damage / Effect Hit Rate / Effect RES / Break Effect.\n          </p>\n          \n          <p>\n            Important note: relics typed in manually or imported with the OCR tool may be affected by hidden decimal points for speed that aren't shown by ingame stats.\n            For example, 5 star relics can have speed substats of values between 2.0 - 2.6, which would all show ingame as 2. \n            This means that speed results should be treated as minimum values, as the real value may be slightly higher ingame.\n            This also means that maximum filters on speed should be used carefully since they may be too restrictive.\n          </p>\n\n          <h4 style={titleStyle}>\n            Combat buffs\n          </h4>\n          \n          <p>\n            This section defines buffs to the character to be used in the optimization calculations.\n            These buffs can come from teammate abilities/light cones etc.\n            Only team buffs should be entered here since the selected character's own passives should already be accounted for.\n          </p>\n\n          <h4 style={titleStyle}>\n            Optimizer options\n          </h4>\n\n          <p>\n            This section defines some general additional options for the optimizer and control actions. \n          </p>\n          \n          <ul>\n            <li>Rank filter - Rank characters by dragging them on the character page, and when enabled, characters may only take relics from lower ranked characters. This is useful for cases where multiple characters use the same set, but one character should be prioritized over the other.</li>\n            <li>Maxed main stat - Assume the main stat for relics are maxed for their respective grades</li>\n            <li>Keep current relics - The character must keep its currently equipped relics, and the optimizer will try to fill in empty slots</li>\n            <li>Enhance / grade - Select the minimum enhance to search for and minimum stars for relics to include. If using non +15 relics, the 'Maxed main stat' filter might be good to enable to show maxed potential stats.\n            Be careful selecting +0 relics because this increases search time if you imported all relics.</li>\n          </ul>\n\n          <Divider style={dividerStyle}></Divider>\n          {/* ======================================================================================================================= */}\n\n          <h2>\n            Results\n          </h2>\n\n          <img src={Assets.getGuideImage('results')} style={screenshotStyle}></img>\n\n          <h4 style={titleStyle}>\n            Result rows\n          </h4>\n\n          <p>\n            This section displays all the results found that match the filters.\n            Every row represents one build that was found.\n            The pinned top row shows the character's currently equipped build.\n            Clicking on each row will show the relics used in the selected build.\n            There may be multiple pages of results, so clicking a column header to sort the results by a stat or rating can make it easier to find desired builds.\n          </p>\n\n          <h4 style={titleStyle}>\n            Permutations\n          </h4>\n\n          <p>\n            This section shows the number of permutations the optimizer has to search and details on the number of matching relics per slot. \n            If any of the numbers are zero, that indicates that no relics were found that would satisfy the constraints.\n          </p>\n\n          <ul>\n            <li>Perms - Number of permutations that need to be searched. Stricter filters will reduce permutations and search time</li>\n            <li>Searched - Number of permutations completed in an in-progress search</li>\n            <li>Results - Number of displayed results that satisfy the stat filters</li>\n          </ul>\n\n          <h4 style={titleStyle}>\n            Selected build\n          </h4>\n          <p>\n            This section displays the selected build from the grid, and which relics are used & who they are currently equipped on. \n            Pressing the 'Equip' button will assign the relics to the selected character in the optimizer, though the ingame character build is not affected.\n          </p>\n\n          <Divider style={dividerStyle}></Divider>\n          {/* ======================================================================================================================= */}\n\n          <h2>\n            Character tab\n          </h2>\n\n          <img src={Assets.getGuideImage('characterTab')} style={screenshotStyle}></img>\n\n          <h4 style={titleStyle}>\n            Character ranking\n          </h4>\n\n          <p>\n            This section displays all the optimized characters and their ranking order. \n            Characters are added to this list from the Optimizer tab, when their filters are applied and 'Start' is pressed.\n          </p>\n\n          <p>\n            The ranking is important when used with the 'Rank filter' on the Optimizer tab. \n            When enabled, characters may only take relics from lower ranked characters.\n            For example, the rank 2 character may take relics from rank 3, but cannot take from rank 2. Rank 1 can take from any other character.\n            Rows can be dragged to re-order characters.\n          </p>\n\n          <p>\n            The colored highlight on the right of the grid shows the equipped item status of the character. \n            In the above example, Jingliu's green indicator means she has all 6 relics equipped, Bronya's yellow indicator means she is missing at least one relic from her build, and Natasha's red indicator means she has no relics equipped.\n          </p>\n\n          <h4 style={titleStyle}>\n            Stats summary\n          </h4>\n\n          <p>\n            This section displays the character's stats with their base stats / light cone / maxed traces / and relics equipped in the optimizer. \n            Note that similar to the optimizer results, the actual values ingame may be slightly higher than displayed here due to hidden decimal values on relic stats.\n          </p>\n\n\n          <Divider style={dividerStyle}></Divider>\n          {/* ======================================================================================================================= */}\n\n          <h2>\n            Relics tab\n          </h2>\n\n          <img src={Assets.getGuideImage('relicsTab')} style={screenshotStyle}></img>\n\n          <h4 style={titleStyle}>\n            Relics grid\n          </h4>\n\n          <p>\n            This section displays all the relics that were added / imported into the optimizer. \n            Relics should be updated occasionally with the importer to add in newly acquired relics.\n            Clicking columns will sort the relics grid.\n          </p>\n        </Flex>\n      </Text>\n    </div>\n  );\n}\nGettingStartedTab.propTypes = {\n  active: PropTypes.bool,\n};\n","import React from 'react';\nimport { Button, Flex } from \"antd\";\nimport PropTypes from \"prop-types\"\n\nexport default function BetaTab(props) {\n  const { active } = props\n\n  console.log('Beta Tab')\n\n  const showModal = () => {\n    window.setIsScoringModalOpen(true);\n  };\n\n  return (\n    <div style={{ display: active ? 'block' : 'none' }}>\n      <Flex vertical gap={20} align='center'>\n        <Button type=\"primary\" onClick={showModal}>\n          Open Modal\n        </Button>\n      </Flex>\n    </div>\n  );\n}\n\nBetaTab.propTypes = {\n  active: PropTypes.bool\n};","import React, { useEffect, useMemo, useState } from 'react';\nimport { Button, Collapse, Divider, Flex, Form, InputNumber, Modal, Select, Typography, } from 'antd';\nimport styled from 'styled-components';\n\nimport { Assets } from '../lib/assets';\nimport { Utils } from \"../lib/utils\";\nimport DB from \"../lib/db\";\nimport { Constants } from \"../lib/constants.ts\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nconst TitleDivider = styled(Divider)`\n  margin-top: 10px !important;\n  margin-bottom: 10px !important;\n`\nconst InputNumberStyled = styled(InputNumber)`\n  width: 62px\n`\nconst PStyled = styled.p`\n`\n\nexport default function ScoringModal() {\n  const [scoringAlgorithmForm] = Form.useForm();\n  window.scoringAlgorithmForm = scoringAlgorithmForm\n\n  let selectedScoringCharacter = window.store(s => s.selectedScoringCharacter);\n  let setSelectedScoringCharacter = window.store(s => s.setSelectedScoringCharacter);\n\n  const [isScoringModalOpen, setIsScoringModalOpen] = useState(false);\n  window.setIsScoringModalOpen = setIsScoringModalOpen\n\n  function characterSelectorChange(id) {\n    setSelectedScoringCharacter(id)\n  }\n\n  // Cleans up 0's to not show up on the form\n  function getScoringValuesForDisplay(scoringMetadata) {\n    for (let x of Object.entries(scoringMetadata.stats)) {\n      if (x[1] == 0) {\n        scoringMetadata.stats[x[0]] = null\n      }\n    }\n\n    return scoringMetadata\n  }\n\n  useEffect(() => {\n    let id = selectedScoringCharacter\n    if (id) {\n      let scoringMetadata = Utils.clone(DB.getScoringMetadata(id))\n      scoringMetadata = getScoringValuesForDisplay(scoringMetadata)\n      scoringAlgorithmForm.setFieldsValue(scoringMetadata)\n\n      console.log('Scoring modal opening set as:', scoringMetadata)\n    }\n  }, [selectedScoringCharacter, isScoringModalOpen])\n\n  const panelWidth = 225\n  const defaultGap = 5\n  const selectWidth = 360\n\n  const characterOptions = useMemo(() => {\n    return Utils.generateCharacterOptions()\n  }, []);\n\n  function StatValueRow(props) {\n    return (\n      <Flex justify=\"flex-start\" style={{ width: panelWidth }} align='center' gap={5}>\n        <Form.Item size=\"default\" name={['stats', props.stat]}>\n          <InputNumberStyled controls={false} size=\"small\" />\n        </Form.Item>\n        <Flex>\n          <img src={Assets.getStatIcon(props.stat)} style={{ width: 25, height: 25, marginRight: 3 }}></img>\n          <Text style={{ lineHeight: 1.8 }}>{Constants.StatsToReadable[props.stat]}</Text>\n        </Flex>\n      </Flex>\n    )\n  }\n  StatValueRow.propTypes = {\n    stat: PropTypes.string,\n  }\n\n\n  function onModalOk() {\n    console.log('Modal OK');\n    scoringAlgorithmForm.submit()\n    setIsScoringModalOpen(false)\n\n    // TODO revisit force renders\n    setTimeout(() => window.forceRelicScorerTabUpdate(), 100)\n    setTimeout(() => window.forceCharacterTabUpdate(), 100)\n  }\n\n  const onFinish = (x) => {\n    if (!selectedScoringCharacter) return;\n\n    console.log('Form finished', x);\n    x.stats[Constants.Stats.ATK_P] = x.stats[Constants.Stats.ATK]\n    x.stats[Constants.Stats.DEF_P] = x.stats[Constants.Stats.DEF]\n    x.stats[Constants.Stats.HP_P] = x.stats[Constants.Stats.HP]\n\n    let defaultScoringMetadata = DB.getMetadata().characters[selectedScoringCharacter].scoringMetadata\n\n    function nullUndefinedToZero(x) {\n      if (x == null) return 0\n      return x\n    }\n\n    x.modified = false\n    for (let stat of Object.values(Constants.Stats)) {\n      if (nullUndefinedToZero(x.stats[stat]) != nullUndefinedToZero(defaultScoringMetadata.stats[stat])) {\n        x.modified = true\n      }\n    }\n\n    DB.updateCharacterScoreOverrides(selectedScoringCharacter, x)\n  };\n\n  const handleResetDefault = () => {\n    if (!selectedScoringCharacter) return;\n\n    let defaultScoringMetadata = DB.getMetadata().characters[selectedScoringCharacter].scoringMetadata\n    let displayScoringMetadata = getScoringValuesForDisplay(defaultScoringMetadata)\n\n    DB.updateCharacterScoreOverrides(selectedScoringCharacter, defaultScoringMetadata)\n    scoringAlgorithmForm.setFieldsValue(displayScoringMetadata)\n  };\n\n  const handleCancel = () => {\n    setIsScoringModalOpen(false);\n  };\n\n  const filterOption = (input, option) =>\n    (option?.label ?? '').toLowerCase().includes(input.toLowerCase());\n\n  let previewSrc = (selectedScoringCharacter) ? Assets.getCharacterPreviewById(selectedScoringCharacter) : Assets.getBlank()\n\n  let methodologyCollapse = (\n    <Text>\n      <PStyled>\n        Substat scoring is calculated by <code>Score = weight * normalization * value</code>.\n        The weight of each stat is defined above, on a scale of 0 to 1.\n        The normalization of each stat is calculated based on the ratio of their main stat values to Crit DMG with max value <code>64.8</code>:\n      </PStyled>\n      <Flex justify='space-between' style={{ marginRight: 120 }}>\n        <ul>\n          <li><code>CD BE = 64.8 / 64.8 == 1.0</code></li>\n          <li><code>DEF% = 64.8 / 54.0 == 1.2</code></li>\n          <li><code>HP% ATK% EHR = 64.8 / 43.2 == 1.5</code></li>\n          <li><code>CR = 64.8 / 32.4 == 2</code></li>\n        </ul>\n        <ul>\n          <li><code>SPD = 64.8 / 25.032 == 2.59</code></li>\n          <li><code>OHB = 64.8 / 34.561 == 1.87</code></li>\n          <li><code>ERR = 64.8 / 19.439 == 3.33</code></li>\n          <li><code>ELEMENTAL DMG = 64.8 / 38.88 == 1.67</code></li>\n        </ul>\n      </Flex>\n      <PStyled style={{ margin: '7px 0px' }}>\n        Flat ATK/HP/DEF have a separate calculation: <code>1 / (2 * character base * 0.01) * (64.8 / (% main stat value))</code>.\n        This converts the flat stat value to a percent equivalent by base stats, then normalizes it.\n        Double the character base is used instead of character + light cone base due to the variable nature of light cone stats.\n      </PStyled>\n\n      <PStyled style={{ margin: '7px 0px' }}>\n        A letter grade is assigned based on the number of normalized min rolls of each substat.\n        The score for each min roll in theory should be equivalent to <code>5.184</code>, but is rounded down to <code>5.1</code> due to the game not displaying extra decimals.\n        The general scale for grade by rolls is <code>F=1, D=2, C=3, B=4, A=5, S=6, SS=7, SSS=8, WTF=9</code> with a <code>+</code> assigned for an additional half roll.\n      </PStyled>\n\n      <PStyled style={{ margin: '7px 0px' }}>\n        Character scores are calculated by <code>Score = sum(relic substat scores) + sum(main stat scores)</code>.\n        Only the head/body/sphere/rope relics have main stat scores.\n        The main stat score for a 5 star maxed relic is <code>64.8</code> if the main stat is optimal, otherwise scaled down by the stat weight.\n        Non 5 star relic scores are also scaled down by their maximum enhance.\n        Characters are expected to have 3 full sets, so 3 rolls worth of score is deducted for each missing set.\n      </PStyled>\n\n      <PStyled style={{ margin: '7px 0px' }}>\n        Body/feet/sphere/rope relics are granted extra rolls to compensate for the difficulty of obtaining optimal main stats with desired substats.\n        These numbers were calculated by a simulation of relic rolls accounting for main stat drop rate and expected substat value.\n        These rolls are multiplied by the min roll value of <code>5.1</code> for the bonus score value.\n      </PStyled>\n\n      <Flex justify='space-between' style={{ marginRight: 30 }}>\n        <ul>\n          <li><code>Body HP_P 1.280</code></li>\n          <li><code>Body ATK_P 1.278</code></li>\n          <li><code>Body DEF_P 1.305</code></li>\n          <li><code>Body CR 1.647</code></li>\n          <li><code>Body CD 1.643</code></li>\n        </ul>\n        <ul>\n          <li><code>Body OHB 1.713</code></li>\n          <li><code>Body EHR 1.653</code></li>\n          <li><code>Feet HP_P 1.045</code></li>\n          <li><code>Feet ATK_P 1.000</code></li>\n          <li><code>Feet DEF_P 1.002</code></li>\n        </ul>\n        <ul>\n          <li><code>Feet SPD 1.573</code></li>\n          <li><code>PlanarSphere HP_P 1.583</code></li>\n          <li><code>PlanarSphere ATK_P 1.545</code></li>\n          <li><code>PlanarSphere DEF_P 1.595</code></li>\n          <li><code>PlanarSphere ELEM 1.747</code></li>\n        </ul>\n        <ul>\n          <li><code>LinkRope HP_P 1.056</code></li>\n          <li><code>LinkRope ATK_P 1.016</code></li>\n          <li><code>LinkRope DEF_P 1.161</code></li>\n          <li><code>LinkRope BE 1.417</code></li>\n          <li><code>LinkRope ERR 2.000</code></li>\n        </ul>\n      </Flex>\n\n      <PStyled style={{ margin: '7px 0px' }}>\n        This scoring method is still experimental and subject to change, please come by the discord server to share any feedback!\n      </PStyled>\n    </Text>\n  )\n\n  return (\n    <Modal\n      open={isScoringModalOpen}\n      width={900}\n      destroyOnClose\n      centered\n      onOk={onModalOk}\n      onCancel={handleCancel}\n      forceRender\n      footer={[\n        <Button key=\"back\" onClick={handleCancel}>\n          Cancel\n        </Button>,\n        <Button key=\"default\" onClick={handleResetDefault}>\n          Reset to default\n        </Button>,\n        <Button key=\"submit\" type=\"primary\" onClick={onModalOk}>\n          Save changes\n        </Button>,\n      ]}\n    >\n      <Form\n        form={scoringAlgorithmForm}\n        preserve={false}\n        layout=\"vertical\"\n        onFinish={onFinish}\n      >\n\n        <TitleDivider>Stat weights</TitleDivider>\n\n        <Flex gap={10} vertical>\n          <Flex gap={20} justify='space-between'>\n            <Flex vertical gap={5}>\n              <Form.Item size=\"default\" name='characterId'>\n                <Select\n                  showSearch\n                  filterOption={filterOption}\n                  style={{ width: panelWidth }}\n                  onChange={characterSelectorChange}\n                  options={characterOptions}\n                />\n              </Form.Item>\n              <div style={{ height: 230, width: panelWidth, overflow: 'hidden' }}>\n                <img src={previewSrc} style={{ width: panelWidth }} />\n              </div>\n            </Flex>\n            <Flex vertical gap={3}>\n              <StatValueRow stat={Constants.Stats.ATK} />\n              <StatValueRow stat={Constants.Stats.HP} />\n              <StatValueRow stat={Constants.Stats.DEF} />\n              <StatValueRow stat={Constants.Stats.SPD} />\n              <StatValueRow stat={Constants.Stats.CR} />\n              <StatValueRow stat={Constants.Stats.CD} />\n              <StatValueRow stat={Constants.Stats.EHR} />\n              <StatValueRow stat={Constants.Stats.RES} />\n              <StatValueRow stat={Constants.Stats.BE} />\n            </Flex>\n            <Flex vertical gap={3}>\n              <StatValueRow stat={Constants.Stats.ERR} />\n              <StatValueRow stat={Constants.Stats.OHB} />\n              <StatValueRow stat={Constants.Stats.Physical_DMG} />\n              <StatValueRow stat={Constants.Stats.Fire_DMG} />\n              <StatValueRow stat={Constants.Stats.Ice_DMG} />\n              <StatValueRow stat={Constants.Stats.Lightning_DMG} />\n              <StatValueRow stat={Constants.Stats.Wind_DMG} />\n              <StatValueRow stat={Constants.Stats.Quantum_DMG} />\n              <StatValueRow stat={Constants.Stats.Imaginary_DMG} />\n            </Flex>\n          </Flex>\n        </Flex>\n\n        <TitleDivider>Optimal main stats</TitleDivider>\n\n        <Flex justify='space-between'>\n          <Flex vertical gap={defaultGap * 2}>\n            <Flex vertical gap={1} justify='flex-start'>\n              <Text style={{ marginLeft: 5 }}>\n                Body\n              </Text>\n              <Form.Item size=\"default\" name={['parts', Constants.Parts.Body]}>\n                <Select\n                  mode=\"multiple\"\n                  allowClear\n                  style={{\n                    width: selectWidth,\n                  }}\n                  placeholder=\"Body\"\n                  maxTagCount='responsive'>\n                  <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                  <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                  <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                  <Select.Option value={Constants.Stats.CR}>CRIT Rate</Select.Option>\n                  <Select.Option value={Constants.Stats.CD}>CRIT DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.OHB}>Outgoing Healing</Select.Option>\n                  <Select.Option value={Constants.Stats.EHR}>Effect HIT Rate</Select.Option>\n                </Select>\n              </Form.Item>\n            </Flex>\n\n            <Flex vertical gap={1} justify='flex-start'>\n              <Text style={{ marginLeft: 5 }}>\n                Feet\n              </Text>\n              <Form.Item size=\"default\" name={['parts', Constants.Parts.Feet]}>\n                <Select\n                  mode=\"multiple\"\n                  allowClear\n                  style={{\n                    width: selectWidth,\n                  }}\n                  placeholder=\"Feet\"\n                  maxTagCount='responsive'>\n                  <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                  <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                  <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                  <Select.Option value={Constants.Stats.SPD}>Speed</Select.Option>\n                </Select>\n              </Form.Item>\n            </Flex>\n          </Flex>\n          <Flex vertical gap={defaultGap * 2}>\n            <Flex vertical gap={1} justify='flex-start'>\n              <Text style={{ marginLeft: 5 }}>\n                Planar Sphere\n              </Text>\n              <Form.Item size=\"default\" name={['parts', Constants.Parts.PlanarSphere]}>\n                <Select\n                  mode=\"multiple\"\n                  allowClear\n                  style={{\n                    width: selectWidth,\n                  }}\n                  placeholder=\"Planar Sphere\"\n                  listHeight={400}\n                  maxTagCount='responsive'>\n                  <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                  <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                  <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                  <Select.Option value={Constants.Stats.Physical_DMG}>Physical DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.Fire_DMG}>Fire DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.Ice_DMG}>Ice DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.Lightning_DMG}>Lightning DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.Wind_DMG}>Wind DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.Quantum_DMG}>Quantum DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.Imaginary_DMG}>Imaginary DMG</Select.Option>\n                </Select>\n              </Form.Item>\n            </Flex>\n\n            <Flex vertical gap={1} justify='flex-start'>\n              <Text style={{ marginLeft: 5 }}>\n                Link rope\n              </Text>\n\n              <Form.Item size=\"default\" name={['parts', Constants.Parts.LinkRope]}>\n                <Select\n                  mode=\"multiple\"\n                  allowClear\n                  style={{\n                    width: selectWidth,\n                  }}\n                  placeholder=\"Link Rope\"\n                  maxTagCount='responsive'>\n                  <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                  <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                  <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                  <Select.Option value={Constants.Stats.BE}>Break Effect</Select.Option>\n                  <Select.Option value={Constants.Stats.ERR}>Energy Regeneration Rate</Select.Option>\n                </Select>\n              </Form.Item>\n            </Flex>\n          </Flex>\n        </Flex>\n\n        <TitleDivider>Calculations</TitleDivider>\n\n        <Collapse ghost items={[{\n          key: '1',\n          label: 'Click to show details',\n          children: methodologyCollapse\n        }]}>\n        </Collapse>\n      </Form>\n    </Modal>\n  );\n}\n","import React, {useMemo} from 'react';\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport OptimizerTab from './OptimizerTab'\nimport ImportTab from './ImportTab'\nimport RelicsTab from './RelicsTab'\nimport CharacterTab from './CharacterTab';\nimport ComingSoonTab from './ComingSoonTab';\nimport RelicScorerTab from './RelicScorerTab';\nimport GettingStartedTab from './GettingStartedTab';\nimport BetaTab from './BetaTab';\nimport ScoringModal from './ScoringModal';\nimport { Typography } from 'antd';\n\nlet defaultError = () => {\n  return (\n    <Typography>Something went wrong</Typography>\n  )\n}\nconst Tabs = () => {\n  const activeKey = window.store(s => s.activeKey)\n\n  let optimizerActive = activeKey == 'optimizer'\n  let charactersActive = activeKey == 'characters'\n  let relicsActive = activeKey == 'relics'\n  let importActive = activeKey == 'import'\n  let gettingStartedActive = activeKey == '#getting-started'\n  let scorerActive = activeKey == '#scorer'\n  let comingSoonActive = activeKey == 'coming-soon'\n  let betaActive = activeKey == '#beta'\n\n  let optimizerDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <OptimizerTab active={optimizerActive}/>\n      </ErrorBoundary>\n    )\n  }, [optimizerActive])\n\n  let charactersDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <CharacterTab active={charactersActive}/>\n      </ErrorBoundary>\n    )\n  }, [charactersActive])\n\n  let relicsDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <RelicsTab active={relicsActive}/>\n      </ErrorBoundary>\n    )\n  }, [relicsActive])\n\n  let importDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <ImportTab active={importActive}/>\n      </ErrorBoundary>\n    )\n  }, [importActive])\n\n  let gettingStartedDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <GettingStartedTab active={gettingStartedActive}/>\n      </ErrorBoundary>\n    )\n  }, [gettingStartedActive])\n\n  let scorerDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <RelicScorerTab active={scorerActive}/>\n      </ErrorBoundary>\n    )\n  }, [scorerActive])\n\n  let comingSoonDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <ComingSoonTab active={comingSoonActive}/>\n      </ErrorBoundary>\n    )\n  }, [comingSoonActive])\n\n  let betaDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <BetaTab active={betaActive}/>\n      </ErrorBoundary>\n    )\n  }, [betaActive])\n\n  return (\n    <>\n      {optimizerDisplay}\n      {charactersDisplay}\n      {relicsDisplay}\n      {importDisplay}\n      {gettingStartedDisplay}\n      {scorerDisplay}\n      {comingSoonDisplay}\n      {betaDisplay}\n\n      <ErrorBoundary fallback={defaultError()}>\n        <ScoringModal />\n      </ErrorBoundary >\n    </>\n  )\n}\n\nexport default Tabs;\n","import React, { useEffect } from \"react\"\nimport { ConfigProvider, Flex, Layout, message, notification, theme, Typography } from 'antd';\nimport MenuDrawer from './components/MenuDrawer'\nimport Tabs from './components/Tabs'\nimport { Assets } from \"./lib/assets\";\n\nconst { Header, Sider, Content } = Layout;\n\nlet hashes = [\n  '#scorer',\n  '#getting-started',\n  '#beta'\n]\n\nconst App = () => {\n  const [notificationApi, notificationContextHolder] = notification.useNotification();\n  const [messageApi, messageContextHolder] = message.useMessage();\n\n  window.notificationApi = notificationApi\n  window.messageApi = messageApi\n\n  useEffect(() => {\n  }, [])\n\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorBgBase: '#182239'\n        },\n        components: {\n          Slider: {\n            handleColor: '#1668DC',\n            handleActiveColor: '#1668DC',\n            trackBg: '#1668DC',\n            trackHoverBg: '#1668DC',\n            dotBorderColor: '#1668DC',\n            railHoverBg: '#ffffff80',\n            railBg: '#ffffff12',\n            handleLineWidth: 0,\n            handleLineWidthHover: 0,\n            handleSizeHover: 10\n          },\n          InputNumber: {\n            paddingInlineSM: 4,\n          },\n        },\n        algorithm: theme.darkAlgorithm,\n      }}\n    >      \n      {notificationContextHolder}\n      {messageContextHolder}\n        <Layout hasSider style={{ 'minHeight': '100%' }}>\n          <Sider\n            width={170}\n            style={{\n              overflow: 'auto',\n              height: '100vh',\n              position: 'sticky',\n              top: 0,\n            }}\n            // breakpoint=\"xxl\"\n            // collapsedWidth=\"50\"\n            // onBreakpoint={(broken) => {\n            // }}\n            // onCollapse={(collapsed, type) => {\n            // }}\n          >\n            <MenuDrawer hashes={hashes}/>\n          </Sider>\n          <Layout\n            style={{\n            }}\n          >\n\n            <Header\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                paddingLeft: '30px',\n                paddingRight: '0px',\n                height: 48,\n                width: '100%'\n              }}\n            >\n              <Flex align='center' justify='space-between' style={{width: '100%'}}>\n                <a href=\"/hsr-optimizer\">\n                  <Flex align='center'>\n                    <img src={Assets.getLogo()} style={{ width: 30, height: 30, marginRight: 25 }}></img>\n                    <Typography\n                      style={{ fontWeight: 600, fontSize: 22 }}\n                      color=\"inherit\"\n                    >\n                      Fribbels Honkai Star Rail Optimizer\n                    </Typography>\n                  </Flex>\n                </a>\n\n                <a href=\"https://discord.gg/rDmB4Un7qg\" target=\"_blank\" rel=\"noreferrer\">\n                  <Flex>\n                    <img src={Assets.getDiscord()} style={{ height: 36, marginRight: 5, borderRadius: 5 }}></img>\n                  </Flex>\n                </a>\n              </Flex>\n            </Header>\n            <Content\n              style={{\n                padding: 10,\n                margin: 0,\n                minHeight: 280,\n                minWidth: 1300,\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                overflow: 'initial',\n              }}\n            >\n              <Tabs hashes={hashes} />\n            </Content>\n          </Layout>\n      </Layout>\n    </ConfigProvider>\n  );\n};\n\nexport default App;","import characters from '../data/characters.json';\nimport characterPromotions from '../data/character_promotions.json';\nimport lightCones from '../data/light_cones.json';\nimport lightConePromotions from '../data/light_cone_promotions.json';\nimport relicMainAffixes from '../data/relic_main_affixes.json';\nimport relicSubAffixes from '../data/relic_sub_affixes.json';\nimport relicSets from '../data/relic_sets.json';\nimport { Constants } from \"./constants.ts\";\nimport DB from \"./db\";\n\nexport const DataParser = {\n  parse: () => {\n    for (const [id, characterData] of Object.entries(characters)) {\n      characterData.promotions = parseBaseStatsByLevel(characterPromotions[id]);\n\n      delete characterData.ranks\n      delete characterData.skills\n      delete characterData.skill_trees\n    }\n\n    const lightConeSuperimpositions = getSuperimpositions()\n    for (const [id, lcData] of Object.entries(lightCones)) {\n      if (lightConeSuperimpositions[id]) {\n        lcData.superimpositions = lightConeSuperimpositions[id]\n      } else {\n        lcData.superimpositions = {}\n      }\n      lcData.promotions = parseBaseLightConeStatsByLevel(lightConePromotions[id])\n    }\n\n    const characterTraces = getOverrideTraces();\n    const imageCenters = getOverrideImageCenter();\n    const scoringMetadata = getScoringMetadata()\n    for (const [id, traceData] of Object.entries(characterTraces)) {\n      let imageCenter = { x: 1024, y: 1024 }\n      if (imageCenters[id] != undefined) {\n        imageCenter = imageCenters[id]\n      }\n\n      characters[id].traces = traceData\n      characters[id].imageCenter = imageCenter\n      characters[id].displayName = getDisplayName(characters[id])\n      characters[id].scoringMetadata = scoringMetadata[id]\n      characters[id].scoringMetadata.characterId = id\n    }\n\n    const relics = {\n      relicMainAffixes,\n      relicSubAffixes,\n      relicSets\n    }\n\n    const data = {\n      characters: characters,\n      characterPromotions: characterPromotions,\n      nicknames: characterPromotions,\n      lightCones: lightCones,\n      relics: relics\n    }\n    DB.setMetadata(data);\n    console.log('Metadata: ', data)\n\n    return data;\n  }\n}\n\nconst displayNameMapping = {\n  \"8001\": \"Caelus (Destruction)\",\n  \"8002\": \"Stelle (Destruction)\",\n  \"8003\": \"Caelus (Preservation)\",\n  \"8004\": \"Stelle (Preservation)\",\n  \"1213\": \"Imbibitor Lunae\"\n}\nfunction getDisplayName(character) {\n  if (character.id in displayNameMapping) {\n    return displayNameMapping[character.id]\n  }\n  return character.name\n}\n\nfunction parseBaseLightConeStatsByLevel(promotions) {\n  let base = {}\n  for (let i = 1; i <= 80; i++) {\n    let valueIndex = (Math.floor((i - 1) / 10) - 1)\n    if (i <= 20) valueIndex = 0\n    if (i > 79) valueIndex = 6\n\n    let statScaling = promotions.values[valueIndex]\n\n    base[i] = {\n      [Constants.Stats.HP]: statScaling['hp'].base + statScaling['hp'].step * (i - 1),\n      [Constants.Stats.ATK]: statScaling['atk'].base + statScaling['atk'].step * (i - 1),\n      [Constants.Stats.DEF]: statScaling['def'].base + statScaling['def'].step * (i - 1),\n    }\n  }\n\n  return base;\n}\n\nfunction parseBaseStatsByLevel(promotions) {\n  let base = {}\n  for (let i = 1; i <= 80; i++) {\n    let valueIndex = (Math.floor((i - 1) / 10) - 1)\n    if (i <= 20) valueIndex = 0\n    if (i > 79) valueIndex = 6\n\n    let statScaling = promotions.values[valueIndex]\n\n    base[i] = {\n      [Constants.Stats.HP]: statScaling['hp'].base + statScaling['hp'].step * (i - 1),\n      [Constants.Stats.ATK]: statScaling['atk'].base + statScaling['atk'].step * (i - 1),\n      [Constants.Stats.CR]: statScaling['crit_rate'].base + statScaling['crit_rate'].step * (i - 1),\n      [Constants.Stats.CD]: statScaling['crit_dmg'].base + statScaling['crit_dmg'].step * (i - 1),\n      [Constants.Stats.DEF]: statScaling['def'].base + statScaling['def'].step * (i - 1),\n      [Constants.Stats.SPD]: statScaling['spd'].base + statScaling['spd'].step * (i - 1),\n    }\n  }\n\n  return base;\n}\n\nfunction getSuperimpositions() {\n  return {\n    \"20000\": {}, // Arrows\n    \"20001\": {},\n    \"20002\": {},\n    \"20003\": {\n      1: { [Constants.Stats.DEF_P]: 0.16 },\n      2: { [Constants.Stats.DEF_P]: 0.20 },\n      3: { [Constants.Stats.DEF_P]: 0.24 },\n      4: { [Constants.Stats.DEF_P]: 0.28 },\n      5: { [Constants.Stats.DEF_P]: 0.32 },\n    },\n    \"20004\": {},\n    \"20005\": {},\n    \"20006\": {},\n    \"20007\": {},\n    \"20008\": {},\n    \"20009\": {},\n    \"20010\": {},\n    \"20011\": {},\n    \"20012\": {},\n    \"20013\": {},\n    \"20014\": {},\n    \"20015\": {},\n    \"20016\": {},\n    \"20017\": {},\n    \"20018\": {},\n    \"20019\": {},\n    \"20020\": {},\n    \"21000\": {\n      1: { [Constants.Stats.ERR]: 0.08 },\n      2: { [Constants.Stats.ERR]: 0.10 },\n      3: { [Constants.Stats.ERR]: 0.12 },\n      4: { [Constants.Stats.ERR]: 0.14 },\n      5: { [Constants.Stats.ERR]: 0.16 },\n    },\n    \"21001\": {},\n    \"21002\": {\n      1: { [Constants.Stats.DEF_P]: 0.16 },\n      2: { [Constants.Stats.DEF_P]: 0.18 },\n      3: { [Constants.Stats.DEF_P]: 0.20 },\n      4: { [Constants.Stats.DEF_P]: 0.22 },\n      5: { [Constants.Stats.DEF_P]: 0.24 },\n    },\n    \"21003\": {\n      1: { [Constants.Stats.ATK_P]: 0.16 },\n      2: { [Constants.Stats.ATK_P]: 0.20 },\n      3: { [Constants.Stats.ATK_P]: 0.24 },\n      4: { [Constants.Stats.ATK_P]: 0.28 },\n      5: { [Constants.Stats.ATK_P]: 0.32 },\n    },\n    \"21004\": {\n      1: { [Constants.Stats.BE]: 0.28 },\n      2: { [Constants.Stats.BE]: 0.35 },\n      3: { [Constants.Stats.BE]: 0.42 },\n      4: { [Constants.Stats.BE]: 0.49 },\n      5: { [Constants.Stats.BE]: 0.56 },\n    },\n    \"21005\": {},\n    \"21006\": {},\n    \"21007\": {},\n    \"21008\": {\n      1: { [Constants.Stats.EHR]: 0.20 },\n      2: { [Constants.Stats.EHR]: 0.25 },\n      3: { [Constants.Stats.EHR]: 0.30 },\n      4: { [Constants.Stats.EHR]: 0.35 },\n      5: { [Constants.Stats.EHR]: 0.40 },\n    },\n    \"21009\": {},\n    \"21010\": {},\n    \"21011\": {},\n    \"21012\": {},\n    \"21013\": {},\n    \"21014\": {\n      1: { [Constants.Stats.RES]: 0.16 },\n      2: { [Constants.Stats.RES]: 0.20 },\n      3: { [Constants.Stats.RES]: 0.24 },\n      4: { [Constants.Stats.RES]: 0.28 },\n      5: { [Constants.Stats.RES]: 0.32 },\n    },\n    \"21015\": {},\n    \"21016\": {\n      1: { [Constants.Stats.DEF_P]: 0.16 },\n      2: { [Constants.Stats.DEF_P]: 0.20 },\n      3: { [Constants.Stats.DEF_P]: 0.24 },\n      4: { [Constants.Stats.DEF_P]: 0.28 },\n      5: { [Constants.Stats.DEF_P]: 0.32 },\n    },\n    \"21017\": {},\n    \"21018\": {},\n    \"21019\": {\n      1: { [Constants.Stats.ATK_P]: 0.16 },\n      2: { [Constants.Stats.ATK_P]: 0.20 },\n      3: { [Constants.Stats.ATK_P]: 0.24 },\n      4: { [Constants.Stats.ATK_P]: 0.28 },\n      5: { [Constants.Stats.ATK_P]: 0.32 },\n    },\n    \"21020\": {\n      1: { [Constants.Stats.ATK_P]: 0.16 },\n      2: { [Constants.Stats.ATK_P]: 0.20 },\n      3: { [Constants.Stats.ATK_P]: 0.24 },\n      4: { [Constants.Stats.ATK_P]: 0.28 },\n      5: { [Constants.Stats.ATK_P]: 0.32 },\n    },\n    \"21021\": {},\n    \"21022\": {\n      1: { [Constants.Stats.BE]: 0.16 },\n      2: { [Constants.Stats.BE]: 0.20 },\n      3: { [Constants.Stats.BE]: 0.24 },\n      4: { [Constants.Stats.BE]: 0.28 },\n      5: { [Constants.Stats.BE]: 0.32 },\n    },\n    \"21023\": {},\n    \"21024\": {},\n    \"21025\": {},\n    \"21026\": {\n      1: { [Constants.Stats.ATK_P]: 0.10 },\n      2: { [Constants.Stats.ATK_P]: 0.125 },\n      3: { [Constants.Stats.ATK_P]: 0.15 },\n      4: { [Constants.Stats.ATK_P]: 0.175 },\n      5: { [Constants.Stats.ATK_P]: 0.20 },\n    },\n    \"21027\": {},\n    \"21028\": {\n      1: { [Constants.Stats.HP_P]: 0.16 },\n      2: { [Constants.Stats.HP_P]: 0.20 },\n      3: { [Constants.Stats.HP_P]: 0.24 },\n      4: { [Constants.Stats.HP_P]: 0.28 },\n      5: { [Constants.Stats.HP_P]: 0.32 },\n    },\n    \"21029\": {},\n    \"21030\": {\n      1: { [Constants.Stats.DEF_P]: 0.16 },\n      2: { [Constants.Stats.DEF_P]: 0.20 },\n      3: { [Constants.Stats.DEF_P]: 0.24 },\n      4: { [Constants.Stats.DEF_P]: 0.28 },\n      5: { [Constants.Stats.DEF_P]: 0.32 },\n    },\n    \"21031\": {\n      1: { [Constants.Stats.CR]: 0.12 },\n      2: { [Constants.Stats.CR]: 0.15 },\n      3: { [Constants.Stats.CR]: 0.18 },\n      4: { [Constants.Stats.CR]: 0.21 },\n      5: { [Constants.Stats.CR]: 0.24 },\n    },\n    \"21032\": {},\n    \"21033\": {\n      1: { [Constants.Stats.ATK_P]: 0.24 },\n      2: { [Constants.Stats.ATK_P]: 0.30 },\n      3: { [Constants.Stats.ATK_P]: 0.36 },\n      4: { [Constants.Stats.ATK_P]: 0.42 },\n      5: { [Constants.Stats.ATK_P]: 0.48 },\n    },\n    \"21034\": {},\n    \"22000\": {\n      1: { [Constants.Stats.EHR]: 0.20 },\n      2: { [Constants.Stats.EHR]: 0.25 },\n      3: { [Constants.Stats.EHR]: 0.30 },\n      4: { [Constants.Stats.EHR]: 0.35 },\n      5: { [Constants.Stats.EHR]: 0.40 },\n    },\n    \"22001\": {\n      1: { [Constants.Stats.HP_P]: 0.08 },\n      2: { [Constants.Stats.HP_P]: 0.09 },\n      3: { [Constants.Stats.HP_P]: 0.10 },\n      4: { [Constants.Stats.HP_P]: 0.11 },\n      5: { [Constants.Stats.HP_P]: 0.12 },\n    },\n    \"23000\": {},\n    \"23001\": {\n      1: { [Constants.Stats.CR]: 0.18 },\n      2: { [Constants.Stats.CR]: 0.21 },\n      3: { [Constants.Stats.CR]: 0.24 },\n      4: { [Constants.Stats.CR]: 0.27 },\n      5: { [Constants.Stats.CR]: 0.30 },\n    },\n    \"23002\": {\n      1: { [Constants.Stats.ATK_P]: 0.24 },\n      2: { [Constants.Stats.ATK_P]: 0.28 },\n      3: { [Constants.Stats.ATK_P]: 0.32 },\n      4: { [Constants.Stats.ATK_P]: 0.36 },\n      5: { [Constants.Stats.ATK_P]: 0.40 },\n    },\n    \"23003\": {},\n    \"23004\": {},\n    \"23005\": {\n      1: { [Constants.Stats.DEF_P]: 0.24, [Constants.Stats.EHR]: 0.24 },\n      2: { [Constants.Stats.DEF_P]: 0.28, [Constants.Stats.EHR]: 0.28 },\n      3: { [Constants.Stats.DEF_P]: 0.32, [Constants.Stats.EHR]: 0.32 },\n      4: { [Constants.Stats.DEF_P]: 0.36, [Constants.Stats.EHR]: 0.36 },\n      5: { [Constants.Stats.DEF_P]: 0.40, [Constants.Stats.EHR]: 0.40 },\n    },\n    \"23006\": {},\n    \"23007\": {\n      1: { [Constants.Stats.EHR]: 0.24 },\n      2: { [Constants.Stats.EHR]: 0.28 },\n      3: { [Constants.Stats.EHR]: 0.32 },\n      4: { [Constants.Stats.EHR]: 0.36 },\n      5: { [Constants.Stats.EHR]: 0.40 },\n    },\n    \"23008\": {\n      1: { [Constants.Stats.ATK_P]: 0.24 },\n      2: { [Constants.Stats.ATK_P]: 0.28 },\n      3: { [Constants.Stats.ATK_P]: 0.32 },\n      4: { [Constants.Stats.ATK_P]: 0.36 },\n      5: { [Constants.Stats.ATK_P]: 0.40 },\n    },\n    \"23009\": {\n      1: { [Constants.Stats.CR]: 0.18, [Constants.Stats.HP_P]: 0.18, },\n      2: { [Constants.Stats.CR]: 0.21, [Constants.Stats.HP_P]: 0.21, },\n      3: { [Constants.Stats.CR]: 0.24, [Constants.Stats.HP_P]: 0.24, },\n      4: { [Constants.Stats.CR]: 0.27, [Constants.Stats.HP_P]: 0.27, },\n      5: { [Constants.Stats.CR]: 0.30, [Constants.Stats.HP_P]: 0.30, },\n    },\n    \"23010\": {\n      1: { [Constants.Stats.CD]: 0.36 },\n      2: { [Constants.Stats.CD]: 0.42 },\n      3: { [Constants.Stats.CD]: 0.48 },\n      4: { [Constants.Stats.CD]: 0.54 },\n      5: { [Constants.Stats.CD]: 0.60 },\n    },\n    \"23011\": {\n      1: { [Constants.Stats.HP_P]: 0.24, [Constants.Stats.ERR]: 0.12 },\n      2: { [Constants.Stats.HP_P]: 0.28, [Constants.Stats.ERR]: 0.14 },\n      3: { [Constants.Stats.HP_P]: 0.32, [Constants.Stats.ERR]: 0.16 },\n      4: { [Constants.Stats.HP_P]: 0.36, [Constants.Stats.ERR]: 0.18 },\n      5: { [Constants.Stats.HP_P]: 0.40, [Constants.Stats.ERR]: 0.20 },\n    },\n    \"23012\": {\n      1: { [Constants.Stats.CD]: 0.30 },\n      2: { [Constants.Stats.CD]: 0.35 },\n      3: { [Constants.Stats.CD]: 0.40 },\n      4: { [Constants.Stats.CD]: 0.45 },\n      5: { [Constants.Stats.CD]: 0.50 },\n    },\n    \"23013\": {\n      1: { [Constants.Stats.HP_P]: 0.18, [Constants.Stats.OHB]: 0.12 },\n      2: { [Constants.Stats.HP_P]: 0.21, [Constants.Stats.OHB]: 0.14 },\n      3: { [Constants.Stats.HP_P]: 0.24, [Constants.Stats.OHB]: 0.16 },\n      4: { [Constants.Stats.HP_P]: 0.27, [Constants.Stats.OHB]: 0.18 },\n      5: { [Constants.Stats.HP_P]: 0.30, [Constants.Stats.OHB]: 0.20 },\n    },\n    \"23014\": {\n      1: { [Constants.Stats.CD]: 0.20 },\n      2: { [Constants.Stats.CD]: 0.23 },\n      3: { [Constants.Stats.CD]: 0.26 },\n      4: { [Constants.Stats.CD]: 0.29 },\n      5: { [Constants.Stats.CD]: 0.32 },\n    },\n    \"23015\": {\n      1: { [Constants.Stats.CR]: 0.18 },\n      2: { [Constants.Stats.CR]: 0.21 },\n      3: { [Constants.Stats.CR]: 0.24 },\n      4: { [Constants.Stats.CR]: 0.27 },\n      5: { [Constants.Stats.CR]: 0.30 },\n    },\n    \"23016\": {\n      1: { [Constants.Stats.CR]: 0.18 },\n      2: { [Constants.Stats.CR]: 0.21 },\n      3: { [Constants.Stats.CR]: 0.24 },\n      4: { [Constants.Stats.CR]: 0.27 },\n      5: { [Constants.Stats.CR]: 0.30 },\n    },\n    \"23017\": {\n      1: { [Constants.Stats.ERR]: 0.12 },\n      2: { [Constants.Stats.ERR]: 0.14 },\n      3: { [Constants.Stats.ERR]: 0.16 },\n      4: { [Constants.Stats.ERR]: 0.18 },\n      5: { [Constants.Stats.ERR]: 0.20 },\n    },\n    \"23018\": {\n      1: { [Constants.Stats.CD]: 0.36 },\n      2: { [Constants.Stats.CD]: 0.42 },\n      3: { [Constants.Stats.CD]: 0.48 },\n      4: { [Constants.Stats.CD]: 0.54 },\n      5: { [Constants.Stats.CD]: 0.60 },\n    },\n    \"23019\": {\n      1: { [Constants.Stats.BE]: 0.60 },\n      2: { [Constants.Stats.BE]: 0.70 },\n      3: { [Constants.Stats.BE]: 0.80 },\n      4: { [Constants.Stats.BE]: 0.90 },\n      5: { [Constants.Stats.BE]: 1.00 },\n    },\n    \"23020\": {\n      1: { [Constants.Stats.CD]: 0.20 },\n      2: { [Constants.Stats.CD]: 0.23 },\n      3: { [Constants.Stats.CD]: 0.26 },\n      4: { [Constants.Stats.CD]: 0.29 },\n      5: { [Constants.Stats.CD]: 0.32 },\n    },\n    \"23021\": { // Earthly Escapade\n      1: { [Constants.Stats.CD]: 0.32 },\n      2: { [Constants.Stats.CD]: 0.39 },\n      3: { [Constants.Stats.CD]: 0.46 },\n      4: { [Constants.Stats.CD]: 0.53 },\n      5: { [Constants.Stats.CD]: 0.60 },\n    },\n    \"23022\": { // Reforged Remembrance\n      1: { [Constants.Stats.EHR]: 0.40 },\n      2: { [Constants.Stats.EHR]: 0.45 },\n      3: { [Constants.Stats.EHR]: 0.50 },\n      4: { [Constants.Stats.EHR]: 0.55 },\n      5: { [Constants.Stats.EHR]: 0.60 },\n    },\n    \"24000\": {},\n    \"24001\": {\n      1: { [Constants.Stats.CR]: 0.08 },\n      2: { [Constants.Stats.CR]: 0.10 },\n      3: { [Constants.Stats.CR]: 0.12 },\n      4: { [Constants.Stats.CR]: 0.14 },\n      5: { [Constants.Stats.CR]: 0.16 },\n    },\n    \"24002\": {\n      1: { [Constants.Stats.RES]: 0.08 },\n      2: { [Constants.Stats.RES]: 0.10 },\n      3: { [Constants.Stats.RES]: 0.12 },\n      4: { [Constants.Stats.RES]: 0.14 },\n      5: { [Constants.Stats.RES]: 0.16 },\n    },\n    \"24003\": {\n      1: { [Constants.Stats.BE]: 0.20 },\n      2: { [Constants.Stats.BE]: 0.25 },\n      3: { [Constants.Stats.BE]: 0.30 },\n      4: { [Constants.Stats.BE]: 0.35 },\n      5: { [Constants.Stats.BE]: 0.40 },\n    },\n  }\n}\n\nfunction getOverrideTraces() {\n  return {\n    \"1001\": { // March 7th\n      [Constants.Stats.Ice_DMG]: 0.224,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1002\": { // Dan Heng\n      [Constants.Stats.Wind_DMG]: 0.224,\n      [Constants.Stats.ATK_P]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1003\": { // Himeko\n      [Constants.Stats.Fire_DMG]: 0.224,\n      [Constants.Stats.ATK_P]: 0.18,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1004\": { // Welt\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.Imaginary_DMG]: 0.144,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1005\": { // Kafka\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.EHR]: 0.18,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1006\": { // Silver Wolf\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.EHR]: 0.18,\n      [Constants.Stats.Quantum_DMG]: 0.08,\n    },\n    \"1008\": { // Arlan\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.RES]: 0.12,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1009\": { // Asta\n      [Constants.Stats.Fire_DMG]: 0.224,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.CR]: 0.067,\n    },\n    \"1013\": { // Herta\n      [Constants.Stats.Ice_DMG]: 0.224,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.CR]: 0.067,\n    },\n    \"1101\": { // Bronya\n      [Constants.Stats.Wind_DMG]: 0.224,\n      [Constants.Stats.CD]: 0.24,\n      [Constants.Stats.RES]: 0.10,\n    },\n    \"1102\": { // Seele\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.CD]: 0.24,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1103\": { // Serval\n      [Constants.Stats.CR]: 0.187,\n      [Constants.Stats.EHR]: 0.18,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1104\": { // Gepard\n      [Constants.Stats.Ice_DMG]: 0.224,\n      [Constants.Stats.RES]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1105\": { // Natasha\n      [Constants.Stats.HP_P]: 0.28,\n      [Constants.Stats.DEF_P]: 0.125,\n      [Constants.Stats.RES]: 0.18,\n    },\n    \"1106\": { // Pela\n      [Constants.Stats.Ice_DMG]: 0.224,\n      [Constants.Stats.ATK_P]: 0.18,\n      [Constants.Stats.EHR]: 0.1,\n    },\n    \"1107\": { // Clara\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.Physical_DMG]: 0.144,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1108\": { // Sampo\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.EHR]: 0.18,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1109\": { // Hook\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.CD]: 0.133,\n    },\n    \"1110\": { // Lynx\n      [Constants.Stats.HP_P]: 0.28,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1111\": { // Luka\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.EHR]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1112\": { // Topaz and Numby\n      [Constants.Stats.Fire_DMG]: 0.224,\n      [Constants.Stats.CR]: 0.12,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1201\": { // Qingque\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.Quantum_DMG]: 0.144,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1202\": { // Tingyun\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.Lightning_DMG]: 0.08,\n    },\n    \"1203\": { // Luocha\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1204\": { // Jing Yuan\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.DEF_P]: 0.125,\n      [Constants.Stats.CR]: 0.12,\n    },\n    \"1205\": { // Blade\n      [Constants.Stats.HP_P]: 0.28,\n      [Constants.Stats.CR]: 0.12,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1206\": { // Sushang\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1207\": { // Yukong\n      [Constants.Stats.Imaginary_DMG]: 0.224,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.ATK_P]: 0.1,\n    },\n    \"1208\": { // Fu Xuan\n      [Constants.Stats.CR]: 0.187,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1209\": { // Yanqing\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.Ice_DMG]: 0.144,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1210\": { // Guinaifen\n      [Constants.Stats.Fire_DMG]: 0.224,\n      [Constants.Stats.EHR]: 0.1,\n      [Constants.Stats.BE]: 0.24,\n    },\n    \"1211\": { // Bailu\n      [Constants.Stats.HP_P]: 0.28,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1212\": { // Jingliu\n      [Constants.Stats.HP_P]: 0.10,\n      [Constants.Stats.SPD]: 9,\n      [Constants.Stats.CD]: 0.373,\n    },\n    \"1213\": { // Dan Heng • Imbibitor Lunae\n      [Constants.Stats.Imaginary_DMG]: 0.224,\n      [Constants.Stats.CR]: 0.12,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1214\": { // Xueyi\n      [Constants.Stats.Quantum_DMG]: 0.08,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.BE]: 0.373,\n    },\n    \"1215\": { // Hanya\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.HP_P]: 0.1,\n      [Constants.Stats.SPD]: 9,\n    },\n    \"1217\": { // Huohuo\n      [Constants.Stats.HP_P]: 0.28,\n      [Constants.Stats.RES]: 0.18,\n      [Constants.Stats.SPD]: 5,\n    },\n    \"1302\": { // Argenti\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.Physical_DMG]: 0.144,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1303\": { // Ruan Mei\n      [Constants.Stats.BE]: 0.373,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.SPD]: 5,\n    },\n    \"1305\": { // Dr Ratio\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.CR]: 0.12,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1306\": { // Sparkle\n      [Constants.Stats.HP_P]: 0.28,\n      [Constants.Stats.CD]: 0.24,\n      [Constants.Stats.RES]: 0.10,\n    },\n    \"1307\": { // Black Swan\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.Wind_DMG]: 0.144,\n      [Constants.Stats.EHR]: 0.10,\n    },\n    \"1312\": { // Misha\n      [Constants.Stats.Ice_DMG]: 0.224,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.CR]: 0.067,\n    },\n    \"8001\": { // Physical Trailblazer\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"8002\": { // Physical Trailblazer\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"8003\": { // Fire Trailblazer\n      [Constants.Stats.DEF_P]: 0.35,\n      [Constants.Stats.ATK_P]: 0.18,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"8004\": { // Fire Trailblazer\n      [Constants.Stats.DEF_P]: 0.35,\n      [Constants.Stats.ATK_P]: 0.18,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n  }\n}\n\n\nfunction getOverrideImageCenter() {\n  return {\n    \"1001\": { // March 7th\n      x: 1024,\n      y: 1100\n    },\n    \"1002\": { // Dan Heng\n      x: 1024,\n      y: 1000\n    },\n    \"1003\": { // Himeko\n      x: 1024,\n      y: 1100\n    },\n    \"1004\": { // Welt\n      x: 885,\n      y: 1000\n    },\n    \"1005\": { // Kafka\n      x: 980,\n      y: 1024\n    },\n    \"1006\": { // Silver Wolf\n      x: 1010,\n      y: 1024\n    },\n    \"1008\": { // Arlan\n      x: 1240,\n      y: 1024\n    },\n    \"1009\": { // Asta\n      x: 1024,\n      y: 1000\n    },\n    \"1013\": { // Herta\n      x: 970,\n      y: 1010\n    },\n    \"1101\": { // Bronya\n      x: 950,\n      y: 1180\n    },\n    \"1102\": { // Seele\n      x: 840,\n      y: 1060\n    },\n    \"1103\": { // Serval\n      x: 1050,\n      y: 1024\n    },\n    \"1104\": { // Gepard\n      x: 1110,\n      y: 1110\n    },\n    \"1105\": { // Natasha\n      x: 1040,\n      y: 1024\n    },\n    \"1106\": { // Pela\n      x: 780,\n      y: 1100\n    },\n    \"1107\": { // Clara\n      x: 940,\n      y: 980\n    },\n    \"1108\": { // Sampo\n      x: 1024,\n      y: 1024\n    },\n    \"1109\": { // Hook\n      x: 930,\n      y: 1024\n    },\n    \"1110\": { // Lynx\n      x: 1180,\n      y: 1000\n    },\n    \"1111\": { // Luka\n      x: 930,\n      y: 1024\n    },\n    \"1112\": { // Topaz and Numby\n      x: 1120,\n      y: 930\n    },\n    \"1201\": { // Qingque\n      x: 1000,\n      y: 1024\n    },\n    \"1202\": { // Tingyun\n      x: 1024,\n      y: 950\n    },\n    \"1203\": { // Luocha\n      x: 1024,\n      y: 1024\n    },\n    \"1204\": { // Jing Yuan\n      x: 1060,\n      y: 1024\n    },\n    \"1205\": { // Blade\n      x: 990,\n      y: 900\n    },\n    \"1206\": { // Sushang\n      x: 1100,\n      y: 1024\n    },\n    \"1207\": { // Yukong\n      x: 900,\n      y: 1050\n    },\n    \"1208\": { // Fu Xuan\n      x: 920,\n      y: 950\n    },\n    \"1209\": { // Yanqing\n      x: 1024,\n      y: 1024\n    },\n    \"1210\": { // Guinaifen\n      x: 1024,\n      y: 1024\n    },\n    \"1211\": { // Bailu\n      x: 1000,\n      y: 950\n    },\n    \"1212\": { // Jingliu\n      x: 1024,\n      y: 940\n    },\n    \"1213\": { // Dan Heng • Imbibitor Lunae\n      x: 1050,\n      y: 1024\n    },\n    \"1214\": { // Xueyi\n      x: 1000,\n      y: 1024\n    },\n    \"1215\": { // Hanya\n      x: 1000,\n      y: 1024\n    },\n    \"1217\": { // Huohuo\n      x: 1000,\n      y: 1024\n    },\n    \"1302\": { // Argenti\n      x: 680,\n      y: 1000\n    },\n    \"1303\": { // Ruan Mei\n      x: 1060,\n      y: 1050\n    },\n    \"1305\": { // Dr Ratio\n      x: 900,\n      y: 1000\n    },\n    \"1306\": { // Sparkle\n      x: 1024,\n      y: 1024\n    },\n    \"1307\": { // Black Swan\n      x: 1024,\n      y: 1024\n    },\n    \"1312\": { // Misha\n      x: 1024,\n      y: 1024\n    },\n    \"8001\": { // Physical Trailblazer M\n      x: 1024,\n      y: 1100\n    },\n    \"8002\": { // Physical Trailblazer F\n      x: 1024,\n      y: 1024\n    },\n    \"8003\": { // Fire Trailblazer M\n      x: 980,\n      y: 1024\n    },\n    \"8004\": { // Fire Trailblazer F\n      x: 1050,\n      y: 1024\n    },\n  }\n}\n\n\nfunction getScoringMetadata() {\n  return {\n    \"1001\": { // March 7th\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 1,\n        [Constants.Stats.DEF_P]: 1,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.EHR\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.DEF_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.KnightOfPurityPalace,\n        Constants.Sets.GuardOfWutheringSnow,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BelobogOfTheArchitects,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n    \"1002\": { // Dan Heng\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 1,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Wind_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.EagleOfTwilightLine,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1003\": { // Himeko\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 1,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n          Constants.Stats.CR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Fire_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.TheAshblazingGrandDuke,\n        Constants.Sets.FiresmithOfLavaForging,\n        Constants.Sets.GeniusOfBrilliantStars,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.FirmamentFrontlineGlamoth,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.SpaceSealingStation,\n      ]\n    },\n    \"1004\": { // Welt\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 1,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n          Constants.Stats.CR,\n          Constants.Stats.EHR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Imaginary_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.WastelanderOfBanditryDesert,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.PanCosmicCommercialEnterprise,\n        Constants.Sets.SpaceSealingStation,\n      ]\n    },\n    \"1005\": { // Kafka\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0.5,\n        [Constants.Stats.CD]: 0.5,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0.5,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 1,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n          Constants.Stats.CR,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Lightning_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.PrisonerInDeepConfinement,\n        Constants.Sets.BandOfSizzlingThunder,\n        Constants.Sets.GeniusOfBrilliantStars,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FirmamentFrontlineGlamoth,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.TaliaKingdomOfBanditry,\n      ]\n    },\n    \"1006\": { // Silver Wolf\n      stats: {\n        [Constants.Stats.ATK]: 0.5,\n        [Constants.Stats.ATK_P]: 0.5,\n        [Constants.Stats.DEF]: 0.5,\n        [Constants.Stats.DEF_P]: 0.5,\n        [Constants.Stats.HP]: 0.5,\n        [Constants.Stats.HP_P]: 0.5,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0.75,\n        [Constants.Stats.CD]: 0.75,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 1,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 1,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n          Constants.Stats.CR,\n          Constants.Stats.EHR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Quantum_DMG,\n          Constants.Stats.ATK_P,\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n          Constants.Stats.ATK_P,\n          Constants.Stats.BE,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.EagleOfTwilightLine,\n        Constants.Sets.ThiefOfShootingMeteor,\n        Constants.Sets.GeniusOfBrilliantStars,\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.TaliaKingdomOfBanditry,\n      ]\n    },\n    \"1008\": { // Arlan\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 1,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Lightning_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.BandOfSizzlingThunder,\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1009\": { // Asta\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0.5,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 1,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.Fire_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.ThiefOfShootingMeteor,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.PenaconyLandOfTheDreams,\n      ]\n    },\n    \"1013\": { // Herta\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 1,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Ice_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.HunterOfGlacialForest,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1101\": { // Bronya\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 1,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n          Constants.Stats.Wind_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.EagleOfTwilightLine,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.PenaconyLandOfTheDreams,\n      ]\n    },\n    \"1102\": { // Seele\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 1,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Quantum_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.GeniusOfBrilliantStars,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1103\": { // Serval\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 1,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n          Constants.Stats.CR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Lightning_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.BandOfSizzlingThunder,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.ThiefOfShootingMeteor,\n      ],\n      ornamentSets: [\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1104\": { // Gepard\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 1,\n        [Constants.Stats.DEF_P]: 1,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0.75,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.DEF_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.KnightOfPurityPalace,\n        Constants.Sets.GuardOfWutheringSnow,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BelobogOfTheArchitects,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n    \"1105\": { // Natasha\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 1,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.OHB,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.PasserbyOfWanderingCloud,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n    \"1106\": { // Pela\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 1,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.EHR,\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n          Constants.Stats.Ice_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.EagleOfTwilightLine,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.PanCosmicCommercialEnterprise,\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.PenaconyLandOfTheDreams,\n      ]\n    },\n    \"1107\": { // Clara\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 1,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Physical_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.ChampionOfStreetwiseBoxing,\n        Constants.Sets.TheAshblazingGrandDuke,\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1108\": { // Sampo\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 1,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 1,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.EHR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Wind_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n          Constants.Stats.ATK_P,\n          Constants.Stats.BE,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.ThiefOfShootingMeteor,\n        Constants.Sets.PrisonerInDeepConfinement,\n        Constants.Sets.EagleOfTwilightLine,\n      ],\n      ornamentSets: [\n        Constants.Sets.PanCosmicCommercialEnterprise,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.TaliaKingdomOfBanditry,\n      ]\n    },\n    \"1109\": { // Hook\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 1,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Fire_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.FiresmithOfLavaForging,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1110\": { // Lynx\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 1,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.OHB,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.PasserbyOfWanderingCloud,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n    \"1111\": { // Luka\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 1,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.EHR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Physical_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.BE,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.ThiefOfShootingMeteor,\n        Constants.Sets.PrisonerInDeepConfinement,\n      ],\n      ornamentSets: [\n        Constants.Sets.PanCosmicCommercialEnterprise,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.TaliaKingdomOfBanditry,\n      ]\n    },\n    \"1112\": { // Topaz and Numby\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 1,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Fire_DMG,\n          Constants.Stats.ATK_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.TheAshblazingGrandDuke,\n        Constants.Sets.FiresmithOfLavaForging,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1201\": { // Qingque\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 1,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Quantum_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.GeniusOfBrilliantStars,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1202\": { // Tingyun\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.KnightOfPurityPalace,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.PenaconyLandOfTheDreams,\n      ]\n    },\n    \"1203\": { // Luocha\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 1,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.OHB,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.PasserbyOfWanderingCloud,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.SpaceSealingStation,\n      ]\n    },\n    \"1204\": { // Jing Yuan\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 1,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Lightning_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.TheAshblazingGrandDuke,\n        Constants.Sets.BandOfSizzlingThunder,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1205\": { // Blade\n      stats: {\n        [Constants.Stats.ATK]: 0.5,\n        [Constants.Stats.ATK_P]: 0.5,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 1,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n          Constants.Stats.CR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Wind_DMG,\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.HP_P,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.EagleOfTwilightLine,\n        Constants.Sets.LongevousDisciple,\n      ],\n      ornamentSets: [\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.RutilantArena,\n      ]\n    },\n    \"1206\": { // Sushang\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 1,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Physical_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.ChampionOfStreetwiseBoxing,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1207\": { // Yukong\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 1,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Imaginary_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n          Constants.Stats.ATK_P,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.WastelanderOfBanditryDesert,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.PenaconyLandOfTheDreams,\n      ]\n    },\n    \"1208\": { // Fu Xuan\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.KnightOfPurityPalace,\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.GuardOfWutheringSnow,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n    \"1209\": { // Yanqing\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 1,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Ice_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.HunterOfGlacialForest,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1210\": { // Guinaifen\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0.75,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 1,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.EHR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Fire_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n          Constants.Stats.ATK_P,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.PrisonerInDeepConfinement,\n        Constants.Sets.FiresmithOfLavaForging,\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.FirmamentFrontlineGlamoth,\n        Constants.Sets.PanCosmicCommercialEnterprise,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FleetOfTheAgeless,\n      ]\n    },\n    \"1211\": { // Bailu\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 1,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.OHB,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.PasserbyOfWanderingCloud,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.SprightlyVonwacq,\n      ]\n    },\n    \"1212\": { // Jingliu\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 1,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Ice_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.GeniusOfBrilliantStars,\n        Constants.Sets.HunterOfGlacialForest,\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1213\": { // Dan Heng • Imbibitor Lunae\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 1,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Imaginary_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.WastelanderOfBanditryDesert,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1214\": { // Xueyi\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 1,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0.75,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.BE\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1215\": { // Hanya\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.HP_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1217\": { // Huohuo\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 1,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.OHB,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.PasserbyOfWanderingCloud,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.PenaconyLandOfTheDreams,\n      ]\n    },\n    \"1302\": { // Argenti\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 1,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Physical_DMG,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1303\": { // Ruan Mei\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 1,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.HP_P\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n          Constants.Stats.BE\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1305\": { // Dr Ratio\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 1,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Imaginary_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1306\": { // Sparkle\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1307\": { // Black Swan\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0.5,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 1,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.EHR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Wind_DMG,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1312\": { // Misha\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 1,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Ice_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"8001\": { // Physical Trailblazer M\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 1,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Physical_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.ChampionOfStreetwiseBoxing,\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"8002\": { // Physical Trailblazer F\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 1,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Physical_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.ChampionOfStreetwiseBoxing,\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"8003\": { // Fire Trailblazer M\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 1,\n        [Constants.Stats.DEF_P]: 1,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0.75,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.DEF_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.KnightOfPurityPalace,\n        Constants.Sets.GuardOfWutheringSnow,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BelobogOfTheArchitects,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n    \"8004\": { // Fire Trailblazer F\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 1,\n        [Constants.Stats.DEF_P]: 1,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0.75,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.DEF_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.KnightOfPurityPalace,\n        Constants.Sets.GuardOfWutheringSnow,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BelobogOfTheArchitects,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n  }\n}","import ReactDOM from 'react-dom/client';\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport './style/style.css';\nimport App from './App';\n\nimport { WorkerPool } from './lib/workerPool';\nimport { Constants } from './lib/constants.ts'\nimport { OcrParserFribbels1 } from './lib/ocrParserFribbels1'\nimport { OcrParserKelz3 } from './lib/ocrParserKelz3';\nimport { DataParser } from './lib/dataParser'\nimport { OptimizerTabController } from './lib/optimizerTabController'\nimport { DB } from './lib/db'\nimport { CharacterStats } from './lib/characterStats'\nimport { GPUOptimizer } from './lib/gpuOptimizer'\nimport { Utils } from './lib/utils'\nimport { Assets } from './lib/assets'\nimport { RelicAugmenter } from './lib/relicAugmenter'\nimport { StatCalculator } from './lib/statCalculator'\nimport { Gradient } from \"./lib/gradient\";\nimport { SaveState } from \"./lib/saveState\";\nimport { RelicFilters } from \"./lib/relicFilters\";\nimport { Renderer } from \"./lib/renderer\";\nimport { Message } from \"./lib/message\";\nimport { Hint } from \"./lib/hint\";\nimport { CharacterConverter } from \"./lib/characterConverter\";\nimport { RelicScorer } from './lib/relicScorer.ts';\nimport { CharacterConditionals } from './lib/characterConditionals';\nimport { LightConeConditionals } from './lib/lightConeConditionals';\nimport { BufferPacker } from './lib/bufferPacker';\nimport { Typography } from 'antd';\nimport { RelicRollFixer } from \"./lib/relicRollFixer\";\n\nwindow.WorkerPool = WorkerPool;\nwindow.Constants = Constants;\nwindow.OcrParserFribbels1 = OcrParserFribbels1;\nwindow.OcrParserKelz3 = OcrParserKelz3;\nwindow.DataParser = DataParser;\nwindow.OptimizerTabController = OptimizerTabController;\nwindow.DB = DB;\nwindow.CharacterStats = CharacterStats;\nwindow.GPUOptimizer = GPUOptimizer;\nwindow.Utils = Utils;\nwindow.Assets = Assets;\nwindow.RelicAugmenter = RelicAugmenter;\nwindow.StatCalculator = StatCalculator;\nwindow.Gradient = Gradient;\nwindow.SaveState = SaveState;\nwindow.RelicFilters = RelicFilters;\nwindow.Renderer = Renderer;\nwindow.Message = Message;\nwindow.Hint = Hint;\nwindow.CharacterConverter = CharacterConverter\nwindow.RelicScorer = RelicScorer\nwindow.CharacterConditionals = CharacterConditionals\nwindow.LightConeConditionals = LightConeConditionals\nwindow.BufferPacker = BufferPacker\nwindow.RelicRollFixer = RelicRollFixer\n\nconsole.log('Data parser', DataParser.parse());\nSaveState.load()\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const root = ReactDOM.createRoot(document.getElementById('root')!);\n\n  root.render(\n    <ErrorBoundary fallback={<Typography>Something went wrong</Typography>}>\n      <App />\n    </ErrorBoundary>\n  );\n});\n"],"names":["IconSVG","jsx","DiscordIcon","props","Icon","GithubIcon","jsxs","CoffeeIcon","getItem","label","key","icon","children","type","items","MenuOutlined","Typography","MenuDrawer","hashes","activeKey","s","setActiveKey","onClick","e","ConfigProvider","Menu","PropTypes","Stats","MainStats","MainStatsValues","SubStats","StatsToReadable","StatsToIndex","i","x","Parts","PartsToReadable","PartsMainStats","SetsRelics","SetsOrnaments","Sets","SetsRelicsNames","SetsOrnamentsNames","OrnamentSetToIndex","RelicSetToIndex","Constants","GPUOptimizer","HEIGHT","WIDTH","request","relics","character","relicSetAllowList","relicSetSolutions","ornamentSetSolutions","elementalMultipliers","cIndex","consts","Utils","n","ms","resolve","relicSets","ornamentSets","relic","set","stat","arr","element","htmlToImage.toPng","byId","number","precision","factor","obj","a","input","option","_a","part","characterData","DB","value","b","statConversion","partConversion","gradeConversion","CharacterConverter","preRelics","preLightCone","characterEidolon","id","lightConeId","lightConeLevel","lightConeSuperimposition","convertRelic","equipped","preRelic","metadata","tid","enhance","setId","setName","partId","partName","gradeId","grade","mainId","mainData","mainStat","mainBase","mainStep","mainValue","main","substats","sub","subId","count","step","subData","subStat","subBase","subStep","subValue","RelicAugmenter","optimizerStatToJsonSubStat","optimizerStatToAffixStat","optimizerPartToPartId","initialized","RelicRollFixer","query","affixes","affix","totalValue","scaledValue","statsByGrade","relicRollValues","convertedStatType","rolls","matched","base","conversions","augmentedStats","mainMaxValue","substat","uuidv4","fixAugmentedStats","calculateRelicRatings","cs","ss","ds","getDefaultForm","initialCharacter","SaveState","state","stateString","parsed","Message","content","duration","create","char","charactersById","assignRanks","characters","index","matchingCharacter","removed","relicsById","defaultScoringMetadata","updated","overrides","form","found","defaultForm","equippedId","relicMatch","characterId","prevOwnerId","prevCharacter","prevRelic","relicIds","relicId","_b","newRelics","newCharacters","oldRelics","oldRelicHashes","oldRelic","hash","hashRelic","replacementRelics","newRelic","stableRelicId","fieldValues","OptimizerTabController","oldRelicPartialHashes","partialHashRelic","updatedOldRelics","addedNewRelics","partialHash","partialMatches","match","partialMatch","exit","upgrades","matchSubstat","newSubstat","compareSameTypeSubstat","possibleUpgrades","substatValues","substatStats","hashObject","objectHash","oldSubstat","oldValue","newValue","baseSubstatCount","Text","HeaderText","styled","__template","justify","align","inputWidth","numberWidth","sliderWidth","precisionRound","FormSwitch","Flex","Form","conditionalType","Switch","CheckOutlined","CloseOutlined","FormSlider","inputValue","setInputValue","useState","onChange","multiplier","symbol","InputNumber","Slider","baseUrl","pathFromClassMapping","iconFromStatMapping","Assets","percented","lightCone","path","c","name","filename","mapping","setToId","partToId","TooltipImage","Popover","Hint","defaultGap","lightConeOptionMapping","Arrows","Cornucopia","CollapsingSky","Amber","Void","Chorus","DataBank","DartingArrow","FineFruit","ShatteredHome","Defense","Loop","MeshingCogs","Passkey","Adversarial","Multiplication","MutualDemise","Pioneering","HiddenShadow","Mediation","Sagacity","PostOpConversation","GoodNightAndSleepWell","DayOneOfMyNewLife","OnlySilenceRemains","MemoriesOfThePast","TheMolesWelcomeYou","TheBirthOfTheSelf","SharedFeeling","EyesOfThePrey","LandausChoice","Swordplay","PlanetaryRendezvous","ASecretVow","MakeTheWorldClamor","PerfectTiming","ResolutionShinesAsPearlsOfSweat","TrendOfTheUniversalMarket","SubscribeForMore","DanceDanceDance","UnderTheBlueSky","GeniusesRepose","QuidProQuo","Fermata","WeAreWildfire","RiverFlowsInSpring","PastAndFuture","WoofWalkTime","TheSeriousnessOfBreakfast","WarmthShortensColdNights","WeWillMeetAgain","ThisIsMe","ReturnToDarkness","CarveTheMoonWeaveTheClouds","NowhereToRun","TodayIsAnotherPeacefulDay","BeforeTheTutorialMissionStarts","HeyOverHere","NightOnTheMilkyWay","InTheNight","SomethingIrreplaceable","ButTheBattleIsntOver","InTheNameOfTheWorld","MomentOfVictory","PatienceIsAllYouNeed","IncessantRain","EchoesOfTheCoffin","TheUnreachableSide","BeforeDawn","SheAlreadyShutHerEyes","SleepLikeTheDead","TimeWaitsForNoOne","IShallBeMyOwnSword","BrighterThanTheSun","WorrisomeBlissful","NightOfFright","AnInstantBeforeAGaze","PastSelfInMirror","BaptismOfPureThought","OnTheFallOfAnAeon","CruisingInTheStellarSea","TextureOfMemories","SolitaryHealing","EarthlyEscapade","ReforgedRemembrance","sValuesCd","sValuesDmg","sValuesFuaPen","r","sValues","sValuesCr","sValuesAtk","sValuesAtkStacks","sValuesDmgBuff","sValuesFuaDmg","sValuesErr","sValuesStackDmg","sValuesDefPen","sValuesSkillUltDmg","sValuesSpd","stacks","sValuesDmgBoost","sValuesStacks","sMaxValues","boost","sValuesDotPen","LightConeConditionals","lcFn","superimposition","display","ASHBLAZING_ATK_STACK","calculateAshblazingSet","hitMulti","enabled","p4","ashblazingAtk","characterOptionMapping","jingliu","argenti","arlan","asta","bailu","blade","bronya","clara","danheng","fuxuan","gepard","guinaifen","hanya","herta","himeko","hook","huohuo","imbibitorlunae","jingyuan","kafka","luka","luocha","lynx","march7th","natasha","pela","qingque","sampo","seele","serval","silverwolf","sushang","tingyun","topaz","physicaltrailblazer","firetrailblazer","welt","yanqing","yukong","ruanmei","drratio","xueyi","sparkle","blackswan","misha","baseComputedStatsObject","ultBoostMax","ult","basicScaling","basic","skillScaling","skill","ultScaling","fuaScaling","talent","hitMultiByFuaHits","ashblazingMulti","debuffStacksMax","summationStacksMax","e2FuaRatio","procs","fua","baseHitMulti","fuaMultiByDebuffs","fieldResPenValue","beOver","skillAtkBuffValue","ultCdBuffValue","ultCrBuffValue","talentAtkScaling","talentCdBuffValue","talentCrBuffValue","skillExtraHitsMax","talentScaling","skillDamageReductionValue","basicAtkScaling","basicDefScaling","basicEnhancedAtkScaling","basicEnhancedDefScaling","ultAtkScaling","ultDefScaling","talentAtkScalingValue","ultEnhancedScaling","proofOfDebtFuaVulnerability","enhancedStateFuaScalingBoost","enhancedStateFuaCdBoost","basicHitCountMulti","fuaHitCountMulti","fuaEnhancedHitCountMulti","ashblazingFuaData","ashblazingBasicData","skillAtkBoostMax","ultDmgBoost","talentSpdBuffValue","ultBuffedAtk","talentSpdBuffStacksMax","skillExtraHitScaling","originalSkillScaling","stanceSkillScaling","stanceScalingProportion","skillResShredValue","skillDefShredBufValue","ultDefShredValue","talentExtraDmgScaling","dotScaling","buffedStateDmgBuff","speedBoostStacksMax","dotVulnerabilityValue","skillStackDmg","talentAtkBuff","basicEnhancedScaling","hitMultiByTargetsBlast","hitMultiSingle","ultDefPenValue","skillHpPercentBuff","skillHpFlatBuff","basicEnhancedHitValue","targetUltDebuffDmgTakenValue","hits","stacksPerMiss","stacksPerHit","stacksPreHit","ashblazingStacks","atkBoostSum","righteousHeartStackMax","outroarStackCdValue","righteousHeartDmgValue","basicEnhanced1Scaling","basicEnhanced2Scaling","basicEnhanced3Scaling","ultBuffValue","targetBurnedExtraScaling","skillEnhancedScaling","hitMultiByTargets","ultSpdBuffValue","ultAtkBuffValue","talentDmgBoostValue","talentDebuffDmgIncreaseValue","talentDebuffMax","skillCrBuffValue","skillHpBuffValue","talentDmgReductionValue","extraPenValue","ultExtraScaling","ultDmgReductionValue","ultFuaExtraScaling","skillDmgBoostValue","ultAtkBoostValue","ultCdBoostValue","ultCdBoostBaseValue","enhancedStateDmgBoost","hpPercentLostTotalMax","basicEnhancedHpScaling","ultHpScaling","ultLostHpScaling","fuaAtkScaling","fuaHpScaling","talentStacksAtkBuff","talentStacksDefBuff","skillExtraDmgHitsMax","talentMissingHpDmgBoostMax","talentMaxStacks","ultEnhancedExtraHitScaling","talentCrStackValue","talentCrBuff","talentHpDrainAtkBuffMax","arcanaStackMultiplier","stack3ArcanaBlastDmg","epiphanyDmgTakenBoost","defShredValue","skillCdBuffScaling","skillCdBuffBase","cipherTalentStackBoost","talentBaseStackBoost","atkBoostByQuantumAllies","ultStackScaling","value1","value2","CharacterConditionals","characterFn","eidolon","CharacterStats","maxedMainStats","StatCalculator","characterMetadata","characterLevel","lightConeMetadata","lightConeStats","superimpositionStats","traceStats","characterStats","baseStats","lc","trace","sum","total","crSum","cdSum","hero","elementalDmg","ehp","cv","aggs","rows","filteredIndices","filterModel","sortModel","columnsToAggregate","columnsToAggregateMap","inputConsts","inputRelics","formValues","selectedNodes","row","build","event","data","map","newSortModel","newFilterModel","params","sort","filter","indicesSubArray","subArray","aggregate","lSize","pSize","fSize","bSize","gSize","hSize","l","p","f","g","h","newForm","unsetMax","unsetMin","defaultOptions","defaultLcOptions","MAX_INT","fixValue","displayFormValues","setPinnedRow","percent","def","div","minAgg","column","setMinMax","maxAgg","inPlaceSort","isCombat","indices","stats","SIZE","BufferPacker","offset","length","results","buffer","poolSize","workers","buffers","taskQueue","taskStatus","WorkerPool","worker","task","callback","message","RelicFilters","weights","statScalings","weight","scale","originalRelics","partition","higherRankedRelics","rankedCharacter","out","blacklist","relicFilter","allowedSets","relicSet","index1","index2","ornamentFilter","ornamentSet","matchingRelic","MAX_RESULTS","relicToArray","partToNumber","setToNumber","result","characterToArrays","CANCEL","Optimizer","preFilteredRelicsByPart","addMainStatToAugmentedStats","applyMaxedMainStatsFilter","splitRelicsByPart","relicsArrays","relicsByPartToArray","generateRelicSetAllowList","generateOrnamentSetAllowList","permutations","increment","searched","runs","inProgress","resultsShown","handleTopRow","resultArr","rowData","run","generateEmptyArr","relicSetAllowListToIndices","fillRelicSetArrPossibilities","len","j","newArr","permutator","inputArr","permute","m","curr","next","convertRelicSetIndicesTo1D","setIndices","y","index1D","setRequest","setIndex","setArr","filledIndices","FormRow","shadow","FilterContainer","panelWidth","defaultPadding","smallWidth","mediumWidth","FormCard","OptimizerOptions","setStatDisplay","onChangeStatDisplay","Select","Radio","FormStatRollSlider","FormStatRollSliderTopPercent","VerticalDivider","Divider","setConditionalsIconWidth","setConditionalsNameWidth","setConditionalsWidth","FormSetConditionals","conditionalSetEffectsDrawerOpen","setConditionalSetEffectsDrawerOpen","setChampionOfStreetwiseBoxingOptions","useMemo","options","setWastelanderOfBanditryDesert","setLongevousDiscipleOptions","setTheAshblazingGrandDukeOptions","setPrisonerInDeepConfinementOptions","defaultMessage","Drawer","ConditionalSetOption","inputType","SHOW_CHILD","Cascader","HorizontalDivider","generateOrnamentsOptions","generateSetsOptions","childrenWithAny","generateLabel","parens","imageSrc","FormStatTextStyled","InputNumberStyled","FilterRow","OptimizerForm","optimizerForm","optimizationId","setOptimizationId","characterOptions","lightConeOptions","lcData","selectedLightCone","setSelectedLightCone","useEffect","defaults","lightConeForm","lightConeSelectorChange","selectedCharacter","setSelectedCharacter","selectedOptimizerCharacter","setSelectedOptimizerCharacter","characterSelectorChange","levelOptions","levelStats","enemyLevelOptions","enemyCountOptions","enemyResistanceOptions","enemyHpPercentOptions","superimpositionOptions","eidolonOptions","onFinish","onFinishFailed","onValuesChange","changedValues","allValues","bypass","keys","permutationDetails","filterOption","parentW","parentH","innerW","innerH","initialValues","cancelClicked","resetClicked","filterClicked","startClicked","OrnamentSetTagRenderer","closable","onClose","onPreventMouseDown","Tag","RelicSetTagRenderer","pieces","inner","React","Image","Button","SettingOutlined","Renderer","setImages","s1","s2","s3","s4","assetValue","otherIndex","SetDisplay","ornamentSetCount","setImage","src","equippedBy","mainstat","color","gradeToColor","Tooltip","CheckCircleFilled","iconSize","generateStat","source","displayValue","getRelic","RelicPreview","relicSrc","equippedBySrc","scored","relicClicked","Card","minRollValue","mainStatFreeRolls","setMainStatFreeRolls","ratingToRolls","ratings","countPairs","pairs","RelicScorer","scoredRelics","missingSets","deduction","avgSubstatScore","rating","scaling","multipliers","mainStatScore","metaParts","max","OptimizerBuildPreview","forceUpdate","React.useReducer","o","headScore","handsScore","bodyScore","_c","feetScore","_d","planarSphereScore","_e","linkRopeScore","_f","_g","_h","_i","_j","_k","_l","PermutationDisplay","rightText","Sidebar","permutationsSearched","permutationsResults","optimizerGridGradient","tinygradient","relicGridGradient","relicColumnRanges","Gradient","decimal","gradient","colId","min","range","col","OptimizerTab","optimizerGrid","useRef","optimizerBuild","setOptimizerBuild","cellClickedListener","useCallback","DIGITS_4","DIGITS_5","statDisplay","baseColumnDefs","combatColumnDefs","columnDefs","datasource","gridOptions","defaultColDef","AgGridReact","OcrParserFribbels1","json","parsedRelics","readRelic","stringSimilarity","setMatches","lowerAlphaNumeric","relicSetList","parsedStats","readStats","rest","last","statMatches","statList","lowerAlphaNumericPercent","statResult","parsedStat","str","substatMapping","mainstatMapping","partMapping","affixMapping","formTemplate","OcrParserKelz3","parsedCharacters","readCharacter","characterList","lightConeList","lightCones","newCharacter","lcKey","rawSubstats","parsedSubstats","mappedStat","rawMainstat","parsedMainStat","affixMetadata","spinnerMs","saveFile","blob","suggestedName","writable","err","blobURL","saveDataTab","saveClicked","DownloadOutlined","clearDataTab","loading","setLoading","clearDataClicked","Popconfirm","loadDataTab","current","setCurrent","currentSave","setCurrentSave","loading1","setLoading1","loading2","setLoading2","onStepChange","beforeUpload","file","reader","fileUploadText","onUploadClick","loadConfirmed","loadDataContentUploadFile","Upload","UploadOutlined","confirmLoadData","loadCompleted","Steps","kelZImporterTab","currentRelics","setCurrentRelics","currentCharacters","setCurrentCharacters","mergeRelicsConfirmed","mergeCharactersConfirmed","kelZImporterContentUploadFile","confirmRelicMerge","mergeCompleted","fribbelsImporterTab","fribbelsImporterContentUploadFile","ImportTab","Tabs","RadioIcon","renderMainStat","renderStat","renderSubstat","RelicModal","relicForm","mainStatOptions","setMainStatOptions","defaultValues","entry","item","substatTypes","mainStatType","specialStats","floorStats","mainStatValue","handleCancel","handleOk","enhanceOptions","setOptions","substatOptions","Modal","tagHeight","imgWidth","RelicFilterBar","setRelicTabFilters","setSelectedScoringCharacter","currentlySelectedCharacterId","setCurrentlySelectedCharacterId","generateImageTags","srcFn","tooltip","generateTextTags","width","setsData","partsData","mainStatsData","subStatsData","enhanceData","scoringMetadata","possibleSubstats","level80Stats","scoringResult","subScore","mainScore","bestUnobtainedSubstat","finalSubstatWeights","bestOverallSubstatWeight","avgWeight","extraRolls","missingSubstats","missingRolls","clearClicked","scoringClicked","rescoreClicked","relicTabFilters","selectedTags","handleChange","tag","checked","nextSelectedTags","t","clonedFilters","CheckableTag","RelicsTab","gridRef","relicRows","setRelicRows","selectedRelic","setSelectedRelic","editModalOpen","setEditModalOpen","addModalOpen","setAddModalOpen","substatFilter","onCellDoubleClickedListener","onAddOk","onEditOk","updatedRelic","editClicked","addClicked","deleteClicked","StatText","lcParentH","lcParentW","lcInnerW","lcInnerH","middleColumnWidth","CharacterPreview","characterTabBlur","setCharacterTabBlur","isScorer","displayRelics","scoringResults","finalStats","relicsArray","lightConeName","lightConeSrc","characterName","characterPath","characterElement","elementalDmgValue","StatRow","readableStat","Rarity","cellImageRenderer","characterIconSrc","cellRankRenderer","cellNameRenderer","equippedNumber","CharacterTab","characterGrid","characterRows","setCharacterRows","characterTabSelectedId","setCharacterTabSelectedId","cellDoubleClickedListener","drag","dragged","onRowDragEnd","onRowDragLeave","removeClicked","unequipClicked","scoringAlgorithmClicked","ComingSoonTab","RelicScorerTab","availableCharacters","setAvailableCharacters","scorerId","setScorerId","scorerForm","buttonClick","response","array","converted","error","CharacterPreviewSelection","availableCharacter","selectionChange","selected","importClicked","Segmented","initialId","savedId","Input","GettingStartedTab","tryItOutClicked","sampleSave","screenshotStyle","dividerStyle","titleStyle","BetaTab","active","showModal","TitleDivider","PStyled","ScoringModal","scoringAlgorithmForm","selectedScoringCharacter","isScoringModalOpen","setIsScoringModalOpen","getScoringValuesForDisplay","selectWidth","StatValueRow","onModalOk","nullUndefinedToZero","handleResetDefault","displayScoringMetadata","previewSrc","methodologyCollapse","Collapse","defaultError","optimizerActive","charactersActive","relicsActive","importActive","gettingStartedActive","scorerActive","comingSoonActive","betaActive","optimizerDisplay","ErrorBoundary","charactersDisplay","relicsDisplay","importDisplay","gettingStartedDisplay","scorerDisplay","comingSoonDisplay","betaDisplay","Fragment","Header","Sider","Content","Layout","App","notificationApi","notificationContextHolder","notification","messageApi","messageContextHolder","theme","DataParser","parseBaseStatsByLevel","characterPromotions","lightConeSuperimpositions","getSuperimpositions","parseBaseLightConeStatsByLevel","lightConePromotions","characterTraces","getOverrideTraces","imageCenters","getOverrideImageCenter","getScoringMetadata","traceData","imageCenter","getDisplayName","relicMainAffixes","relicSubAffixes","displayNameMapping","promotions","valueIndex","statScaling","ReactDOM"],"mappings":"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AAU,MAAM,GAC7B,mBAAoBA,EAAU,MAAM,IACpC,cAAeA,EAAU,MAAM,IAC/B,gBAAiBA,EAAU,MAAM,EACvC,CAAK,CACF,CACH,EAGA,IAAI2F,GAAkB,CACpB,EAAK,CACH,GAAM,CACJ,GAAM,GACN,GAAM,GACN,GAAM,CACP,EACD,IAAO,CACL,EAAK,GACL,EAAK,GACL,EAAK,CACN,EACD,IAAO,CACL,EAAK,GACL,EAAK,GACL,EAAK,CACN,EACD,IAAO,CACL,MAAO,GACP,MAAO,GACP,MAAO,CACR,EACD,KAAQ,CACN,MAAO,GACP,MAAO,GACP,MAAO,CACR,EACD,KAAQ,CACN,MAAO,GACP,MAAO,GACP,MAAO,CACR,EACD,IAAO,CACL,EAAK,CACH,GACA,GACA,CACD,CACF,EACD,aAAc,CACZ,EAAK,GACL,MAAO,GACP,MAAO,CACR,EACD,YAAa,CACX,EAAK,GACL,MAAO,GACP,MAAO,CACR,EACD,mBAAoB,CAClB,MAAO,GACP,MAAO,GACP,MAAO,CACR,EACD,cAAe,CACb,MAAO,GACP,MAAO,GACP,MAAO,CACR,EACD,gBAAiB,CACf,EAAK,GACL,MAAO,GACP,MAAO,CACR,CACF,EACD,EAAK,CACH,GAAM,CACJ,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,CACP,EACD,IAAO,CACL,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,CACP,EACD,IAAO,CACL,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,CACP,EACD,IAAO,CACL,EAAK,GACL,MAAO,GACP,MAAO,EACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,CACR,EACD,KAAQ,CACN,EAAK,GACL,MAAO,GACP,MAAO,EACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,CACR,EACD,KAAQ,CACN,MAAO,GACP,MAAO,GACP,MAAO,EACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,CACR,EACD,IAAO,CACL,EAAK,CACH,GACA,GACA,CACD,EACD,EAAK,CACH,IACA,IACA,IACA,IACA,CACD,CACF,EACD,aAAc,CACZ,MAAO,GACP,MAAO,GACP,MAAO,EACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,CACR,EACD,YAAa,CACX,MAAO,GACP,MAAO,GACP,MAAO,EACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,CACR,EACD,mBAAoB,CAClB,EAAK,GACL,MAAO,GACP,MAAO,EACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,CACR,EACD,cAAe,CACb,EAAK,GACL,MAAO,GACP,MAAO,EACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,CACR,EACD,gBAAiB,CACf,MAAO,GACP,MAAO,GACP,MAAO,EACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,IACP,MAAO,CACR,CACF,EACD,EAAK,CACH,GAAM,CACJ,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,CACR,EACD,IAAO,CACL,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,CACP,EACD,IAAO,CACL,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,I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ACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,IACR,OAAQ,CACT,CACF,EACD,EAAK,CACH,GAAM,CACJ,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,CACR,EACD,IAAO,CACL,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,IAAO,IACP,IAAO,IACP,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,CACR,EACD,IAAO,CACL,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,I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"}