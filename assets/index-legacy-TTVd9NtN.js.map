{"version":3,"file":"index-legacy-TTVd9NtN.js","sources":["../../src/icons/DiscordIcon.jsx","../../src/icons/GithubIcon.jsx","../../src/icons/CoffeeIcon.jsx","../../src/components/MenuDrawer.jsx","../../src/lib/constants.ts","../../src/lib/utils.js","../../src/lib/characterConverter.js","../../src/lib/relicRollFixer.js","../../src/lib/gpuOptimizer.js","../../src/lib/relicAugmenter.js","../../src/lib/defaultForm.js","../../src/lib/saveState.js","../../src/lib/message.js","../../src/lib/db.js","../../src/components/HeaderText.js","../../src/components/optimizerTab/FormConditionalInputs.jsx","../../src/lib/assets.js","../../src/components/TooltipImage.jsx","../../src/lib/hint.jsx","../../src/lib/lightConeConditionals.jsx","../../src/lib/characterConditionals.jsx","../../src/lib/statCalculator.js","../../src/lib/optimizerTabController.js","../../src/lib/characterStats.js","../../src/lib/bufferPacker.js","../../src/lib/workerPool.js","../../src/lib/relicFilters.js","../../src/lib/optimizer.js","../../src/components/optimizerTab/FormRow.jsx","../../src/components/optimizerTab/FilterContainer.jsx","../../src/components/optimizerTab/FormCard.jsx","../../src/components/optimizerTab/OptimizerOptions.jsx","../../src/components/optimizerTab/FormStatRollSlider.jsx","../../src/components/VerticalDivider.jsx","../../src/components/optimizerTab/FormSetConditionals.jsx","../../src/components/OptimizerForm.jsx","../../src/lib/renderer.jsx","../../src/components/RelicPreview.jsx","../../src/lib/relicScorer.ts","../../src/components/OptimizerBuildPreview.jsx","../../src/components/optimizerTab/Sidebar.jsx","../../src/lib/gradient.js","../../src/components/OptimizerTab.jsx","../../src/lib/ocrParserFribbels1.js","../../src/lib/ocrParserKelz3.js","../../src/components/ImportTab.jsx","../../src/components/RelicModal.jsx","../../src/components/RelicFilterBar.jsx","../../src/components/RelicsTab.jsx","../../src/components/CharacterPreview.jsx","../../src/components/CharacterTab.jsx","../../src/components/ComingSoonTab.jsx","../../src/components/RelicScorerTab.jsx","../../src/components/GettingStartedTab.jsx","../../src/components/BetaTab.jsx","../../src/components/ScoringModal.jsx","../../src/components/Tabs.jsx","../../src/App.jsx","../../src/lib/dataParser.js","../../src/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Icon from '@ant-design/icons';\n\nconst IconSVG = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 -1 16 16\">\n  <path d=\"M13.545 2.907a13.227 13.227 0 0 0-3.257-1.011.05.05 0 0 0-.052.025c-.141.25-.297.577-.406.833a12.19 12.19 0 0 0-3.658 0 8.258 8.258 0 0 0-.412-.833.051.051 0 0 0-.052-.025c-1.125.194-2.22.534-3.257 1.011a.041.041 0 0 0-.021.018C.356 6.024-.213 9.047.066 12.032c.001.014.01.028.021.037a13.276 13.276 0 0 0 3.995 2.02.05.05 0 0 0 .056-.019c.308-.42.582-.863.818-1.329a.05.05 0 0 0-.01-.059.051.051 0 0 0-.018-.011 8.875 8.875 0 0 1-1.248-.595.05.05 0 0 1-.02-.066.051.051 0 0 1 .015-.019c.084-.063.168-.129.248-.195a.05.05 0 0 1 .051-.007c2.619 1.196 5.454 1.196 8.041 0a.052.052 0 0 1 .053.007c.08.066.164.132.248.195a.051.051 0 0 1-.004.085 8.254 8.254 0 0 1-1.249.594.05.05 0 0 0-.03.03.052.052 0 0 0 .003.041c.24.465.515.909.817 1.329a.05.05 0 0 0 .056.019 13.235 13.235 0 0 0 4.001-2.02.049.049 0 0 0 .021-.037c.334-3.451-.559-6.449-2.366-9.106a.034.034 0 0 0-.02-.019Zm-8.198 7.307c-.789 0-1.438-.724-1.438-1.612 0-.889.637-1.613 1.438-1.613.807 0 1.45.73 1.438 1.613 0 .888-.637 1.612-1.438 1.612m5.316 0c-.788 0-1.438-.724-1.438-1.612 0-.889.637-1.613 1.438-1.613.807 0 1.451.73 1.438 1.613 0 .888-.631 1.612-1.438 1.612\"/>\n</svg>\n\nexport const DiscordIcon = (props) => {\n  return <Icon component={IconSVG} {...props}/>\n}","import * as React from \"react\";\nimport Icon from '@ant-design/icons';\n\nconst IconSVG = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n  <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8\"/>\n</svg>\n\nexport const GithubIcon = (props) => {\n  return <Icon component={IconSVG} {...props}/>\n}","import * as React from \"react\";\nimport Icon from '@ant-design/icons';\n\nconst IconSVG = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n  <path fillRule=\"evenodd\" d=\"M.5 6a.5.5 0 0 0-.488.608l1.652 7.434A2.5 2.5 0 0 0 4.104 16h5.792a2.5 2.5 0 0 0 2.44-1.958l.131-.59a3 3 0 0 0 1.3-5.854l.221-.99A.5.5 0 0 0 13.5 6zM13 12.5a2.01 2.01 0 0 1-.316-.025l.867-3.898A2.001 2.001 0 0 1 13 12.5\"/>\n  <path d=\"m4.4.8-.003.004-.014.019a4.167 4.167 0 0 0-.204.31 2.327 2.327 0 0 0-.141.267c-.026.06-.034.092-.037.103v.004a.593.593 0 0 0 .091.248c.075.133.178.272.308.445l.01.012c.118.158.26.347.37.543.112.2.22.455.22.745 0 .188-.065.368-.119.494a3.31 3.31 0 0 1-.202.388 5.444 5.444 0 0 1-.253.382l-.018.025-.005.008-.002.002A.5.5 0 0 1 3.6 4.2l.003-.004.014-.019a4.149 4.149 0 0 0 .204-.31 2.06 2.06 0 0 0 .141-.267c.026-.06.034-.092.037-.103a.593.593 0 0 0-.09-.252A4.334 4.334 0 0 0 3.6 2.8l-.01-.012a5.099 5.099 0 0 1-.37-.543A1.53 1.53 0 0 1 3 1.5c0-.188.065-.368.119-.494.059-.138.134-.274.202-.388a5.446 5.446 0 0 1 .253-.382l.025-.035A.5.5 0 0 1 4.4.8m3 0-.003.004-.014.019a4.167 4.167 0 0 0-.204.31 2.327 2.327 0 0 0-.141.267c-.026.06-.034.092-.037.103v.004a.593.593 0 0 0 .091.248c.075.133.178.272.308.445l.01.012c.118.158.26.347.37.543.112.2.22.455.22.745 0 .188-.065.368-.119.494a3.31 3.31 0 0 1-.202.388 5.444 5.444 0 0 1-.253.382l-.018.025-.005.008-.002.002A.5.5 0 0 1 6.6 4.2l.003-.004.014-.019a4.149 4.149 0 0 0 .204-.31 2.06 2.06 0 0 0 .141-.267c.026-.06.034-.092.037-.103a.593.593 0 0 0-.09-.252A4.334 4.334 0 0 0 6.6 2.8l-.01-.012a5.099 5.099 0 0 1-.37-.543A1.53 1.53 0 0 1 6 1.5c0-.188.065-.368.119-.494.059-.138.134-.274.202-.388a5.446 5.446 0 0 1 .253-.382l.025-.035A.5.5 0 0 1 7.4.8m3 0-.003.004-.014.019a4.077 4.077 0 0 0-.204.31 2.337 2.337 0 0 0-.141.267c-.026.06-.034.092-.037.103v.004a.593.593 0 0 0 .091.248c.075.133.178.272.308.445l.01.012c.118.158.26.347.37.543.112.2.22.455.22.745 0 .188-.065.368-.119.494a3.198 3.198 0 0 1-.202.388 5.385 5.385 0 0 1-.252.382l-.019.025-.005.008-.002.002A.5.5 0 0 1 9.6 4.2l.003-.004.014-.019a4.149 4.149 0 0 0 .204-.31 2.06 2.06 0 0 0 .141-.267c.026-.06.034-.092.037-.103a.593.593 0 0 0-.09-.252A4.334 4.334 0 0 0 9.6 2.8l-.01-.012a5.099 5.099 0 0 1-.37-.543A1.53 1.53 0 0 1 9 1.5c0-.188.065-.368.119-.494.059-.138.134-.274.202-.388a5.446 5.446 0 0 1 .253-.382l.025-.035A.5.5 0 0 1 10.4.8\"/>\n</svg>\n\nexport const CoffeeIcon = (props) => {\n  return <Icon component={IconSVG} {...props}/>\n}","import React from 'react';\nimport { MenuOutlined } from '@ant-design/icons';\nimport { ConfigProvider, Menu, Typography } from 'antd';\nimport { DiscordIcon } from '../icons/DiscordIcon';\nimport { GithubIcon } from '../icons/GithubIcon';\nimport { CoffeeIcon } from '../icons/CoffeeIcon';\nimport PropTypes from \"prop-types\";\n\nfunction getItem(label, key, icon, children, type) {\n  return {\n    key,\n    icon,\n    children,\n    label,\n    type,\n  };\n}\nconst items = [\n  getItem('Menu', 'sub1', <MenuOutlined />, [\n    getItem('Optimizer', 'optimizer'),\n    getItem('Characters', 'characters'),\n    getItem('Relics', 'relics'),\n    getItem('Import / Save', 'import'),\n    getItem('Getting started', '#getting-started'),\n  ]),\n  getItem('Tools', 'sub2', <MenuOutlined />, [\n    getItem('Relic scorer', '#scorer'),\n    getItem('Coming soon', 'coming-soon'),\n  ]),\n  getItem('Links', 'sub4', <MenuOutlined />, [\n    getItem(\n      <Typography.Link href=\"https://discord.gg/rDmB4Un7qg\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <DiscordIcon style={{ marginRight: 5 }} /> Discord\n      </Typography.Link>,\n      'link discord',\n    ),\n    getItem(\n      <Typography.Link href=\"https://www.patreon.com/fribbels\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <CoffeeIcon style={{ marginRight: 5 }} /> Donate\n      </Typography.Link>,\n      'link donate',\n    ),\n    getItem(\n      <Typography.Link href=\"https://github.com/fribbels/hsr-optimizer\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <GithubIcon style={{ marginRight: 5 }} /> Github\n      </Typography.Link>,\n      'link github',\n    ),\n  ]),\n];\n\nconst MenuDrawer = (props) => {\n  const { hashes } = props\n\n  const activeKey = window.store(s => s.activeKey)\n  const setActiveKey = window.store(s => s.setActiveKey)\n\n  const onClick = (e) => {\n    if (e.key && e.key.includes('link')) return\n\n    if (hashes.includes(e.key)) {\n      history.replaceState(null, null, e.key)\n    } else {\n      history.replaceState(null, null, ' ');\n    }\n    setActiveKey(e.key)\n  };\n\n  return (\n    <ConfigProvider\n      theme={{\n        components: {\n          Menu: {\n            margin: 2\n          },\n        },\n      }}\n    >\n      <Menu\n        onClick={onClick}\n        // inlineIndent={15}\n        style={{\n          height: '100%',\n          overflow: 'auto'\n\n        }}\n        defaultSelectedKeys={['1']}\n        defaultOpenKeys={['sub1', 'sub2', 'sub4']}\n        selectedKeys={activeKey}\n        mode=\"inline\"\n        items={items}\n      />\n    </ConfigProvider>\n  );\n};\nMenuDrawer.propTypes = {\n  hashes: PropTypes.array,\n}\n\nexport default MenuDrawer;","export const Stats = {\n  ATK_P: 'ATK%',\n  ATK: 'ATK',\n  BE: 'Break Effect',\n  CD: 'CRIT DMG',\n  CR: 'CRIT Rate',\n  DEF_P: 'DEF%',\n  DEF: 'DEF',\n  EHR: 'Effect Hit Rate',\n  ERR: 'Energy Regeneration Rate',\n  Fire_DMG: 'Fire DMG Boost',\n  HP_P: 'HP%',\n  HP: 'HP',\n  Ice_DMG: 'Ice DMG Boost',\n  Imaginary_DMG: 'Imaginary DMG Boost',\n  Lightning_DMG: 'Lightning DMG Boost',\n  OHB: 'Outgoing Healing Boost',\n  Physical_DMG: 'Physical DMG Boost',\n  Quantum_DMG: 'Quantum DMG Boost',\n  RES: 'Effect RES',\n  SPD_P: 'SPD%',\n  SPD: 'SPD',\n  Wind_DMG: 'Wind DMG Boost'\n};\nexport type Stats = typeof Stats[keyof typeof Stats];\n\nexport const MainStats = [\n  Stats.HP_P,\n  Stats.ATK_P,\n  Stats.DEF_P,\n  Stats.HP,\n  Stats.ATK,\n  Stats.SPD,\n  Stats.CR,\n  Stats.CD,\n  Stats.EHR,\n  Stats.BE,\n  Stats.ERR,\n  Stats.OHB,\n  Stats.Physical_DMG,\n  Stats.Fire_DMG,\n  Stats.Ice_DMG,\n  Stats.Lightning_DMG,\n  Stats.Wind_DMG,\n  Stats.Quantum_DMG,\n  Stats.Imaginary_DMG,\n];\nexport type MainStats = typeof MainStats[number];\n\nexport const MainStatsValues = {\n  [Stats.HP_P]: { '5': { 'base': 6.912, 'increment': 2.4192 }, '4': { 'base': 5.5296, 'increment': 1.9354 }, '3': { 'base': 4.1472, 'increment': 1.4515 }, '2': { 'base': 2.7648, 'increment': 0.9677 } },\n  [Stats.ATK_P]: { '5': { 'base': 6.912, 'increment': 2.4192 }, '4': { 'base': 5.5296, 'increment': 1.9354 }, '3': { 'base': 4.1472, 'increment': 1.4515 }, '2': { 'base': 2.7648, 'increment': 0.9677 } },\n  [Stats.DEF_P]: { '5': { 'base': 8.64, 'increment': 3.024 }, '4': { 'base': 6.912, 'increment': 2.4192 }, '3': { 'base': 5.184, 'increment': 1.8144 }, '2': { 'base': 3.456, 'increment': 1.2096 } },\n  [Stats.HP]: { '5': { 'base': 112.896, 'increment': 39.5136 }, '4': { 'base': 90.3168, 'increment': 31.61088 }, '3': { 'base': 67.7376, 'increment': 23.70816 }, '2': { 'base': 45.1584, 'increment': 15.80544 } },\n  [Stats.ATK]: { '5': { 'base': 56.448, 'increment': 19.7568 }, '4': { 'base': 45.1584, 'increment': 15.80544 }, '3': { 'base': 33.8688, 'increment': 11.85408 }, '2': { 'base': 22.5792, 'increment': 7.90272 } },\n  [Stats.SPD]: { '5': { 'base': 4.032, 'increment': 1.4 }, '4': { 'base': 3.226, 'increment': 1.1 }, '3': { 'base': 2.419, 'increment': 1.0 }, '2': { 'base': 1.613, 'increment': 1.0 } },\n  [Stats.CR]: { '5': { 'base': 5.184, 'increment': 1.8144 }, '4': { 'base': 4.1472, 'increment': 1.4515 }, '3': { 'base': 3.1104, 'increment': 1.0886 }, '2': { 'base': 2.0736, 'increment': 0.7258 } },\n  [Stats.CD]: { '5': { 'base': 10.368, 'increment': 3.6288 }, '4': { 'base': 8.2944, 'increment': 2.9030 }, '3': { 'base': 6.2208, 'increment': 2.1773 }, '2': { 'base': 4.1472, 'increment': 1.4515 } },\n  [Stats.EHR]: { '5': { 'base': 6.912, 'increment': 2.4192 }, '4': { 'base': 5.5296, 'increment': 1.9354 }, '3': { 'base': 4.1472, 'increment': 1.4515 }, '2': { 'base': 2.7648, 'increment': 0.9677 } },\n  [Stats.BE]: { '5': { 'base': 10.3680, 'increment': 3.6288 }, '4': { 'base': 8.2944, 'increment': 2.9030 }, '3': { 'base': 6.2208, 'increment': 2.1773 }, '2': { 'base': 4.1472, 'increment': 1.4515 } },\n  [Stats.ERR]: { '5': { 'base': 3.1104, 'increment': 1.0886 }, '4': { 'base': 2.4883, 'increment': 0.8709 }, '3': { 'base': 1.8662, 'increment': 0.6532 }, '2': { 'base': 1.2442, 'increment': 0.4355 } },\n  [Stats.OHB]: { '5': { 'base': 5.5296, 'increment': 1.9354 }, '4': { 'base': 4.4237, 'increment': 1.5483 }, '3': { 'base': 3.3178, 'increment': 1.1612 }, '2': { 'base': 2.2118, 'increment': 0.7741 } },\n  [Stats.Physical_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Fire_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Ice_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Lightning_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Wind_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Quantum_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Imaginary_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n}\n\nexport const SubStats = [\n  Stats.ATK_P,\n  Stats.ATK,\n  Stats.BE,\n  Stats.CD,\n  Stats.CR,\n  Stats.DEF_P,\n  Stats.DEF,\n  Stats.EHR,\n  Stats.HP_P,\n  Stats.HP,\n  Stats.RES,\n  Stats.SPD,\n];\nexport type SubStats = typeof SubStats[number];\n\nexport const StatsToReadable = {\n  [Stats.HP_P]: 'HP %',\n  [Stats.ATK_P]: 'ATK %',\n  [Stats.DEF_P]: 'DEF %',\n  [Stats.SPD_P]: 'SPD %',\n  [Stats.HP]: 'HP',\n  [Stats.ATK]: 'ATK',\n  [Stats.DEF]: 'DEF',\n  [Stats.SPD]: 'SPD',\n  [Stats.CR]: 'CRIT Rate',\n  [Stats.CD]: 'CRIT DMG',\n  [Stats.EHR]: 'Effect Hit Rate',\n  [Stats.RES]: 'Effect RES',\n  [Stats.BE]: 'Break Effect',\n  [Stats.ERR]: 'Energy Regen',\n  [Stats.OHB]: 'Healing Boost',\n  [Stats.Physical_DMG]: 'Physical DMG',\n  [Stats.Fire_DMG]: 'Fire DMG',\n  [Stats.Ice_DMG]: 'Ice DMG',\n  [Stats.Lightning_DMG]: 'Lightning DMG',\n  [Stats.Wind_DMG]: 'Wind DMG',\n  [Stats.Quantum_DMG]: 'Quantum DMG',\n  [Stats.Imaginary_DMG]: 'Imaginary DMG'\n}\n\nexport const StatsToIndex: Record<string, number> = {\n\n}\nlet i = 0;\nObject.values(Stats).map(x => StatsToIndex[x] = i++)\n\nexport const Parts = {\n  Head: 'Head',\n  Hands: 'Hands',\n  Body: 'Body',\n  Feet: 'Feet',\n  PlanarSphere: 'PlanarSphere',\n  LinkRope: 'LinkRope'\n};\nexport type Parts = typeof Parts[keyof typeof Parts];\n\nexport const PartsToReadable = {\n  [Parts.Head]: 'Head',\n  [Parts.Hands]: 'Hands',\n  [Parts.Body]: 'Body',\n  [Parts.Feet]: 'Feet',\n  [Parts.PlanarSphere]: 'Sphere',\n  [Parts.LinkRope]: 'Rope'\n};\nexport type PartsToReadable = typeof PartsToReadable[keyof typeof PartsToReadable];\n\nexport const PartsMainStats = {\n  [Parts.Head]: [Stats.HP],\n  [Parts.Hands]: [Stats.ATK],\n  [Parts.Body]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.CR, Stats.CD, Stats.OHB, Stats.EHR],\n  [Parts.Feet]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.SPD],\n  [Parts.PlanarSphere]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.Physical_DMG, Stats.Fire_DMG, Stats.Ice_DMG, Stats.Lightning_DMG, Stats.Wind_DMG, Stats.Quantum_DMG, Stats.Imaginary_DMG],\n  [Parts.LinkRope]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.BE, Stats.ERR],\n}\n\nexport const SetsRelics = {\n  'PasserbyOfWanderingCloud': 'Passerby of Wandering Cloud',\n  'MusketeerOfWildWheat': 'Musketeer of Wild Wheat',\n  'KnightOfPurityPalace': 'Knight of Purity Palace',\n  'HunterOfGlacialForest': 'Hunter of Glacial Forest',\n  'ChampionOfStreetwiseBoxing': 'Champion of Streetwise Boxing',\n  'GuardOfWutheringSnow': 'Guard of Wuthering Snow',\n  'FiresmithOfLavaForging': 'Firesmith of Lava-Forging',\n  'GeniusOfBrilliantStars': 'Genius of Brilliant Stars',\n  'BandOfSizzlingThunder': 'Band of Sizzling Thunder',\n  'EagleOfTwilightLine': 'Eagle of Twilight Line',\n  'ThiefOfShootingMeteor': 'Thief of Shooting Meteor',\n  'WastelanderOfBanditryDesert': 'Wastelander of Banditry Desert',\n  'LongevousDisciple': 'Longevous Disciple',\n  'MessengerTraversingHackerspace': 'Messenger Traversing Hackerspace',\n  'TheAshblazingGrandDuke': 'The Ashblazing Grand Duke',\n  'PrisonerInDeepConfinement': 'Prisoner in Deep Confinement',\n};\nexport type SetsRelics = typeof SetsRelics[keyof typeof SetsRelics];\n\nexport const SetsOrnaments = {\n  'SpaceSealingStation': 'Space Sealing Station',\n  'FleetOfTheAgeless': 'Fleet of the Ageless',\n  'PanCosmicCommercialEnterprise': 'Pan-Cosmic Commercial Enterprise',\n  'BelobogOfTheArchitects': 'Belobog of the Architects',\n  'CelestialDifferentiator': 'Celestial Differentiator',\n  'InertSalsotto': 'Inert Salsotto',\n  'TaliaKingdomOfBanditry': 'Talia: Kingdom of Banditry',\n  'SprightlyVonwacq': 'Sprightly Vonwacq',\n  'RutilantArena': 'Rutilant Arena',\n  'BrokenKeel': 'Broken Keel',\n  'FirmamentFrontlineGlamoth': 'Firmament Frontline: Glamoth',\n  'PenaconyLandOfTheDreams': 'Penacony, Land of the Dreams',\n};\nexport type SetsOrnaments = typeof SetsOrnaments[keyof typeof SetsOrnaments];\n\nexport const Sets = {\n  ...SetsRelics,\n  ...SetsOrnaments\n}\nexport type Sets = typeof Sets[keyof typeof Sets];\n\nexport const SetsRelicsNames = Object.values(SetsRelics)\nexport const SetsOrnamentsNames = Object.values(SetsOrnaments)\n\nconst OrnamentSetToIndex: Record<string, number> = {}\nfor (let i = 0; i < SetsOrnamentsNames.length; i++) {\n  OrnamentSetToIndex[SetsOrnamentsNames[i]] = i\n}\n\nconst RelicSetToIndex: Record<string, number> = {}\nfor (let i = 0; i < SetsRelicsNames.length; i++) {\n  RelicSetToIndex[SetsRelicsNames[i]] = i\n}\n\nexport const Constants = {\n  Sets,\n  Parts,\n  Stats,\n  MainStats,\n  MainStatsValues,\n  SubStats,\n  StatsToIndex,\n  SetsOrnaments,\n  SetsRelics,\n  SetsRelicsNames,\n  SetsOrnamentsNames,\n  StatsToReadable,\n  PartsToReadable,\n  PartsMainStats,\n  RelicSetToIndex,\n  OrnamentSetToIndex,\n  // StatMaxes,\n  MAX_INT: 2147483647,\n}","import * as htmlToImage from 'html-to-image';\nimport DB from \"./db\";\nimport { Constants } from \"./constants.ts\";\n\nexport const Utils = {\n  arrayOfZeroes: (n) => {\n    return new Array(n).fill(0);\n  },\n  arrayOfValue: (n, x) => {\n    return new Array(n).fill(x);\n  },\n  sleep: (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  },\n  relicsToSetArrays: (relics) => {\n    let relicSets = Utils.arrayOfValue(Object.values(Constants.SetsRelics).length, 0)\n    let ornamentSets = Utils.arrayOfValue(Object.values(Constants.SetsOrnaments).length, 0)\n\n    for (let relic of relics) {\n      if (!relic) continue\n      if (relic.part == Constants.Parts.PlanarSphere || relic.part == Constants.Parts.LinkRope) {\n        let set = Constants.OrnamentSetToIndex[relic.set]\n        ornamentSets[set]++\n      } else {\n        let set = Constants.RelicSetToIndex[relic.set]\n        relicSets[set]++\n      }\n    }\n\n    return {\n      relicSets: relicSets,\n      ornamentSets: ornamentSets\n    }\n  },\n  isFlat: (stat) => {\n    return stat == Constants.Stats.HP ||\n      stat == Constants.Stats.ATK ||\n      stat == Constants.Stats.DEF ||\n      stat == Constants.Stats.SPD;\n  },\n  randomElement: (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)]\n  },\n  screenshotElement: async (element) => {\n    return await htmlToImage.toPng(element, { pixelRatio: 1.5 })\n  },\n  truncate10ths: (x) => {\n    return Math.floor(x * 10) / 10\n  },\n  collectById: (arr) => {\n    let byId = {}\n    for (let x of arr) {\n      byId[x.id] = x\n    }\n    return byId\n  },\n  truncate10000ths: (x) => {\n    return Math.floor(x * 10000) / 10000\n  },\n  precisionRound(number, precision = 5) {\n    let factor = Math.pow(10, precision);\n    return Math.round(number * factor) / factor;\n  },\n  flipMapping: (obj) => {\n    return Object.fromEntries(Object.entries(obj).map(a => a.reverse()))\n  },\n  clone: (obj) => {\n    return structuredClone(obj)\n  },\n  characterNameFilterOption: (input, option) => {\n    return (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\n  },\n  hasMainStat: (part) => {\n    return part == Constants.Parts.Body || part == Constants.Parts.Feet || part == Constants.Parts.LinkRope || part == Constants.Parts.PlanarSphere\n  },\n  generateCharacterOptions: () => {\n    let characterData = JSON.parse(JSON.stringify(DB.getMetadata().characters));\n\n    for (let value of Object.values(characterData)) {\n      value.value = value.id;\n      value.label = value.displayName;\n    }\n\n    return Object.values(characterData).sort((a, b) => a.label.localeCompare(b.label))\n  },\n}","import { RelicAugmenter } from \"./relicAugmenter\"\nimport { Constants } from \"./constants.ts\";\nimport { Utils } from \"./utils\";\nimport DB from \"./db\";\n\nlet statConversion\nlet partConversion\nlet gradeConversion\n\nexport const CharacterConverter = {\n  convert: (character) => {\n    console.log(character)\n    if (!statConversion) CharacterConverter.setConstantConversions()\n\n    let preRelics = character.relicList || []\n    let preLightCone = character.equipment\n    let characterEidolon = character.rank || 0\n    let id = '' + character.avatarId\n    let lightConeId = preLightCone ? '' + preLightCone.tid : undefined;\n    let lightConeLevel = preLightCone ? preLightCone.level : 0;\n    let lightConeSuperimposition = preLightCone ? preLightCone.rank : 0\n\n    let relics = preRelics.map(x => convertRelic(x)).filter(x => !!x)\n    let equipped = {}\n    for (let relic of relics) {\n      relic.verified = true\n      relic.equippedBy = id\n      equipped[relic.part] = relic\n    }\n    console.log(relics)\n\n    return {\n      id: id,\n      form: {\n        characterLevel: 80,\n        characterId: id,\n        characterEidolon: characterEidolon,\n        lightCone: lightConeId,\n        lightConeLevel: lightConeLevel,\n        lightConeSuperimposition: lightConeSuperimposition,\n      },\n      equipped: equipped\n    }\n  },\n\n  getConstantConversions: () => {\n    if (!statConversion) CharacterConverter.setConstantConversions()\n    return {\n      statConversion,\n      partConversion,\n      gradeConversion\n    }\n  },\n\n  setConstantConversions: () => {\n    statConversion = {\n      'HPAddedRatio': Constants.Stats.HP_P,\n      'AttackAddedRatio': Constants.Stats.ATK_P,\n      'DefenceAddedRatio': Constants.Stats.DEF_P,\n      'HPDelta': Constants.Stats.HP,\n      'AttackDelta': Constants.Stats.ATK,\n      'DefenceDelta': Constants.Stats.DEF,\n      'SpeedDelta': Constants.Stats.SPD,\n      'CriticalDamageBase': Constants.Stats.CD,\n      'CriticalChanceBase': Constants.Stats.CR,\n      'StatusProbabilityBase': Constants.Stats.EHR,\n      'StatusResistanceBase': Constants.Stats.RES,\n      'BreakDamageAddedRatioBase': Constants.Stats.BE,\n      'SPRatioBase': Constants.Stats.ERR,\n      'HealRatioBase': Constants.Stats.OHB,\n      'PhysicalAddedRatio': Constants.Stats.Physical_DMG,\n      'FireAddedRatio': Constants.Stats.Fire_DMG,\n      'IceAddedRatio': Constants.Stats.Ice_DMG,\n      'ThunderAddedRatio': Constants.Stats.Lightning_DMG,\n      'WindAddedRatio': Constants.Stats.Wind_DMG,\n      'QuantumAddedRatio': Constants.Stats.Quantum_DMG,\n      'ImaginaryAddedRatio': Constants.Stats.Imaginary_DMG,\n    }\n\n    partConversion = {\n      1: Constants.Parts.Head,\n      2: Constants.Parts.Hands,\n      3: Constants.Parts.Body,\n      4: Constants.Parts.Feet,\n      5: Constants.Parts.PlanarSphere,\n      6: Constants.Parts.LinkRope,\n    }\n\n    gradeConversion = {\n      6: 5,\n      5: 4,\n      4: 3,\n      3: 2\n    }\n  }\n}\n\nfunction convertRelic(preRelic) {\n  try {\n    let metadata = DB.getMetadata().relics\n    let tid = '' + preRelic.tid\n\n    let enhance = preRelic.level || 0\n\n    let setId = tid.substring(1, 4)\n    let setName = metadata.relicSets[setId].name\n\n    let partId = tid.substring(4, 5)\n    let partName = partConversion[partId]\n\n    let gradeId = tid.substring(0, 1)\n    let grade = gradeConversion[gradeId]\n\n    let mainId = preRelic.mainAffixId\n    let mainData = metadata.relicMainAffixes[`${grade}${partId}`].affixes[mainId]\n\n    let mainStat = statConversion[mainData.property]\n    let mainBase = mainData.base\n    let mainStep = mainData.step\n    let mainValue = mainBase + mainStep * enhance\n\n    let main = {\n      stat: mainStat,\n      value: Utils.precisionRound(mainValue * (Utils.isFlat(mainStat) ? 1 : 100), 5)\n    }\n\n    let substats = []\n    for (let sub of preRelic.subAffixList) {\n      let subId = sub.affixId\n      let count = sub.cnt\n      let step = sub.step || 0\n\n      let subData = metadata.relicSubAffixes[grade].affixes[subId]\n      let subStat = statConversion[subData.property]\n      let subBase = subData.base\n      let subStep = subData.step\n\n      let subValue = subBase * count + subStep * step\n\n      substats.push({\n        stat: subStat,\n        value: Utils.precisionRound(subValue * (Utils.isFlat(subStat) ? 1 : 100), 5)\n      })\n    }\n\n    let relic = {\n      part: partName,\n      set: setName,\n      enhance: enhance,\n      grade: grade,\n      main: main,\n      substats: substats\n    }\n\n    return RelicAugmenter.augment(relic)\n  } catch (e) {\n    console.error(e)\n    return null\n  }\n}\n","import DB from \"./db\";\nimport { Utils } from \"./utils\";\nimport { Constants } from \"./constants.ts\";\nimport { CharacterConverter } from \"./characterConverter\";\n\nlet optimizerStatToJsonSubStat\nlet optimizerStatToAffixStat\nlet optimizerPartToPartId\nlet initialized = false\n\nexport const RelicRollFixer = {\n  fixMainStatvalue: (relic) => {\n    if (!initialized) RelicRollFixer.initialize()\n\n    let enhance = relic.enhance\n    let stat = relic.main.stat\n    let partId = optimizerPartToPartId[relic.part]\n    let grade = relic.grade\n    let query = `${grade}${partId}`\n    let affixes = DB.getMetadata().relics.relicMainAffixes[query].affixes\n    let affix = Object.values(affixes).find(x => x.property == optimizerStatToAffixStat[stat])\n    if (!affix) return 0\n\n    let step = affix.step\n    let base = affix.base\n    let totalValue = base + step * enhance\n    let scaledValue = Utils.isFlat(stat) ? totalValue : totalValue * 100\n\n    return Utils.precisionRound(scaledValue, 5)\n  },\n\n  fixSubStatValue: (stat, value, grade) => {\n    if (!initialized) RelicRollFixer.initialize()\n\n    // Can't fix speed values\n    if (stat == Constants.Stats.SPD) return value\n\n    let statsByGrade = relicRollValues[grade]\n    if (!statsByGrade) return value\n\n    let convertedStatType = optimizerStatToJsonSubStat[stat]\n    if (!convertedStatType) return value\n    if (!statsByGrade[convertedStatType]) return value\n\n    let rollsMapping = statsByGrade[convertedStatType]\n    let rolls = rollsMapping[value]\n    if (!rolls) return value\n    // Duplicate entries are arrays when stats collide\n    if (rolls.length) rolls = rolls[0]\n\n    let affixes = DB.getMetadata().relics.relicSubAffixes[grade].affixes\n    let matched = Object.values(affixes).find(x => x.property == optimizerStatToAffixStat[stat])\n    if (!matched) return value\n\n    let base = matched.base\n    let step = matched.step\n\n    let oneRoll = base + step * 2\n    let totalValue = oneRoll * rolls\n    let scaledValue = Utils.isFlat(stat) ? totalValue : totalValue * 100\n\n    return Utils.precisionRound(scaledValue, 5)\n  },\n\n  initialize: () => {\n    initialized = true\n    let conversions = CharacterConverter.getConstantConversions()\n    optimizerStatToAffixStat = Utils.flipMapping(conversions.statConversion)\n    optimizerPartToPartId = Utils.flipMapping(conversions.partConversion)\n\n    optimizerStatToJsonSubStat = Utils.flipMapping({\n      'ATK': Constants.Stats.ATK,\n      'HP': Constants.Stats.HP,\n      'DEF': Constants.Stats.DEF,\n      'ATK_': Constants.Stats.ATK_P,\n      'HP_': Constants.Stats.HP_P,\n      'DEF_': Constants.Stats.DEF_P,\n      'SPD': Constants.Stats.SPD,\n      'CRIT Rate_': Constants.Stats.CR,\n      'CRIT DMG_': Constants.Stats.CD,\n      'Effect Hit Rate_': Constants.Stats.EHR,\n      'Effect RES_': Constants.Stats.RES,\n      'Break Effect_': Constants.Stats.BE,\n    })\n  }\n}\n\n// https://github.com/kel-z/HSR-Data/blob/main/output/relic_roll_vals.json\nlet relicRollValues = {\n  \"2\": {\n    \"HP\": {\n      \"13\": 0.8,\n      \"15\": 0.9,\n      \"16\": 1.0\n    },\n    \"ATK\": {\n      \"6\": 0.8,\n      \"7\": 0.9,\n      \"8\": 1.0\n    },\n    \"DEF\": {\n      \"6\": 0.8,\n      \"7\": 0.9,\n      \"8\": 1.0\n    },\n    \"HP_\": {\n      \"1.3\": 0.8,\n      \"1.5\": 0.9,\n      \"1.7\": 1.0\n    },\n    \"ATK_\": {\n      \"1.3\": 0.8,\n      \"1.5\": 0.9,\n      \"1.7\": 1.0\n    },\n    \"DEF_\": {\n      \"1.7\": 0.8,\n      \"1.9\": 0.9,\n      \"2.1\": 1.0\n    },\n    \"SPD\": {\n      \"1\": [\n        0.8,\n        0.9,\n        1.0\n      ]\n    },\n    \"CRIT Rate_\": {\n      \"1\": 0.8,\n      \"1.1\": 0.9,\n      \"1.2\": 1.0\n    },\n    \"CRIT DMG_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0\n    },\n    \"Effect Hit Rate_\": {\n      \"1.3\": 0.8,\n      \"1.5\": 0.9,\n      \"1.7\": 1.0\n    },\n    \"Effect RES_\": {\n      \"1.3\": 0.8,\n      \"1.5\": 0.9,\n      \"1.7\": 1.0\n    },\n    \"Break Effect_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0\n    }\n  },\n  \"3\": {\n    \"HP\": {\n      \"20\": 0.8,\n      \"22\": 0.9,\n      \"25\": 1.0,\n      \"40\": 1.6,\n      \"43\": 1.7,\n      \"45\": 1.8,\n      \"48\": 1.9,\n      \"50\": 2.0\n    },\n    \"ATK\": {\n      \"10\": 0.8,\n      \"11\": 0.9,\n      \"12\": 1.0,\n      \"20\": 1.6,\n      \"21\": 1.7,\n      \"22\": 1.8,\n      \"24\": 1.9,\n      \"25\": 2.0\n    },\n    \"DEF\": {\n      \"10\": 0.8,\n      \"11\": 0.9,\n      \"12\": 1.0,\n      \"20\": 1.6,\n      \"21\": 1.7,\n      \"22\": 1.8,\n      \"24\": 1.9,\n      \"25\": 2.0\n    },\n    \"HP_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0,\n      \"4.1\": 1.6,\n      \"4.4\": 1.7,\n      \"4.6\": 1.8,\n      \"4.9\": 1.9,\n      \"5.1\": 2.0\n    },\n    \"ATK_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0,\n      \"4.1\": 1.6,\n      \"4.4\": 1.7,\n      \"4.6\": 1.8,\n      \"4.9\": 1.9,\n      \"5.1\": 2.0\n    },\n    \"DEF_\": {\n      \"2.5\": 0.8,\n      \"2.9\": 0.9,\n      \"3.2\": 1.0,\n      \"5.1\": 1.6,\n      \"5.5\": 1.7,\n      \"5.8\": 1.8,\n      \"6.1\": 1.9,\n      \"6.4\": 2.0\n    },\n    \"SPD\": {\n      \"1\": [\n        0.8,\n        0.9,\n        1.0\n      ],\n      \"2\": [\n        1.6,\n        1.7,\n        1.8,\n        1.9,\n        2.0\n      ]\n    },\n    \"CRIT Rate_\": {\n      \"1.5\": 0.8,\n      \"1.7\": 0.9,\n      \"1.9\": 1.0,\n      \"3.1\": 1.6,\n      \"3.3\": 1.7,\n      \"3.4\": 1.8,\n      \"3.6\": 1.9,\n      \"3.8\": 2.0\n    },\n    \"CRIT DMG_\": {\n      \"3.1\": 0.8,\n      \"3.4\": 0.9,\n      \"3.8\": 1.0,\n      \"6.2\": 1.6,\n      \"6.6\": 1.7,\n      \"6.9\": 1.8,\n      \"7.3\": 1.9,\n      \"7.7\": 2.0\n    },\n    \"Effect Hit Rate_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0,\n      \"4.1\": 1.6,\n      \"4.4\": 1.7,\n      \"4.6\": 1.8,\n      \"4.9\": 1.9,\n      \"5.1\": 2.0\n    },\n    \"Effect RES_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0,\n      \"4.1\": 1.6,\n      \"4.4\": 1.7,\n      \"4.6\": 1.8,\n      \"4.9\": 1.9,\n      \"5.1\": 2.0\n    },\n    \"Break Effect_\": {\n      \"3.1\": 0.8,\n      \"3.4\": 0.9,\n      \"3.8\": 1.0,\n      \"6.2\": 1.6,\n      \"6.6\": 1.7,\n      \"6.9\": 1.8,\n      \"7.3\": 1.9,\n      \"7.7\": 2.0\n    }\n  },\n  \"4\": {\n    \"HP\": {\n      \"27\": 0.8,\n      \"30\": 0.9,\n      \"33\": 1.0,\n      \"54\": 1.6,\n      \"57\": 1.7,\n      \"60\": 1.8,\n      \"64\": 1.9,\n      \"67\": 2.0,\n      \"81\": 2.4,\n      \"84\": 2.5,\n      \"88\": 2.6,\n      \"91\": 2.7,\n      \"94\": 2.8,\n      \"98\": 2.9,\n      \"101\": 3.0,\n      \"108\": 3.2,\n      \"111\": 3.3,\n      \"115\": 3.4,\n      \"118\": 3.5,\n      \"121\": 3.6,\n      \"125\": 3.7,\n      \"128\": 3.8,\n      \"132\": 3.9,\n      \"135\": 4.0\n    },\n    \"ATK\": {\n      \"13\": 0.8,\n      \"15\": 0.9,\n      \"16\": 1.0,\n      \"27\": 1.6,\n      \"28\": 1.7,\n      \"30\": 1.8,\n      \"32\": 1.9,\n      \"33\": 2.0,\n      \"40\": 2.4,\n      \"42\": 2.5,\n      \"44\": 2.6,\n      \"45\": 2.7,\n      \"47\": 2.8,\n      \"49\": 2.9,\n      \"50\": 3.0,\n      \"54\": 3.2,\n      \"55\": 3.3,\n      \"57\": 3.4,\n      \"59\": 3.5,\n      \"60\": 3.6,\n      \"62\": 3.7,\n      \"64\": 3.8,\n      \"66\": 3.9,\n      \"67\": 4.0\n    },\n    \"DEF\": {\n      \"13\": 0.8,\n      \"15\": 0.9,\n      \"16\": 1.0,\n      \"27\": 1.6,\n      \"28\": 1.7,\n      \"30\": 1.8,\n      \"32\": 1.9,\n      \"33\": 2.0,\n      \"40\": 2.4,\n      \"42\": 2.5,\n      \"44\": 2.6,\n      \"45\": 2.7,\n      \"47\": 2.8,\n      \"49\": 2.9,\n      \"50\": 3.0,\n      \"54\": 3.2,\n      \"55\": 3.3,\n      \"57\": 3.4,\n      \"59\": 3.5,\n      \"60\": 3.6,\n      \"62\": 3.7,\n      \"64\": 3.8,\n      \"66\": 3.9,\n      \"67\": 4.0\n    },\n    \"HP_\": {\n      \"2.7\": 0.8,\n      \"3.1\": 0.9,\n      \"3.4\": 1.0,\n      \"5.5\": 1.6,\n      \"5.8\": 1.7,\n      \"6.2\": 1.8,\n      \"6.5\": 1.9,\n      \"6.9\": 2.0,\n      \"8.2\": 2.4,\n      \"8.6\": 2.5,\n      \"8.9\": 2.6,\n      \"9.3\": 2.7,\n      \"9.6\": 2.8,\n      \"10\": 2.9,\n      \"10.3\": 3.0,\n      \"11\": 3.2,\n      \"11.4\": 3.3,\n      \"11.7\": 3.4,\n      \"12\": 3.5,\n      \"12.4\": 3.6,\n      \"12.7\": 3.7,\n      \"13.1\": 3.8,\n      \"13.4\": 3.9,\n      \"13.8\": 4.0\n    },\n    \"ATK_\": {\n      \"2.7\": 0.8,\n      \"3.1\": 0.9,\n      \"3.4\": 1.0,\n      \"5.5\": 1.6,\n      \"5.8\": 1.7,\n      \"6.2\": 1.8,\n      \"6.5\": 1.9,\n      \"6.9\": 2.0,\n      \"8.2\": 2.4,\n      \"8.6\": 2.5,\n      \"8.9\": 2.6,\n      \"9.3\": 2.7,\n      \"9.6\": 2.8,\n      \"10\": 2.9,\n      \"10.3\": 3.0,\n      \"11\": 3.2,\n      \"11.4\": 3.3,\n      \"11.7\": 3.4,\n      \"12\": 3.5,\n      \"12.4\": 3.6,\n      \"12.7\": 3.7,\n      \"13.1\": 3.8,\n      \"13.4\": 3.9,\n      \"13.8\": 4.0\n    },\n    \"DEF_\": {\n      \"3.4\": 0.8,\n      \"3.8\": 0.9,\n      \"4.3\": 1.0,\n      \"6.9\": 1.6,\n      \"7.3\": 1.7,\n      \"7.7\": 1.8,\n      \"8.2\": 1.9,\n      \"8.6\": 2.0,\n      \"10.3\": 2.4,\n      \"10.8\": 2.5,\n      \"11.2\": 2.6,\n      \"11.6\": 2.7,\n      \"12\": 2.8,\n      \"12.5\": 2.9,\n      \"12.9\": 3.0,\n      \"13.8\": 3.2,\n      \"14.2\": 3.3,\n      \"14.6\": 3.4,\n      \"15.1\": 3.5,\n      \"15.5\": 3.6,\n      \"15.9\": 3.7,\n      \"16.4\": 3.8,\n      \"16.8\": 3.9,\n      \"17.2\": 4.0\n    },\n    \"SPD\": {\n      \"1\": [\n        0.8,\n        0.9\n      ],\n      \"2\": 1.0,\n      \"3\": [\n        1.6,\n        1.7,\n        1.8,\n        1.9\n      ],\n      \"4\": [\n        2.0,\n        2.4\n      ],\n      \"5\": [\n        2.5,\n        2.6,\n        2.7,\n        2.8,\n        2.9\n      ],\n      \"6\": [\n        3.0,\n        3.2,\n        3.3,\n        3.4\n      ],\n      \"7\": [\n        3.5,\n        3.6,\n        3.7,\n        3.8,\n        3.9\n      ],\n      \"8\": 4.0\n    },\n    \"CRIT Rate_\": {\n      \"2\": 0.8,\n      \"2.3\": 0.9,\n      \"2.5\": 1.0,\n      \"4.1\": 1.6,\n      \"4.4\": 1.7,\n      \"4.6\": 1.8,\n      \"4.9\": 1.9,\n      \"5.1\": 2.0,\n      \"6.2\": 2.4,\n      \"6.4\": 2.5,\n      \"6.7\": 2.6,\n      \"6.9\": 2.7,\n      \"7.2\": 2.8,\n      \"7.5\": 2.9,\n      \"7.7\": 3.0,\n      \"8.2\": 3.2,\n      \"8.5\": 3.3,\n      \"8.8\": 3.4,\n      \"9\": 3.5,\n      \"9.3\": 3.6,\n      \"9.5\": 3.7,\n      \"9.8\": 3.8,\n      \"10.1\": 3.9,\n      \"10.3\": 4.0\n    },\n    \"CRIT DMG_\": {\n      \"4.1\": 0.8,\n      \"4.6\": 0.9,\n      \"5.1\": 1.0,\n      \"8.2\": 1.6,\n      \"8.8\": 1.7,\n      \"9.3\": 1.8,\n      \"9.8\": 1.9,\n      \"10.3\": 2.0,\n      \"12.4\": 2.4,\n      \"12.9\": 2.5,\n      \"13.4\": 2.6,\n      \"13.9\": 2.7,\n      \"14.5\": 2.8,\n      \"15\": 2.9,\n      \"15.5\": 3.0,\n      \"16.5\": 3.2,\n      \"17.1\": 3.3,\n      \"17.6\": 3.4,\n      \"18.1\": 3.5,\n      \"18.6\": 3.6,\n      \"19.1\": 3.7,\n      \"19.6\": 3.8,\n      \"20.2\": 3.9,\n      \"20.7\": 4.0\n    },\n    \"Effect Hit Rate_\": {\n      \"2.7\": 0.8,\n      \"3.1\": 0.9,\n      \"3.4\": 1.0,\n      \"5.5\": 1.6,\n      \"5.8\": 1.7,\n      \"6.2\": 1.8,\n      \"6.5\": 1.9,\n      \"6.9\": 2.0,\n      \"8.2\": 2.4,\n      \"8.6\": 2.5,\n      \"8.9\": 2.6,\n      \"9.3\": 2.7,\n      \"9.6\": 2.8,\n      \"10\": 2.9,\n      \"10.3\": 3.0,\n      \"11\": 3.2,\n      \"11.4\": 3.3,\n      \"11.7\": 3.4,\n      \"12\": 3.5,\n      \"12.4\": 3.6,\n      \"12.7\": 3.7,\n      \"13.1\": 3.8,\n      \"13.4\": 3.9,\n      \"13.8\": 4.0\n    },\n    \"Effect RES_\": {\n      \"2.7\": 0.8,\n      \"3.1\": 0.9,\n      \"3.4\": 1.0,\n      \"5.5\": 1.6,\n      \"5.8\": 1.7,\n      \"6.2\": 1.8,\n      \"6.5\": 1.9,\n      \"6.9\": 2.0,\n      \"8.2\": 2.4,\n      \"8.6\": 2.5,\n      \"8.9\": 2.6,\n      \"9.3\": 2.7,\n      \"9.6\": 2.8,\n      \"10\": 2.9,\n      \"10.3\": 3.0,\n      \"11\": 3.2,\n      \"11.4\": 3.3,\n      \"11.7\": 3.4,\n      \"12\": 3.5,\n      \"12.4\": 3.6,\n      \"12.7\": 3.7,\n      \"13.1\": 3.8,\n      \"13.4\": 3.9,\n      \"13.8\": 4.0\n    },\n    \"Break Effect_\": {\n      \"4.1\": 0.8,\n      \"4.6\": 0.9,\n      \"5.1\": 1.0,\n      \"8.2\": 1.6,\n      \"8.8\": 1.7,\n      \"9.3\": 1.8,\n      \"9.8\": 1.9,\n      \"10.3\": 2.0,\n      \"12.4\": 2.4,\n      \"12.9\": 2.5,\n      \"13.4\": 2.6,\n      \"13.9\": 2.7,\n      \"14.5\": 2.8,\n      \"15\": 2.9,\n      \"15.5\": 3.0,\n      \"16.5\": 3.2,\n      \"17.1\": 3.3,\n      \"17.6\": 3.4,\n      \"18.1\": 3.5,\n      \"18.6\": 3.6,\n      \"19.1\": 3.7,\n      \"19.6\": 3.8,\n      \"20.2\": 3.9,\n      \"20.7\": 4.0\n    }\n  },\n  \"5\": {\n    \"HP\": {\n      \"33\": 0.8,\n      \"38\": 0.9,\n      \"42\": 1.0,\n      \"67\": 1.6,\n      \"71\": 1.7,\n      \"76\": 1.8,\n      \"80\": 1.9,\n      \"84\": 2.0,\n      \"101\": 2.4,\n      \"105\": 2.5,\n      \"110\": 2.6,\n      \"114\": 2.7,\n      \"118\": 2.8,\n      \"122\": 2.9,\n      \"127\": 3.0,\n      \"135\": 3.2,\n      \"139\": 3.3,\n      \"143\": 3.4,\n      \"148\": 3.5,\n      \"152\": 3.6,\n      \"156\": 3.7,\n      \"160\": 3.8,\n      \"165\": 3.9,\n      \"169\": 4.0,\n      \"173\": 4.1,\n      \"177\": 4.2,\n      \"182\": 4.3,\n      \"186\": 4.4,\n      \"190\": 4.5,\n      \"194\": 4.6,\n      \"198\": 4.7,\n      \"203\": 4.8,\n      \"207\": 4.9,\n      \"211\": 5.0,\n      \"215\": 5.1,\n      \"220\": 5.2,\n      \"224\": 5.3,\n      \"228\": 5.4,\n      \"232\": 5.5,\n      \"237\": 5.6,\n      \"241\": 5.7,\n      \"245\": 5.8,\n      \"249\": 5.9,\n      \"254\": 6.0\n    },\n    \"ATK\": {\n      \"16\": 0.8,\n      \"19\": 0.9,\n      \"21\": 1.0,\n      \"33\": 1.6,\n      \"35\": 1.7,\n      \"38\": 1.8,\n      \"40\": 1.9,\n      \"42\": 2.0,\n      \"50\": 2.4,\n      \"52\": 2.5,\n      \"55\": 2.6,\n      \"57\": 2.7,\n      \"59\": 2.8,\n      \"61\": 2.9,\n      \"63\": 3.0,\n      \"67\": 3.2,\n      \"69\": 3.3,\n      \"71\": 3.4,\n      \"74\": 3.5,\n      \"76\": 3.6,\n      \"78\": 3.7,\n      \"80\": 3.8,\n      \"82\": 3.9,\n      \"84\": 4.0,\n      \"86\": 4.1,\n      \"88\": 4.2,\n      \"91\": 4.3,\n      \"93\": 4.4,\n      \"95\": 4.5,\n      \"97\": 4.6,\n      \"99\": 4.7,\n      \"101\": 4.8,\n      \"103\": 4.9,\n      \"105\": 5.0,\n      \"107\": 5.1,\n      \"110\": 5.2,\n      \"112\": 5.3,\n      \"114\": 5.4,\n      \"116\": 5.5,\n      \"118\": 5.6,\n      \"120\": 5.7,\n      \"122\": 5.8,\n      \"124\": 5.9,\n      \"127\": 6.0\n    },\n    \"DEF\": {\n      \"16\": 0.8,\n      \"19\": 0.9,\n      \"21\": 1.0,\n      \"33\": 1.6,\n      \"35\": 1.7,\n      \"38\": 1.8,\n      \"40\": 1.9,\n      \"42\": 2.0,\n      \"50\": 2.4,\n      \"52\": 2.5,\n      \"55\": 2.6,\n      \"57\": 2.7,\n      \"59\": 2.8,\n      \"61\": 2.9,\n      \"63\": 3.0,\n      \"67\": 3.2,\n      \"69\": 3.3,\n      \"71\": 3.4,\n      \"74\": 3.5,\n      \"76\": 3.6,\n      \"78\": 3.7,\n      \"80\": 3.8,\n      \"82\": 3.9,\n      \"84\": 4.0,\n      \"86\": 4.1,\n      \"88\": 4.2,\n      \"91\": 4.3,\n      \"93\": 4.4,\n      \"95\": 4.5,\n      \"97\": 4.6,\n      \"99\": 4.7,\n      \"101\": 4.8,\n      \"103\": 4.9,\n      \"105\": 5.0,\n      \"107\": 5.1,\n      \"110\": 5.2,\n      \"112\": 5.3,\n      \"114\": 5.4,\n      \"116\": 5.5,\n      \"118\": 5.6,\n      \"120\": 5.7,\n      \"122\": 5.8,\n      \"124\": 5.9,\n      \"127\": 6.0\n    },\n    \"HP_\": {\n      \"3.4\": 0.8,\n      \"3.8\": 0.9,\n      \"4.3\": 1.0,\n      \"6.9\": 1.6,\n      \"7.3\": 1.7,\n      \"7.7\": 1.8,\n      \"8.2\": 1.9,\n      \"8.6\": 2.0,\n      \"10.3\": 2.4,\n      \"10.8\": 2.5,\n      \"11.2\": 2.6,\n      \"11.6\": 2.7,\n      \"12\": 2.8,\n      \"12.5\": 2.9,\n      \"12.9\": 3.0,\n      \"13.8\": 3.2,\n      \"14.2\": 3.3,\n      \"14.6\": 3.4,\n      \"15.1\": 3.5,\n      \"15.5\": 3.6,\n      \"15.9\": 3.7,\n      \"16.4\": 3.8,\n      \"16.8\": 3.9,\n      \"17.2\": 4.0,\n      \"17.7\": 4.1,\n      \"18.1\": 4.2,\n      \"18.5\": 4.3,\n      \"19\": 4.4,\n      \"19.4\": 4.5,\n      \"19.8\": 4.6,\n      \"20.3\": 4.7,\n      \"20.7\": 4.8,\n      \"21.1\": 4.9,\n      \"21.6\": 5.0,\n      \"22\": 5.1,\n      \"22.4\": 5.2,\n      \"22.8\": 5.3,\n      \"23.3\": 5.4,\n      \"23.7\": 5.5,\n      \"24.1\": 5.6,\n      \"24.6\": 5.7,\n      \"25\": 5.8,\n      \"25.4\": 5.9,\n      \"25.9\": 6.0\n    },\n    \"ATK_\": {\n      \"3.4\": 0.8,\n      \"3.8\": 0.9,\n      \"4.3\": 1.0,\n      \"6.9\": 1.6,\n      \"7.3\": 1.7,\n      \"7.7\": 1.8,\n      \"8.2\": 1.9,\n      \"8.6\": 2.0,\n      \"10.3\": 2.4,\n      \"10.8\": 2.5,\n      \"11.2\": 2.6,\n      \"11.6\": 2.7,\n      \"12\": 2.8,\n      \"12.5\": 2.9,\n      \"12.9\": 3.0,\n      \"13.8\": 3.2,\n      \"14.2\": 3.3,\n      \"14.6\": 3.4,\n      \"15.1\": 3.5,\n      \"15.5\": 3.6,\n      \"15.9\": 3.7,\n      \"16.4\": 3.8,\n      \"16.8\": 3.9,\n      \"17.2\": 4.0,\n      \"17.7\": 4.1,\n      \"18.1\": 4.2,\n      \"18.5\": 4.3,\n      \"19\": 4.4,\n      \"19.4\": 4.5,\n      \"19.8\": 4.6,\n      \"20.3\": 4.7,\n      \"20.7\": 4.8,\n      \"21.1\": 4.9,\n      \"21.6\": 5.0,\n      \"22\": 5.1,\n      \"22.4\": 5.2,\n      \"22.8\": 5.3,\n      \"23.3\": 5.4,\n      \"23.7\": 5.5,\n      \"24.1\": 5.6,\n      \"24.6\": 5.7,\n      \"25\": 5.8,\n      \"25.4\": 5.9,\n      \"25.9\": 6.0\n    },\n    \"DEF_\": {\n      \"4.3\": 0.8,\n      \"4.8\": 0.9,\n      \"5.4\": 1.0,\n      \"8.6\": 1.6,\n      \"9.1\": 1.7,\n      \"9.7\": 1.8,\n      \"10.2\": 1.9,\n      \"10.8\": 2.0,\n      \"12.9\": 2.4,\n      \"13.5\": 2.5,\n      \"14\": 2.6,\n      \"14.5\": 2.7,\n      \"15.1\": 2.8,\n      \"15.6\": 2.9,\n      \"16.2\": 3.0,\n      \"17.2\": 3.2,\n      \"17.8\": 3.3,\n      \"18.3\": 3.4,\n      \"18.9\": 3.5,\n      \"19.4\": 3.6,\n      \"19.9\": 3.7,\n      \"20.5\": 3.8,\n      \"21\": 3.9,\n      \"21.6\": 4.0,\n      \"22.1\": 4.1,\n      \"22.6\": 4.2,\n      \"23.2\": 4.3,\n      \"23.7\": 4.4,\n      \"24.3\": 4.5,\n      \"24.8\": 4.6,\n      \"25.3\": 4.7,\n      \"25.9\": 4.8,\n      \"26.4\": 4.9,\n      \"27\": 5.0,\n      \"27.5\": 5.1,\n      \"28\": 5.2,\n      \"28.6\": 5.3,\n      \"29.1\": 5.4,\n      \"29.7\": 5.5,\n      \"30.2\": 5.6,\n      \"30.7\": 5.7,\n      \"31.3\": 5.8,\n      \"31.8\": 5.9,\n      \"32.4\": 6.0\n    },\n    \"SPD\": {\n      \"2\": [\n        0.8,\n        0.9,\n        1.0\n      ],\n      \"4\": [\n        1.6,\n        1.7,\n        1.8,\n        1.9\n      ],\n      \"5\": 2.0,\n      \"6\": [\n        2.4,\n        2.5,\n        2.6\n      ],\n      \"7\": [\n        2.7,\n        2.8,\n        2.9,\n        3.0\n      ],\n      \"8\": [\n        3.2,\n        3.3,\n        3.4\n      ],\n      \"9\": [\n        3.5,\n        3.6,\n        3.7,\n        3.8\n      ],\n      \"10\": [\n        3.9,\n        4.0,\n        4.1,\n        4.2\n      ],\n      \"11\": [\n        4.3,\n        4.4,\n        4.5,\n        4.6\n      ],\n      \"12\": [\n        4.7,\n        4.8,\n        4.9\n      ],\n      \"13\": [\n        5.0,\n        5.1,\n        5.2,\n        5.3\n      ],\n      \"14\": [\n        5.4,\n        5.5,\n        5.6,\n        5.7\n      ],\n      \"15\": [\n        5.8,\n        5.9,\n        6.0\n      ]\n    },\n    \"CRIT Rate_\": {\n      \"2.5\": 0.8,\n      \"2.9\": 0.9,\n      \"3.2\": 1.0,\n      \"5.1\": 1.6,\n      \"5.5\": 1.7,\n      \"5.8\": 1.8,\n      \"6.1\": 1.9,\n      \"6.4\": 2.0,\n      \"7.7\": 2.4,\n      \"8.1\": 2.5,\n      \"8.4\": 2.6,\n      \"8.7\": 2.7,\n      \"9\": 2.8,\n      \"9.3\": 2.9,\n      \"9.7\": 3.0,\n      \"10.3\": 3.2,\n      \"10.6\": 3.3,\n      \"11\": 3.4,\n      \"11.3\": 3.5,\n      \"11.6\": 3.6,\n      \"11.9\": 3.7,\n      \"12.3\": 3.8,\n      \"12.6\": 3.9,\n      \"12.9\": 4.0,\n      \"13.2\": 4.1,\n      \"13.6\": 4.2,\n      \"13.9\": 4.3,\n      \"14.2\": 4.4,\n      \"14.5\": 4.5,\n      \"14.9\": 4.6,\n      \"15.2\": 4.7,\n      \"15.5\": 4.8,\n      \"15.8\": 4.9,\n      \"16.2\": 5.0,\n      \"16.5\": 5.1,\n      \"16.8\": 5.2,\n      \"17.1\": 5.3,\n      \"17.4\": 5.4,\n      \"17.8\": 5.5,\n      \"18.1\": 5.6,\n      \"18.4\": 5.7,\n      \"18.7\": 5.8,\n      \"19.1\": 5.9,\n      \"19.4\": 6.0\n    },\n    \"CRIT DMG_\": {\n      \"5.1\": 0.8,\n      \"5.8\": 0.9,\n      \"6.4\": 1.0,\n      \"10.3\": 1.6,\n      \"11\": 1.7,\n      \"11.6\": 1.8,\n      \"12.3\": 1.9,\n      \"12.9\": 2.0,\n      \"15.5\": 2.4,\n      \"16.2\": 2.5,\n      \"16.8\": 2.6,\n      \"17.4\": 2.7,\n      \"18.1\": 2.8,\n      \"18.7\": 2.9,\n      \"19.4\": 3.0,\n      \"20.7\": 3.2,\n      \"21.3\": 3.3,\n      \"22\": 3.4,\n      \"22.6\": 3.5,\n      \"23.3\": 3.6,\n      \"23.9\": 3.7,\n      \"24.6\": 3.8,\n      \"25.2\": 3.9,\n      \"25.9\": 4.0,\n      \"26.5\": 4.1,\n      \"27.2\": 4.2,\n      \"27.8\": 4.3,\n      \"28.5\": 4.4,\n      \"29.1\": 4.5,\n      \"29.8\": 4.6,\n      \"30.4\": 4.7,\n      \"31.1\": 4.8,\n      \"31.7\": 4.9,\n      \"32.4\": 5.0,\n      \"33\": 5.1,\n      \"33.6\": 5.2,\n      \"34.3\": 5.3,\n      \"34.9\": 5.4,\n      \"35.6\": 5.5,\n      \"36.2\": 5.6,\n      \"36.9\": 5.7,\n      \"37.5\": 5.8,\n      \"38.2\": 5.9,\n      \"38.8\": 6.0\n    },\n    \"Effect Hit Rate_\": {\n      \"3.4\": 0.8,\n      \"3.8\": 0.9,\n      \"4.3\": 1.0,\n      \"6.9\": 1.6,\n      \"7.3\": 1.7,\n      \"7.7\": 1.8,\n      \"8.2\": 1.9,\n      \"8.6\": 2.0,\n      \"10.3\": 2.4,\n      \"10.8\": 2.5,\n      \"11.2\": 2.6,\n      \"11.6\": 2.7,\n      \"12\": 2.8,\n      \"12.5\": 2.9,\n      \"12.9\": 3.0,\n      \"13.8\": 3.2,\n      \"14.2\": 3.3,\n      \"14.6\": 3.4,\n      \"15.1\": 3.5,\n      \"15.5\": 3.6,\n      \"15.9\": 3.7,\n      \"16.4\": 3.8,\n      \"16.8\": 3.9,\n      \"17.2\": 4.0,\n      \"17.7\": 4.1,\n      \"18.1\": 4.2,\n      \"18.5\": 4.3,\n      \"19\": 4.4,\n      \"19.4\": 4.5,\n      \"19.8\": 4.6,\n      \"20.3\": 4.7,\n      \"20.7\": 4.8,\n      \"21.1\": 4.9,\n      \"21.6\": 5.0,\n      \"22\": 5.1,\n      \"22.4\": 5.2,\n      \"22.8\": 5.3,\n      \"23.3\": 5.4,\n      \"23.7\": 5.5,\n      \"24.1\": 5.6,\n      \"24.6\": 5.7,\n      \"25\": 5.8,\n      \"25.4\": 5.9,\n      \"25.9\": 6.0\n    },\n    \"Effect RES_\": {\n      \"3.4\": 0.8,\n      \"3.8\": 0.9,\n      \"4.3\": 1.0,\n      \"6.9\": 1.6,\n      \"7.3\": 1.7,\n      \"7.7\": 1.8,\n      \"8.2\": 1.9,\n      \"8.6\": 2.0,\n      \"10.3\": 2.4,\n      \"10.8\": 2.5,\n      \"11.2\": 2.6,\n      \"11.6\": 2.7,\n      \"12\": 2.8,\n      \"12.5\": 2.9,\n      \"12.9\": 3.0,\n      \"13.8\": 3.2,\n      \"14.2\": 3.3,\n      \"14.6\": 3.4,\n      \"15.1\": 3.5,\n      \"15.5\": 3.6,\n      \"15.9\": 3.7,\n      \"16.4\": 3.8,\n      \"16.8\": 3.9,\n      \"17.2\": 4.0,\n      \"17.7\": 4.1,\n      \"18.1\": 4.2,\n      \"18.5\": 4.3,\n      \"19\": 4.4,\n      \"19.4\": 4.5,\n      \"19.8\": 4.6,\n      \"20.3\": 4.7,\n      \"20.7\": 4.8,\n      \"21.1\": 4.9,\n      \"21.6\": 5.0,\n      \"22\": 5.1,\n      \"22.4\": 5.2,\n      \"22.8\": 5.3,\n      \"23.3\": 5.4,\n      \"23.7\": 5.5,\n      \"24.1\": 5.6,\n      \"24.6\": 5.7,\n      \"25\": 5.8,\n      \"25.4\": 5.9,\n      \"25.9\": 6.0\n    },\n    \"Break Effect_\": {\n      \"5.1\": 0.8,\n      \"5.8\": 0.9,\n      \"6.4\": 1.0,\n      \"10.3\": 1.6,\n      \"11\": 1.7,\n      \"11.6\": 1.8,\n      \"12.3\": 1.9,\n      \"12.9\": 2.0,\n      \"15.5\": 2.4,\n      \"16.2\": 2.5,\n      \"16.8\": 2.6,\n      \"17.4\": 2.7,\n      \"18.1\": 2.8,\n      \"18.7\": 2.9,\n      \"19.4\": 3.0,\n      \"20.7\": 3.2,\n      \"21.3\": 3.3,\n      \"22\": 3.4,\n      \"22.6\": 3.5,\n      \"23.3\": 3.6,\n      \"23.9\": 3.7,\n      \"24.6\": 3.8,\n      \"25.2\": 3.9,\n      \"25.9\": 4.0,\n      \"26.5\": 4.1,\n      \"27.2\": 4.2,\n      \"27.8\": 4.3,\n      \"28.5\": 4.4,\n      \"29.1\": 4.5,\n      \"29.8\": 4.6,\n      \"30.4\": 4.7,\n      \"31.1\": 4.8,\n      \"31.7\": 4.9,\n      \"32.4\": 5.0,\n      \"33\": 5.1,\n      \"33.6\": 5.2,\n      \"34.3\": 5.3,\n      \"34.9\": 5.4,\n      \"35.6\": 5.5,\n      \"36.2\": 5.6,\n      \"36.9\": 5.7,\n      \"37.5\": 5.8,\n      \"38.2\": 5.9,\n      \"38.8\": 6.0\n    }\n  }\n}","import { Constants } from \"./constants.ts\";\n\n// This is a leftover relic of the gpu experiment, all that's left is this which creates a request object to send to\n// the worker threads\nexport const GPUOptimizer = {\n  createConstants: function (\n    HEIGHT,\n    WIDTH,\n    request,\n    relics,\n    character,\n    relicSetAllowList,\n    relicSetSolutions,\n    ornamentSetSolutions,\n    elementalMultipliers) {\n    let cIndex = 0;\n    let consts = {\n      'HP_P': cIndex++, // 0\n      'ATK_P': cIndex++,\n      'DEF_P': cIndex++,\n      'SPD_P': cIndex++,\n      'HP': cIndex++,\n      'ATK': cIndex++,\n      'DEF': cIndex++,\n      'SPD': cIndex++,\n      'CD': cIndex++,\n      'CR': cIndex++,\n      'EHR': cIndex++,\n      'RES': cIndex++,\n      'BE': cIndex++,\n      'ERR': cIndex++,\n      'OHB': cIndex++,\n      'Physical_DMG': cIndex++,\n      'Fire_DMG': cIndex++,\n      'Ice_DMG': cIndex++,\n      'Lightning_DMG': cIndex++,\n      'Wind_DMG': cIndex++,\n      'Quantum_DMG': cIndex++,\n      'Imaginary_DMG': cIndex++, // 21\n      'part': cIndex++, // 21\n      'set': cIndex++, // 21\n      'maxHp': request.maxHp,\n      'minHp': request.minHp,\n      'maxAtk': request.maxAtk,\n      'minAtk': request.minAtk,\n      'maxDef': request.maxDef,\n      'minDef': request.minDef,\n      'maxCr': request.maxCr,\n      'minCr': request.minCr,\n      'maxCd': request.maxCd,\n      'minCd': request.minCd,\n      'maxSpd': request.maxSpd,\n      'minSpd': request.minSpd,\n      'maxEhr': request.maxEhr,\n      'minEhr': request.minEhr,\n      'maxRes': request.maxRes,\n      'minRes': request.minRes,\n      'maxBe': request.maxBe,\n      'minBe': request.minBe,\n      'maxCv': request.maxCv,\n      'minCv': request.minCv,\n      'maxDmg': request.maxDmg,\n      'minDmg': request.minDmg,\n      'maxMcd': request.maxMcd,\n      'minMcd': request.minMcd,\n      'minEhp': request.minEhp,\n      'maxEhp': request.maxEhp,\n      'buffAtk': request.buffAtk,\n      'buffAtkP': request.buffAtkP,\n      'buffCr': request.buffCr,\n      'buffCd': request.buffCd,\n      'relicsHead': relics.Head,\n      'relicsHands': relics.Hands,\n      'relicsBody': relics.Body,\n      'relicsFeet': relics.Feet,\n      'relicsPlanarSphere': relics.PlanarSphere,\n      'relicsLinkRope': relics.LinkRope,\n      'hSize': relics.Head.length,\n      'gSize': relics.Hands.length,\n      'bSize': relics.Body.length,\n      'fSize': relics.Feet.length,\n      'pSize': relics.PlanarSphere.length,\n      'lSize': relics.LinkRope.length,\n      'charBase': character.base,\n      'charTrace': character.traces,\n      'charLc': character.lightCone,\n      'relicSetCount': Object.values(Constants.SetsRelics).length,\n      'ornamentSetCount': Object.values(Constants.SetsOrnaments).length,\n      'relicSetSolutions': relicSetSolutions,\n      'ornamentSetSolutions': ornamentSetSolutions,\n      'elementalMultipliers': elementalMultipliers,\n      'HEIGHT': HEIGHT,\n      'WIDTH': WIDTH\n    }\n\n    console.log('GPU Constants', consts);\n    return consts;\n  },\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport { Constants } from \"./constants.ts\";\nimport { RelicRollFixer } from \"./relicRollFixer\";\nimport { Utils } from \"./utils\";\n\nexport const RelicAugmenter = {\n  augment: function (relic) {\n    // console.log('Augmenting relic', relic)\n    let augmentedStats = {}\n\n    // Temporarily skip broken imports\n    if (relic.grade && !relic.main) {\n      return null\n    }\n\n    relic.relicsTabWeight = 0\n    relic.bestCaseWeight = 0\n    relic.averageCaseWeight = 0\n\n    let mainStat = relic.main.stat\n    relic.main.value = RelicRollFixer.fixMainStatvalue(relic)\n    let mainMaxValue = relic.main.value\n\n    augmentedStats.mainStat = mainStat\n    augmentedStats.mainValue = mainMaxValue\n\n    for (let substat of relic.substats) {\n      let stat = substat.stat\n      substat.value = Utils.precisionRound(substat.value)\n      substat.value = RelicRollFixer.fixSubStatValue(stat, substat.value, relic.grade)\n      augmentedStats[stat] = substat.value\n    }\n\n    if (relic.enhance > 12 && relic.grade != 5) {\n      relic.grade = 5\n    }\n\n    if (!relic.id) {\n      relic.id = uuidv4()\n    }\n    relic.augmentedStats = augmentedStats\n    fixAugmentedStats([relic])\n    calculateRelicRatings(relic)\n    return relic\n  }\n}\n\n// Very meh rating, revisit at some point\nfunction calculateRelicRatings(relic) {\n  let cs = relic.augmentedStats[Constants.Stats.ATK_P] * 100 * 1.5 +\n    relic.augmentedStats[Constants.Stats.CD] * 100 +\n    relic.augmentedStats[Constants.Stats.CR] * 100 * 2 +\n    relic.augmentedStats[Constants.Stats.SPD] * 2.6\n\n  let ss = relic.augmentedStats[Constants.Stats.DEF_P] * 100 * 1.2 +\n    relic.augmentedStats[Constants.Stats.HP_P] * 100 * 1.5 +\n    relic.augmentedStats[Constants.Stats.RES] * 100 * 1.5 +\n    relic.augmentedStats[Constants.Stats.SPD] * 2.6\n\n  let ds = relic.augmentedStats[Constants.Stats.ATK_P] * 100 * 1.5 +\n    relic.augmentedStats[Constants.Stats.EHR] * 100 * 1.5 +\n    relic.augmentedStats[Constants.Stats.BE] * 100 +\n    relic.augmentedStats[Constants.Stats.SPD] * 2.6\n\n  relic.cs = cs\n  relic.ss = ss\n  relic.ds = ds\n}\n\nfunction fixAugmentedStats(relics) {\n  return relics.map(x => {\n    for (let stat of Object.values(Constants.Stats)) {\n      x.augmentedStats[stat] = x.augmentedStats[stat] || 0\n      if (!Utils.isFlat(stat)) {\n        if (x.augmentedStats.mainStat == stat) {\n          x.augmentedStats.mainValue = x.augmentedStats.mainValue / 100\n        }\n        x.augmentedStats[stat] = x.augmentedStats[stat] / 100\n      }\n    }\n    return x\n  })\n}\n","import { Constants } from \"./constants.ts\";\n\nexport function getDefaultForm(initialCharacter) {\n  return {\n    \"characterId\": initialCharacter?.id,\n    \"mainBody\": [\n    ],\n    \"mainFeet\": [\n    ],\n    \"mainPlanarSphere\": [\n    ],\n    \"mainLinkRope\": [\n    ],\n    \"relicSets\": [\n    ],\n    \"ornamentSets\": [\n    ],\n    \"characterLevel\": 80,\n    \"characterEidolon\": 0,\n    \"lightConeLevel\": 80,\n    \"lightConeSuperimposition\": 1,\n    \"predictMaxedMainStat\": true,\n    \"rankFilter\": true,\n    \"keepCurrentRelics\": false,\n    \"enhance\": 9,\n    \"grade\": 5,\n    \"enemyLevel\": 95,\n    \"enemyCount\": 1,\n    \"enemyResistance\": 0.2,\n    \"enemyHpPercent\": 1.0,\n    \"mainHead\": [],\n    \"mainHands\": [],\n    \"statDisplay\": 'base',\n    \"weights\": {\n      [Constants.Stats.HP_P]: 1,\n      [Constants.Stats.ATK_P]: 1,\n      [Constants.Stats.DEF_P]: 1,\n      [Constants.Stats.SPD_P]: 1,\n      [Constants.Stats.HP]: 1,\n      [Constants.Stats.ATK]: 1,\n      [Constants.Stats.DEF]: 1,\n      [Constants.Stats.SPD]: 1,\n      [Constants.Stats.CD]: 1,\n      [Constants.Stats.CR]: 1,\n      [Constants.Stats.EHR]: 1,\n      [Constants.Stats.RES]: 1,\n      [Constants.Stats.BE]: 1,\n      topPercent: 100\n    },\n    setConditionals: {\n      [Constants.Sets.PasserbyOfWanderingCloud]: [undefined, true],\n      [Constants.Sets.MusketeerOfWildWheat]: [undefined, true],\n      [Constants.Sets.KnightOfPurityPalace]: [undefined, true],\n      [Constants.Sets.HunterOfGlacialForest]: [undefined, true],\n      [Constants.Sets.ChampionOfStreetwiseBoxing]: [undefined, 5],\n      [Constants.Sets.GuardOfWutheringSnow]: [undefined, true],\n      [Constants.Sets.FiresmithOfLavaForging]: [undefined, true],\n      [Constants.Sets.GeniusOfBrilliantStars]: [undefined, true],\n      [Constants.Sets.BandOfSizzlingThunder]: [undefined, true],\n      [Constants.Sets.EagleOfTwilightLine]: [undefined, true],\n      [Constants.Sets.ThiefOfShootingMeteor]: [undefined, true],\n      [Constants.Sets.WastelanderOfBanditryDesert]: [undefined, 0],\n      [Constants.Sets.LongevousDisciple]: [undefined, 2],\n      [Constants.Sets.MessengerTraversingHackerspace]: [undefined, false],\n      [Constants.Sets.TheAshblazingGrandDuke]: [undefined, 0],\n      [Constants.Sets.PrisonerInDeepConfinement]: [undefined, 0],\n      [Constants.Sets.SpaceSealingStation]: [undefined, true],\n      [Constants.Sets.FleetOfTheAgeless]: [undefined, true],\n      [Constants.Sets.PanCosmicCommercialEnterprise]: [undefined, true],\n      [Constants.Sets.BelobogOfTheArchitects]: [undefined, true],\n      [Constants.Sets.CelestialDifferentiator]: [undefined, false],\n      [Constants.Sets.InertSalsotto]: [undefined, true],\n      [Constants.Sets.TaliaKingdomOfBanditry]: [undefined, true],\n      [Constants.Sets.SprightlyVonwacq]: [undefined, true],\n      [Constants.Sets.RutilantArena]: [undefined, true],\n      [Constants.Sets.BrokenKeel]: [undefined, true],\n      [Constants.Sets.FirmamentFrontlineGlamoth]: [undefined, true],\n      [Constants.Sets.PenaconyLandOfTheDreams]: [undefined, true],\n    }\n  }\n}","import DB from \"./db\";\n\nexport const SaveState = {\n  save: () => {\n    let state = {\n      relics: DB.getRelics(),\n      characters: DB.getCharacters(),\n      scorerId: window.store.getState().scorerId,\n      scoringMetadataOverrides: window.store.getState().scoringMetadataOverrides,\n    }\n\n    console.log('Saved state', state)\n    let stateString = JSON.stringify(state)\n    localStorage.state = stateString\n    return stateString\n  },\n\n  load: () => {\n    try {\n      let state = localStorage.state\n      if (state) {\n        let parsed = JSON.parse(state)\n        console.log('Loaded SaveState', parsed)\n  \n        DB.setStore(parsed)\n        return true\n      }\n  \n      console.log('No SaveState found')\n      return false\n    } catch (e) {\n      console.error('Error loading state', e)\n      // localStorage.clear()\n      return false\n    }\n  }\n}","export const Message = {\n  success: (content, duration) => {\n    console.log('Success message:', content)\n    window.messageApi.open({\n      type: 'success',\n      content: content || '',\n      duration: duration || 3,\n    });\n  },\n\n  error: (content, duration) => {\n    console.warn('Error message:', content)\n    window.messageApi.open({\n      type: 'error',\n      content: content || '',\n      duration: duration || 3,\n    });\n  },\n  \n  warning: (content, duration) => {\n    console.warn('Warning message:', content)\n    window.messageApi.open({\n      type: 'warning',\n      content: content || '',\n      duration: duration || 3,\n    });\n  },\n}","import { OptimizerTabController } from \"./optimizerTabController\"\nimport { RelicAugmenter } from \"./relicAugmenter\"\nimport * as objectHash from 'object-hash'\nimport { create } from 'zustand'\nimport { Constants } from './constants.ts';\nimport { getDefaultForm } from './defaultForm';\nimport { Utils } from \"./utils\";\nimport { SaveState } from \"./saveState\";\nimport { Message } from \"./message\";\n\nlet state = {\n  relics: [],\n  characters: [],\n  metadata: {},\n  relicsById: {},\n  scorerId: undefined,\n  selectedOptimizerCharacter: undefined\n}\n\n// TODO clean up\nlet hashes = [\n  '#scorer',\n  '#getting-started',\n  '#beta'\n]\n\n// React usage\n// let characterTabBlur = store(s => s.characterTabBlur);\n// let setCharacterTabBlur = store(s => s.setCharacterTabBlur);\n\n// Nonreactive usage\n// store.getState().setRelicsById(relicsById)\n\nwindow.store = create((set) => ({\n  relicsById: {},\n  setRelicsById: (x) => set(() => ({ relicsById: x })),\n\n  characters: [],\n  charactersById: {},\n  setCharactersById: (x) => set(() => ({ charactersById: x })),\n  setCharacters: (x) => set(() => ({ characters: x })),\n\n  characterTabSelectedId: undefined,\n  setCharacterTabSelectedId: (x) => set(() => ({ characterTabSelectedId: x })),\n\n  characterTabBlur: false,\n  setCharacterTabBlur: (x) => set(() => ({ characterTabBlur: x })),\n\n  permutationDetails: {\n    Head: 0,\n    Hands: 0,\n    Body: 0,\n    Feet: 0,\n    PlanarSphere: 0,\n    LinkRope: 0,\n    HeadTotal: 0,\n    HandsTotal: 0,\n    BodyTotal: 0,\n    FeetTotal: 0,\n    PlanarSphereTotal: 0,\n    LinkRopeTotal: 0,\n  },\n  setPermutationDetails: (x) => set(() => ({ permutationDetails: x })),\n\n  permutations: 0,\n  setPermutations: (x) => set(() => ({ permutations: x })),\n\n  permutationsSearched: 0,\n  setPermutationsSearched: (x) => set(() => ({ permutationsSearched: x })),\n\n  permutationsResults: 0,\n  setPermutationsResults: (x) => set(() => ({ permutationsResults: x })),\n\n  statDisplay: 'base',\n  setStatDisplay: (x) => set(() => ({ statDisplay: x })),\n\n  activeKey: hashes.includes(window.location.hash) ? window.location.hash : 'optimizer',\n  setActiveKey: (x) => set(() => ({ activeKey: x })),\n\n  scorerId: undefined,\n  setScorerId: (x) => set(() => ({ scorerId: x })),\n\n  scoringMetadataOverrides: {},\n  setScoringMetadataOverrides: (x) => set(() => ({ scoringMetadataOverrides: x })),\n\n  conditionalSetEffectsDrawerOpen: false,\n  setConditionalSetEffectsDrawerOpen: (x) => set(() => ({ conditionalSetEffectsDrawerOpen: x })),\n\n  selectedScoringCharacter: undefined,\n  setSelectedScoringCharacter: (x) => set(() => ({ selectedScoringCharacter: x })),\n\n  selectedOptimizerCharacter: undefined,\n  setSelectedOptimizerCharacter: char => set(() => ({ selectedOptimizerCharacter: char })),\n\n  relicTabFilters: {\n    set: [],\n    part: [],\n    enhance: [],\n    mainStats: [],\n    subStats: [],\n  },\n  setRelicTabFilters: (x) => set(() => ({ relicTabFilters: x })),\n  setFilteredRelics: (relics) => set(() => ({ filteredRelics: relics })),\n}))\n\nexport const DB = {\n  getMetadata: () => state.metadata,\n  setMetadata: (x) => state.metadata = x,\n\n  getCharacters: () => window.store.getState().characters,\n  getCharacterById: (id) => window.store.getState().charactersById[id],\n\n  setCharacters: (x) => {\n    let charactersById = {}\n    for (let character of x) {\n      charactersById[character.id] = character\n    }\n\n    assignRanks(x)\n    window.store.getState().setCharacters(x)\n    window.store.getState().setCharactersById(charactersById)\n  },\n  setCharacter: (x) => {\n    let charactersById = window.store.getState().charactersById\n    charactersById[x.id] = x\n\n    window.store.getState().setCharactersById(charactersById)\n  },\n  addCharacter: (x) => {\n    let characters = DB.getCharacters()\n    characters.push(x);\n    DB.setCharacters(characters);\n  },\n  insertCharacter: (id, index) => {\n    console.log('insert', id, index)\n    let characters = DB.getCharacters()\n    if (index < 0) {\n      index = characters.length\n    }\n    let matchingCharacter = DB.getCharacterById(id)\n    if (!matchingCharacter) return console.warn('No matching character to insert', id, index)\n    let removed = characters.splice(matchingCharacter.rank, 1)\n    characters.splice(index, 0, removed[0])\n    DB.setCharacters(characters)\n  },\n  refreshCharacters: () => {\n    if (window.setCharacterRows) {\n      window.setCharacterRows(DB.getCharacters())\n    }\n  },\n\n  getRelics: () => Object.values(window.store.getState().relicsById),\n  getRelicsById: () => window.store.getState().relicsById,\n  setRelics: (x) => {\n    let relicsById = {}\n    for (let relic of x) {\n      relicsById[relic.id] = relic\n    }\n    window.store.getState().setRelicsById(relicsById)\n  },\n  getRelicById: (id) => window.store.getState().relicsById[id],\n  setRelic: (relic) => {\n    if (!relic.id) return console.warn('No matching relic', relic)\n    let relicsById = window.store.getState().relicsById\n    relicsById[relic.id] = relic\n    window.store.getState().setRelicsById(relicsById)\n  },\n\n  refreshRelics: () => {\n    if (window.setRelicRows) window.setRelicRows(DB.getRelics())\n  },\n\n  // Mostly for debugging\n  getState: () => window.store.getState(),\n\n  getScoringMetadata: (id) => {\n    let defaultScoringMetadata = DB.getMetadata().characters[id].scoringMetadata\n    let scoringMetadataOverrides = window.store.getState().scoringMetadataOverrides[id]\n\n    return scoringMetadataOverrides || defaultScoringMetadata\n  },\n  updateCharacterScoreOverrides: (id, updated) => {\n    let overrides = window.store.getState().scoringMetadataOverrides\n    overrides[id] = updated\n    window.store.getState().setScoringMetadataOverrides(overrides)\n\n    SaveState.save()\n  },\n\n  setStore: (x) => {\n    console.log('Set state', x)\n    let charactersById = {}\n    for (let character of x.characters) {\n      character.equipped = {}\n      charactersById[character.id] = character\n    }\n\n    for (let relic of x.relics) {\n      RelicAugmenter.augment(relic)\n      let char = charactersById[relic.equippedBy]\n      if (char && !char.equipped[relic.part]) {\n        char.equipped[relic.part] = relic.id\n      } else {\n        relic.equippedBy = undefined\n      }\n    }\n\n    window.store.getState().setScorerId(x.scorerId)\n    window.store.getState().setScoringMetadataOverrides(x.scoringMetadataOverrides || {})\n\n    assignRanks(x.characters)\n    DB.setRelics(x.relics)\n    DB.setCharacters(x.characters)\n\n    DB.refreshCharacters()\n    DB.refreshRelics()\n    SaveState.save()\n  },\n  resetStore: () => {\n    DB.setStore({\n      relics: [],\n      characters: []\n    })\n  },\n\n  addFromForm: (form) => {\n    let characters = DB.getCharacters();\n    let found = DB.getCharacterById(form.characterId)\n    if (found) {\n      found.form = {\n        ...found.form,\n        ...form\n      }\n      DB.setCharacters(characters)\n    } else {\n      const defaultForm = getDefaultForm({ id: form.characterId })\n\n      DB.addCharacter({\n        id: form.characterId,\n        form: { ...defaultForm, ...form },\n        equipped: {}\n      })\n    }\n\n    console.log('Updated db characters', characters)\n    window.characterGrid.current.api.updateGridOptions({ rowData: characters })\n  },\n\n  unequipCharacter: (id) => {\n    let character = DB.getCharacterById(id)\n    if (!character) return console.warn('No character to unequip')\n\n    console.log('Unequipping character', id, character)\n\n    for (let part of Object.values(Constants.Parts)) {\n      let equippedId = character.equipped[part]\n      if (!equippedId) continue\n\n      let relicMatch = DB.getRelicById(equippedId)\n\n      character.equipped[part] = undefined\n\n      if (relicMatch) {\n        relicMatch.equippedBy = undefined\n        DB.setRelic(relicMatch)\n      }\n    }\n    DB.setCharacter(character)\n  },\n\n  removeCharacter: (characterId) => {\n    DB.unequipCharacter(characterId)\n    let characters = DB.getCharacters()\n    characters = characters.filter(x => x.id != characterId)\n    DB.setCharacters(characters)\n  },\n\n  unequipRelicById: (id) => {\n    if (!id) return console.warn('No relic')\n    let relic = DB.getRelicById(id)\n\n    console.log('UNEQUIP RELIC')\n\n    let characters = DB.getCharacters()\n    for (let character of characters) {\n      if (character.equipped && character.equipped[relic.part] && character.equipped[relic.part] == relic.id) {\n        character.equipped[relic.part] = undefined\n      }\n    }\n    DB.setCharacters(characters)\n\n    relic.equippedBy = undefined\n    DB.setRelic(relic)\n  },\n\n  equipRelic: (relic, characterId) => {\n    if (!relic || !relic.id) return console.warn('No relic')\n    if (!characterId) return console.warn('No character')\n    relic = DB.getRelicById(relic.id)\n\n    let prevOwnerId = relic.equippedBy;\n    let character = DB.getCharacters().find(x => x.id == characterId)\n    let prevCharacter = DB.getCharacters().find(x => x.id == prevOwnerId)\n    let prevRelic = DB.getRelicById(character.equipped[relic.part])\n\n    if (prevRelic) {\n      DB.unequipRelicById(prevRelic.id)\n    }\n\n    if (prevRelic && prevCharacter) {\n      prevCharacter.equipped[relic.part] = prevRelic.id\n      prevRelic.equippedBy = prevCharacter.id\n      DB.setCharacter(prevCharacter)\n      DB.setRelic(prevRelic)\n    }\n    else if (prevCharacter) {\n      prevCharacter.equipped[relic.part] = undefined\n      DB.setCharacter(prevCharacter)\n    }\n\n    character.equipped[relic.part] = relic.id\n    relic.equippedBy = character.id\n    DB.setCharacter(character)\n    DB.setRelic(relic)\n  },\n\n  equipRelicIdsToCharacter: (relicIds, characterId) => {\n    if (!characterId) return console.warn('No characterId to equip to')\n    console.log('Equipping relics to character', relicIds, characterId)\n\n    for (let relicId of relicIds) {\n      DB.equipRelic({ id: relicId }, characterId)\n    }\n  },\n\n  deleteRelic: (id) => {\n    if (!id) return Message.error('Unable to delete relic')\n    DB.unequipRelicById(id)\n    let relicsById = window.store.getState().relicsById\n    delete relicsById[id]\n    window.store.getState().setRelicsById(relicsById)\n\n    // This refreshes the grid for the character equipped relics color coding\n    if (window.characterGrid?.current?.api) {\n      window.characterGrid.current.api.redrawRows()\n    }\n  },\n\n  // These relics are missing speed decimals from OCR importer\n  // We overwrite any existing relics with imported ones\n  mergeRelicsWithState: (newRelics, newCharacters) => {\n    let oldRelics = DB.getRelics()\n    newRelics = Utils.clone(newRelics)\n    newCharacters = Utils.clone(newCharacters)\n\n    console.log('Merging relics', newRelics, newCharacters)\n\n    // Add new characters\n    if (newCharacters) {\n      for (const character of newCharacters) {\n        DB.addFromForm(character)\n      }\n    }\n\n    let characters = DB.getCharacters()\n\n    // Generate a hash of existing relics for easy lookup\n    let oldRelicHashes = {}\n    for (let oldRelic of oldRelics) {\n      let hash = hashRelic(oldRelic)\n      oldRelicHashes[hash] = oldRelic;\n    }\n\n    let replacementRelics = []\n    for (let newRelic of newRelics) {\n      let hash = hashRelic(newRelic)\n\n      // Compare new relic hashes to old relic hashes\n      let found = oldRelicHashes[hash]\n      let stableRelicId\n      if (found) {\n        if (newRelic.equippedBy && newCharacters) {\n          // Update the owner of the existing relic with the newly imported owner\n          found.equippedBy = newRelic.equippedBy\n          newRelic = found\n        }\n\n        // Save the old relic because it may have edited speed values, delete the hash to prevent duplicates\n        replacementRelics.push(found)\n        stableRelicId = found.id\n        delete oldRelicHashes[hash]\n      } else {\n        // No match found - save the new relic\n        stableRelicId = newRelic.id\n        replacementRelics.push(newRelic)\n      }\n\n      // Update the character's equipped inventory\n      if (newRelic.equippedBy && newCharacters) {\n        let character = characters.find(x => x.id == newRelic.equippedBy)\n        if (character) {\n          character.equipped[newRelic.part] = stableRelicId\n        } else {\n          console.error('No character to equip relic to', newRelic)\n        }\n      }\n    }\n\n    console.log('Replacement relics', replacementRelics)\n\n    DB.setRelics(replacementRelics);\n\n    // Clean up any deleted relic ids that are still equipped\n    for (let character of characters) {\n      for (let part of Object.values(Constants.Parts)) {\n        if (character.equipped && character.equipped[part] && !DB.getRelicById(character.equipped[part])) {\n          character.equipped[part] = undefined\n        }\n      }\n    }\n\n    // Clean up relics that are double equipped\n    for (let relic of DB.getRelics()) {\n      if (!relic.equippedBy) continue\n\n      let character = DB.getCharacterById(relic.equippedBy)\n      if (!character || character.equipped[relic.part] != relic.id) {\n        relic.equippedBy = undefined\n      }\n    }\n\n    DB.setRelics(replacementRelics)\n    DB.setCharacters(characters)\n\n    window.relicsGrid.current.api.updateGridOptions({ rowData: replacementRelics })\n\n    window.characterGrid.current.api.redrawRows()\n\n    // TODO this probably shouldn't be in this file\n    let fieldValues = OptimizerTabController.getForm()\n    window.onOptimizerFormValuesChange({}, fieldValues);\n  },\n\n  // These relics have accurate speed values from relic scorer import\n  // We keep the existing set of relics and only overwrite ones that match the ones that match an imported one\n  mergeVerifiedRelicsWithState: (newRelics) => {\n    let oldRelics = Utils.clone(DB.getRelics())\n    newRelics = Utils.clone(newRelics)\n\n    // part set grade mainstat substatStats\n    let oldRelicPartialHashes = {}\n    for (let oldRelic of oldRelics) {\n      let hash = partialHashRelic(oldRelic)\n      if (!oldRelicPartialHashes[hash]) oldRelicPartialHashes[hash] = []\n      oldRelicPartialHashes[hash].push(oldRelic);\n    }\n\n    // Tracking these for debug / logging\n    let updatedOldRelics = []\n    let addedNewRelics = []\n\n    for (let newRelic of newRelics) {\n      newRelic.equippedBy = undefined\n      let partialHash = partialHashRelic(newRelic)\n      let partialMatches = oldRelicPartialHashes[partialHash] || []\n\n      let match\n      for (let partialMatch of partialMatches) {\n        if (newRelic.enhance < partialMatch.enhance) continue\n        if (newRelic.substats.length < partialMatch.substats.length) continue\n\n        let exit = false\n        let upgrades = 0\n        for (let i = 0; i < partialMatch.substats.length; i++) {\n          let matchSubstat = partialMatch.substats[i]\n          let newSubstat = newRelic.substats[i]\n\n          // Different substats mean different relics - break\n          if (matchSubstat.stat != newSubstat.stat) { exit = true; break }\n          if (compareSameTypeSubstat(matchSubstat, newSubstat) == -1) { exit = true; break }\n\n          // Track if the number of stat increases make sense\n          if (compareSameTypeSubstat(matchSubstat, newSubstat) == 1) {\n            upgrades++\n          }\n        }\n\n        if (exit) continue\n\n        let possibleUpgrades = Math.round((Math.floor(newRelic.enhance / 3) * 3 - Math.floor(partialMatch.enhance / 3) * 3) / 3) // + (newRelic.substats.length > partialMatch.substats.length ? 1 : 0)\n        if (upgrades > possibleUpgrades) continue\n\n        // If it passes all the tests, keep it\n        match = partialMatch\n        break\n      }\n\n      if (match) {\n        match.substats = newRelic.substats\n        match.main = newRelic.main\n        match.enhance = newRelic.enhance\n\n        match.verified = true\n        updatedOldRelics.push(match)\n      } else {\n        oldRelics.push(newRelic)\n\n        newRelic.verified = true\n        addedNewRelics.push(newRelic)\n      }\n    }\n\n    console.warn('addedNewRelics', addedNewRelics)\n    console.warn('updatedOldRelics', updatedOldRelics)\n\n    oldRelics.map(x => RelicAugmenter.augment(x))\n    DB.setRelics(oldRelics)\n    DB.refreshRelics()\n    window.characterGrid.current.api.redrawRows()\n\n    if (updatedOldRelics.length) Message.success(`Updated stats for ${updatedOldRelics.length} existing relics`, 8)\n    if (addedNewRelics.length) Message.success(`Added ${addedNewRelics.length} new relics`, 8)\n\n    // TODO this probably shouldn't be in this file\n    let fieldValues = OptimizerTabController.getForm()\n    window.onOptimizerFormValuesChange({}, fieldValues);\n  },\n}\n\nexport default DB;\n\nfunction assignRanks(characters) {\n  for (let i = 0; i < characters.length; i++) {\n    characters[i].rank = i\n  }\n\n  return characters;\n}\n\nfunction hashRelic(relic) {\n  let substatValues = []\n  let substatStats = []\n\n  for (let substat of relic.substats) {\n    if (Utils.isFlat(substat.stat)) {\n      // Flat atk/def/hp/spd values we floor to an int\n      substatValues.push(Math.floor(substat.value))\n    } else {\n      // Other values we match to 1 decimal point due to OCR\n      substatValues.push(Utils.precisionRound(Utils.truncate10ths(substat.value)))\n    }\n    substatStats.push(substat.stat)\n  }\n  let hashObject = {\n    part: relic.part,\n    set: relic.set,\n    grade: relic.grade,\n    enhance: relic.enhance,\n    mainstat: relic.main.stat,\n    mainvalue: Math.floor(relic.main.value),\n    substatValues: substatValues, // Match to 1 decimal point\n    substatStats: substatStats,\n  }\n  return objectHash(hashObject)\n}\n\n// -1: old > new, 0: old == new, 1, new > old\nfunction compareSameTypeSubstat(oldSubstat, newSubstat) {\n  let oldValue\n  let newValue\n  if (Utils.isFlat(oldSubstat.stat)) {\n    // Flat atk/def/hp/spd values we floor to an int\n    oldValue = Math.floor(oldSubstat.value)\n    newValue = Math.floor(newSubstat.value)\n  } else {\n    // Other values we match to 1 decimal point due to OCR\n    oldValue = Utils.precisionRound(Utils.truncate10ths(oldSubstat.value))\n    newValue = Utils.precisionRound(Utils.truncate10ths(newSubstat.value))\n  }\n\n  if (oldValue == newValue) return 0\n  if (oldValue < newValue) return 1\n  return -1\n}\n\nfunction partialHashRelic(relic) {\n  let baseSubstatCount = relic.grade == 5 ? 3 : 2\n\n  let hashObject = {\n    part: relic.part,\n    set: relic.set,\n    grade: relic.grade,\n    mainstat: relic.main.stat,\n    substatStats: relic.substats.slice(0, baseSubstatCount).map(x => x.stat)\n  }\n\n  return objectHash(hashObject)\n}","import { Typography, } from 'antd';\nimport styled from 'styled-components';\n\nconst { Text } = Typography;\n\nexport const HeaderText = styled(Text)`\n  text-decoration: underline;\n  text-decoration-color: #6d97ffb3;\n  text-underline-offset: 2px\n`","import { Flex, Form, InputNumber, Slider, Switch, Typography } from \"antd\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nlet justify = 'flex-start'\nlet align = 'center'\nlet inputWidth = 75\nlet numberWidth = 65\nlet sliderWidth = 145\n\nconst Text = styled(Typography)`\n  white-space: pre-line;\n`\nfunction precisionRound(number, precision = 8) {\n  let factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nexport function FormSwitch(props) {\n  return (\n    <Flex justify={justify} align={align}>\n      <div style={{minWidth: inputWidth, display: 'block'}}>\n        <Form.Item name={[conditionalType(props), props.name]} valuePropName='checked'>\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            disabled={props.disabled}\n            defaultChecked={!props.disabled}\n          />\n        </Form.Item>\n      </div>\n      <Text>{props.text}</Text>\n    </Flex>\n  )\n}\nFormSwitch.propTypes = {\n  disabled: PropTypes.bool,\n  text: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport function FormSlider(props) {\n  const [inputValue, setInputValue] = useState(1);\n  const onChange = (newValue) => {\n    setInputValue(newValue);\n  };\n\n  let multiplier = (props.percent ? 100 : 1)\n  let step = props.percent ? 0.01 : 1\n  let symbol = props.percent ? '%' : ''\n\n  return (\n    <Flex vertical gap={5} style={{marginBottom: 0}}>\n      <Flex justify={justify} align={align}>\n        <div style={{minWidth: inputWidth, display: 'block'}}>\n          <Form.Item name={[conditionalType(props), props.name]}>\n            <InputNumber\n              min={props.min}\n              max={props.max}\n              controls={false}\n              size='small'\n              style={{\n                width: numberWidth,\n              }}\n              parser={(value) => value == null || value == '' ? 0 : precisionRound(value / multiplier) }\n              formatter={(value) => `${precisionRound(value * multiplier)}`}\n              addonAfter={symbol}\n              onChange={onChange}\n              disabled={props.disabled}\n            />\n          </Form.Item>\n        </div>\n        <Text>{props.text}</Text>\n      </Flex>\n      <Flex align='center' justify='flex-start' gap={10} style={{height: 14}}>\n        <Form.Item name={[conditionalType(props), props.name]}>\n          <Slider\n            min={props.min}\n            max={props.max}\n            step={step}\n            value={typeof inputValue === 'number' ? inputValue : 0}\n            style={{\n              minWidth: sliderWidth,\n              marginTop: 0,\n              marginBottom: 0,\n              marginLeft: 1\n            }}\n            tooltip={{\n              formatter: (value) => `${precisionRound(value * multiplier)}${symbol}`\n            }}\n            onChange={onChange}\n            disabled={props.disabled}\n          />\n        </Form.Item>\n        <Text style={{minWidth: 20, marginBottom: 2, textAlign: 'center'}}>{`${precisionRound(props.max * multiplier)}${symbol}`}</Text>\n      </Flex>\n    </Flex>\n  )\n}\nFormSlider.propTypes = {\n  disabled: PropTypes.bool,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  text: PropTypes.string,\n  name: PropTypes.string,\n  percent: PropTypes.bool,\n}\n\n\nfunction conditionalType(props) {\n  if (props.lc) {\n    return 'lightConeConditionals'\n  }\n  return 'characterConditionals'\n}","import { Constants } from \"./constants.ts\";\n\n// let baseUrl = process.env.PUBLIC_URL // Local testing;\nlet baseUrl = 'https://d28ecrnsw8u0fj.cloudfront.net';\n\nlet pathFromClassMapping\nlet iconFromStatMapping\nexport const Assets = {\n  getStatIcon: (stat, percented) => {\n    if (!iconFromStatMapping) {\n      iconFromStatMapping = {\n        [Constants.Stats.HP]: 'IconMaxHP.png',\n        [Constants.Stats.ATK]: 'IconAttack.png',\n        [Constants.Stats.DEF]: 'IconDefence.png',\n        [Constants.Stats.HP_P]: 'IconMaxHP.png',\n        [Constants.Stats.ATK_P]: 'IconAttack.png',\n        [Constants.Stats.DEF_P]: 'IconDefence.png',\n        [Constants.Stats.SPD]: 'IconSpeed.png',\n        [Constants.Stats.SPD_P]: 'IconSpeed.png',\n        [Constants.Stats.CR]: 'IconCriticalChance.png',\n        [Constants.Stats.CD]: 'IconCriticalDamage.png',\n        [Constants.Stats.EHR]: 'IconStatusProbability.png',\n        [Constants.Stats.RES]: 'IconStatusResistance.png',\n        [Constants.Stats.BE]: 'IconBreakUp.png',\n        [Constants.Stats.ERR]: 'IconEnergyRecovery.png',\n        [Constants.Stats.OHB]: 'IconHealRatio.png',\n        [Constants.Stats.Physical_DMG]: 'IconPhysicalAddedRatio.png',\n        [Constants.Stats.Fire_DMG]: 'IconFireAddedRatio.png',\n        [Constants.Stats.Ice_DMG]: 'IconIceAddedRatio.png',\n        [Constants.Stats.Lightning_DMG]: 'IconThunderAddedRatio.png',\n        [Constants.Stats.Wind_DMG]: 'IconWindAddedRatio.png',\n        [Constants.Stats.Quantum_DMG]: 'IconQuantumAddedRatio.png',\n        [Constants.Stats.Imaginary_DMG]: 'IconImaginaryAddedRatio.png',\n      }\n    }\n    if (stat == 'CV') return baseUrl + `/assets/misc/cv.png`\n    if (stat == Constants.Stats.HP_P && percented) return baseUrl + `/assets/misc/IconMaxHPPercent.png`\n    if (stat == Constants.Stats.ATK_P && percented) return baseUrl + `/assets/misc/IconAttackPercent.png`\n    if (stat == Constants.Stats.DEF_P && percented) return baseUrl + `/assets/misc/IconDefencePercent.png`\n    if (!stat || !iconFromStatMapping[stat]) return ''\n\n    return baseUrl + `/assets/icon/property/` + iconFromStatMapping[stat]\n  },\n  getSampleSave: () => {\n    return baseUrl + `/sample-save.json`\n  },\n  getCharacterPortrait: (characterId) => {\n    if (!characterId) return ''\n    return baseUrl + `/assets/image/character_portrait_resized/resized${characterId}.png`\n  },\n  getCharacterPortraitById: (id) => {\n    if (!id) {\n      console.warn('No id found')\n      return ''\n    }\n\n    return baseUrl + `/assets/image/character_portrait_resized/resized${id}.png`\n  },\n  getCharacterAvatarById: (id) => {\n    if (!id) return ''\n\n    return baseUrl + `/assets/icon/avatar/${id}.png`\n  },\n  getCharacterIconById: (id) => {\n    if (!id) return ''\n\n    return baseUrl + `/assets/icon/character/${id}.png`\n  },\n\n  getCharacterPreview: (character) => {\n    if (!character) return ''\n    return baseUrl + `/assets/${character.preview}`\n  },\n  getCharacterPreviewById: (id) => {\n    if (!id) return ''\n    return baseUrl + `/assets/image/character_preview/${id}.png`\n  },\n\n  getLightConePortrait: (lightCone) => {\n    if (!lightCone) return ''\n    return baseUrl + `/assets/image/light_cone_portrait/${lightCone.id}.png`\n  },\n  getPath: (path) => {\n    if (!path) return ''\n    return baseUrl + `/assets/icon/path/${path}.png`\n  },\n  getPathFromClass: (c) => {\n    if (!pathFromClassMapping) {\n      pathFromClassMapping = {\n        'Warrior': 'Destruction',\n        'Warlock': 'Nihility',\n        'Knight': 'Preservation',\n        'Priest': 'Abundance',\n        'Rogue': 'Hunt',\n        'Shaman': 'Harmony',\n        'Mage': 'Erudition',\n      }\n    }\n    if (!c || !pathFromClassMapping[c]) return ''\n    return baseUrl + `/assets/icon/path/${pathFromClassMapping[c]}.png`\n  },\n\n  getElement: (element) => {\n    if (!element) return ''\n    if (element == 'Thunder') element = 'Lightning'\n    return baseUrl + `/assets/icon/element/${element}.png`\n  },\n  getBlank: () => {\n    return baseUrl + '/assets/misc/blank.png'\n  },\n  getQuestion: () => {\n    return baseUrl + '/assets/misc/tooltip.png'\n  },\n  getLogo: () => {\n    return baseUrl + '/assets/misc/logo.png'\n  },\n  getDiscord: () => {\n    return baseUrl + '/assets/misc/badgediscord.png'\n  },\n  getStar: () => {\n    return baseUrl + '/assets/icon/deco/StarBig.png'\n  },\n  getGuideImage: (name) => {\n    return baseUrl + '/assets/guide/' + name + '.png'\n  },\n  getInventory: () => {\n    return baseUrl + '/assets/icon/sign/ShopMaterialsIcon.png'\n  },\n  getStarBw: () => {\n    return baseUrl + '/assets/icon/sign/QuestMainIcon.png'\n  },\n  getMisc: (filename) => {\n    return baseUrl + '/assets/misc/' + filename\n  },\n\n  getPart: (part) => {\n    let mapping = {\n      [Constants.Parts.Head]: 'head',\n      [Constants.Parts.Hands]: 'hands',\n      [Constants.Parts.Body]: 'body',\n      [Constants.Parts.Feet]: 'feet',\n      [Constants.Parts.PlanarSphere]: 'planarSphere',\n      [Constants.Parts.LinkRope]: 'linkRope',\n    }\n\n    return baseUrl + `/assets/misc/${mapping[part]}.png`\n  },\n\n  getSetImage: (set, part) => {\n    if (!part) {\n      part = 'base'\n    }\n    const setToId = {\n      [Constants.Sets.PasserbyOfWanderingCloud]: '101',\n      [Constants.Sets.MusketeerOfWildWheat]: '102',\n      [Constants.Sets.KnightOfPurityPalace]: '103',\n      [Constants.Sets.HunterOfGlacialForest]: '104',\n      [Constants.Sets.ChampionOfStreetwiseBoxing]: '105',\n      [Constants.Sets.GuardOfWutheringSnow]: '106',\n      [Constants.Sets.FiresmithOfLavaForging]: '107',\n      [Constants.Sets.GeniusOfBrilliantStars]: '108',\n      [Constants.Sets.BandOfSizzlingThunder]: '109',\n      [Constants.Sets.EagleOfTwilightLine]: '110',\n      [Constants.Sets.ThiefOfShootingMeteor]: '111',\n      [Constants.Sets.WastelanderOfBanditryDesert]: '112',\n      [Constants.Sets.LongevousDisciple]: '113',\n      [Constants.Sets.MessengerTraversingHackerspace]: '114',\n      [Constants.Sets.TheAshblazingGrandDuke]: '115',\n      [Constants.Sets.PrisonerInDeepConfinement]: '116',\n\n      [Constants.Sets.SpaceSealingStation]: '301',\n      [Constants.Sets.FleetOfTheAgeless]: '302',\n      [Constants.Sets.PanCosmicCommercialEnterprise]: '303',\n      [Constants.Sets.BelobogOfTheArchitects]: '304',\n      [Constants.Sets.CelestialDifferentiator]: '305',\n      [Constants.Sets.InertSalsotto]: '306',\n      [Constants.Sets.TaliaKingdomOfBanditry]: '307',\n      [Constants.Sets.SprightlyVonwacq]: '308',\n      [Constants.Sets.RutilantArena]: '309',\n      [Constants.Sets.BrokenKeel]: '310',\n      [Constants.Sets.FirmamentFrontlineGlamoth]: '311',\n      [Constants.Sets.PenaconyLandOfTheDreams]: '312',\n    }\n\n    const partToId = {\n      base: '',\n      [Constants.Parts.Head]: '_0',\n      [Constants.Parts.Hands]: '_1',\n      [Constants.Parts.Body]: '_2',\n      [Constants.Parts.Feet]: '_3',\n      [Constants.Parts.PlanarSphere]: '_0',\n      [Constants.Parts.LinkRope]: '_1',\n    }\n    return baseUrl + `/assets/icon/relic/${setToId[set]}${partToId[part]}.png`;\n  }\n}","import React from \"react\";\nimport { Popover } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { Assets } from \"../lib/assets\";\n\nexport const TooltipImage = (props) => (\n  <Popover\n    content={props.type.content}\n    title={props.type.title}\n    overlayStyle={{\n      width: 500\n    }}\n  >\n    <img src={Assets.getQuestion()} style={{width: 16, opacity: 0.6}}/>\n  </Popover>\n)\nTooltipImage.propTypes = {\n  type: PropTypes.object,\n}\n","import React from \"react\";\nimport { Flex } from \"antd\"\n\nexport const Hint = {\n  ratingFilters: () => {\n    return {\n      title: 'Rating filters',\n      content: (\n        <Flex vertical gap={10}>\n          <p>CV - Crit Value, measuring the value of crit stats on the build. Calculated using CD + CR * 2</p>\n          <p>Weight - Sum of substat weights of all 6 relics, from the Substat weight filter</p>\n          <p>Ehp - Effective HP, measuring how tanky a max level character is. Calculated using HP & DEF & damage reduction passives</p>\n          <p>Basic / Skill / Ult / Fua (Follow-up attack) / Dot (Damage over time) - Skill damage calculations, based on the environmental factors in character passives / light cone passives / enemy options.</p>\n        </Flex>\n      )\n    }\n  },\n\n  combatBuffs: () => {\n    return {\n      title: 'Combat buffs',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Additional team buffs to apply to the calculations. Note that buffs from character / light cone self-buffs and passives and traces are already included in calculations.</p>\n        </Flex>\n      )\n    }\n  },\n\n  statFilters: () => {\n    return {\n      title: 'Stat filters',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Min / Max filters for character stats, inclusive. The optimizer will only show results within these ranges </p>\n          <p>Stat abbreviations are ATK / HP / DEF / SPD / Crit Rate / Crit Damage / Effect Hit Rate / Effect RES / Break Effect</p>\n          <p>NOTE: Ingame speed decimals are truncated so you may see speed values ingame higher than shown here. This is because the OCR importer can't detect the hidden decimals.</p>\n        </Flex>\n      )\n    }\n  },\n\n  mainStats: () => {\n    return {\n      title: 'Main stats',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Select main stats to use for optimization search. Multiple values can be selected for more options</p>\n        </Flex>\n      )\n    }\n  },\n\n  sets: () => {\n    return {\n      title: 'Sets',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Select the relic and ornament sets to filter results by. Multiple sets can be selected for more options</p>\n\n          <p>Set effects will be accounted for in calculations, use the Conditional set effects menu to customize which effects are active.</p>\n        </Flex>\n      )\n    }\n  },\n\n  character: () => {\n    return {\n      title: 'Character',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Select the character and level / eidolon</p>\n          <p>Levels will affect base stats used in the calculation. Eidolon effects are applied under the Character passives panel.</p>\n        </Flex>\n      )\n    }\n  },\n\n  characterPassives: () => {\n    return {\n      title: 'Character passives',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Select the conditional effects to apply to the character.</p>\n          <p>Effects that rely on combat stats or environment state will be applied by default, so only the options that require user input are listed here.</p>\n        </Flex>\n      )\n    }\n  },\n\n  lightConePassives: () => {\n    return {\n      title: 'Light cone passives',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Select the conditional effects to apply to the light cone.</p>\n          <p>Effects that rely on combat stats or environment state will be applied by default, so only the options that require user input are listed here.</p>\n        </Flex>\n      )\n    }\n  },\n\n  lightCone: () => {\n    return {\n      title: 'Light cone',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Select the light cone and level / superimposition</p>\n          <p>Levels will affect base stats used in the calculation. Superimposition and passive effects are applied under the Light cone passives panel.</p>\n        </Flex>\n      )\n    }\n  },\n\n  actions: () => {\n    return {\n      title: 'Actions',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Start - Begin optimization search with the selected filters</p>\n          <p>Filter - Re-apply the search filters to existing results. Use this to narrow filters without restarting a search</p>\n          <p>Cancel - Cancel an in progress search and display results</p>\n          <p>Reset - Clear all filters</p>\n        </Flex>\n      )\n    }\n  },\n\n  optimizerOptions: () => {\n    return {\n      title: 'Optimizer options',\n      content: (\n        <Flex vertical gap={10}>\n          <p><strong>Character rank filter</strong> - Rank characters by dragging them on the character page, and when enabled, characters may only take relics from lower ranked characters</p>\n          <p><strong>Maxed main stat</strong> - Assume the main stat for relics are maxed</p>\n          <p><strong>Keep current relics</strong> - The character must use its currently equipped items, and the optimizer will try to fill in empty slots</p>\n          <p><strong>Use equipped</strong> - If OFF, Optimizer will NOT consider relics currently equipped by a character</p>\n          <p><strong>Enhance / grade</strong> - Select the minimum enhance to search for and minimum stars for relics to include</p>\n          <p><strong>Stat display</strong> - Select which format of stats to apply to filters and display in the table. Base stats are the values you would see in the ingame character menu. Combat stats take into account all the buffs and passives applied to the character in combat as they perform an attack.</p>\n        </Flex>\n      )\n    }\n  },\n\n  relics: () => {\n    return {\n      title: 'Relics',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Weight - The relic's current weight as defined by the scoring algorithm + 64.8 weight for an appropriate main stat</p>\n          <p>Avg case - The relic's potential weight if rolls went into the average weight of the relic's substats</p>\n          <p>Best case - The relic's maximum potential weight if all future rolls went into the character's desired stats</p>\n        </Flex>\n      )\n    }\n  },\n\n  optimizationDetails: () => {\n    return {\n      title: 'Optimization details',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Shows how many relics are being used in the optimization search, after all filters are applied</p>\n          <p>Perms - Number of permutations that need to be searched. Narrow your filters to reduce permutations & search time</p>\n          <p>Searched - Number of permutations already searched</p>\n          <p>Results - Number of displayed results that satisfy the stat filters</p>\n        </Flex>\n      )\n    }\n  },\n\n  enemyOptions: () => {\n    return {\n      title: 'Enemy options',\n      content: (\n        <Flex vertical gap={10}>\n          <p>Level - Enemy level, affects enemy DEF calculations</p>\n          <p>Targets - Number of targets in the battle. The target enemy is always assumed to be in the center, and damage calculations are only for the main target.</p>\n          <p>RES - Enemy elemental RES. RES is set to 0 when the enemy's elemental weakness is enabled.</p>\n          <p>HP% - Enemy current health %, affects certain characters with damage increases or additional effects based on enemy HP.</p>\n          <p>Elemental weakness - Whether the enemy is weak to the character's type. Enabling this sets enemy elemental RES % to 0.</p>\n          <p>Weakness broken - Whether the enemy's toughness bar is broken. Affects damage calculations and certain character passives.</p>\n        </Flex>\n      )\n    }\n  },\n\n  substatWeightFilter: () => {\n    return {\n      title: 'Substat weight filter',\n      content: (\n        <Flex vertical gap={10}>\n          <p>This filter is used to reduce the number of permutations the optimizer has to process.</p>\n          <p>It works by first scoring each relic per slot by the weights defined, then sorting the relics in each slot by their score.</p>\n          <p>Then, the filter only uses the Top X% of the scored relics in the optimization search. The number of filtered relics are visible in the Permutations display on the sidebar.</p>\n          <p>Note that setting the Top X% too low may result in some builds not being displayed, if the filter ends up excludes a key relic. Use this filter with caution, but on large searches it makes a large impact on reducing search time.</p>\n        </Flex>\n      )\n    }\n  },\n}","/* eslint-disable no-unused-vars  */\n\nimport { Flex } from \"antd\";\nimport React from \"react\";\nimport { HeaderText } from \"../components/HeaderText\";\nimport { Constants } from './constants.ts'\nimport { FormSlider, FormSwitch } from \"../components/optimizerTab/FormConditionalInputs\";\nimport { TooltipImage } from \"../components/TooltipImage\";\nimport { Hint } from \"./hint\";\n\nlet Stats = Constants.Stats\n\nlet defaultGap = 5\n\nconst lightConeOptionMapping = {\n  20000: Arrows,\n  20001: Cornucopia,\n  20002: CollapsingSky,\n  20003: Amber,\n  20004: Void,\n  20005: Chorus,\n  20006: DataBank,\n  20007: DartingArrow,\n  20008: FineFruit,\n  20009: ShatteredHome,\n  20010: Defense,\n  20011: Loop,\n  20012: MeshingCogs,\n  20013: Passkey,\n  20014: Adversarial,\n  20015: Multiplication,\n  20016: MutualDemise,\n  20017: Pioneering,\n  20018: HiddenShadow,\n  20019: Mediation,\n  20020: Sagacity,\n  21000: PostOpConversation,\n  21001: GoodNightAndSleepWell,\n  21002: DayOneOfMyNewLife,\n  21003: OnlySilenceRemains,\n  21004: MemoriesOfThePast,\n  21005: TheMolesWelcomeYou,\n  21006: TheBirthOfTheSelf,\n  21007: SharedFeeling,\n  21008: EyesOfThePrey,\n  21009: LandausChoice,\n  21010: Swordplay,\n  21011: PlanetaryRendezvous,\n  21012: ASecretVow,\n  21013: MakeTheWorldClamor,\n  21014: PerfectTiming, // Does the ohb apply after passives?\n  21015: ResolutionShinesAsPearlsOfSweat,\n  21016: TrendOfTheUniversalMarket, // Revisit dot\n  21017: SubscribeForMore,\n  21018: DanceDanceDance,\n  21019: UnderTheBlueSky,\n  21020: GeniusesRepose,\n  21021: QuidProQuo,\n  21022: Fermata,\n  21023: WeAreWildfire,\n  21024: RiverFlowsInSpring,\n  21025: PastAndFuture,\n  21026: WoofWalkTime,\n  21027: TheSeriousnessOfBreakfast,\n  21028: WarmthShortensColdNights,\n  21029: WeWillMeetAgain, // Does this get affected by crit / dmg boosts?\n  21030: ThisIsMe, // Def scaling dmg not implemented\n  21031: ReturnToDarkness,\n  21032: CarveTheMoonWeaveTheClouds,\n  21033: NowhereToRun,\n  21034: TodayIsAnotherPeacefulDay,\n  22000: BeforeTheTutorialMissionStarts,\n  22001: HeyOverHere,\n  23000: NightOnTheMilkyWay,\n  23001: InTheNight,\n  23002: SomethingIrreplaceable,\n  23003: ButTheBattleIsntOver,\n  23004: InTheNameOfTheWorld, // Skill atk buff not implemented\n  23005: MomentOfVictory,\n  23006: PatienceIsAllYouNeed, // Revisit dot\n  23007: IncessantRain,\n  23008: EchoesOfTheCoffin,\n  23009: TheUnreachableSide,\n  23010: BeforeDawn,\n  23011: SheAlreadyShutHerEyes,\n  23012: SleepLikeTheDead,\n  23013: TimeWaitsForNoOne,\n  23014: IShallBeMyOwnSword,\n  23015: BrighterThanTheSun,\n  23016: WorrisomeBlissful,\n  23017: NightOfFright,\n  23018: AnInstantBeforeAGaze,\n  23019: PastSelfInMirror,\n  23020: BaptismOfPureThought,\n  24000: OnTheFallOfAnAeon,\n  24001: CruisingInTheStellarSea,\n  24002: TextureOfMemories,\n  24003: SolitaryHealing,\n  23021: EarthlyEscapade,\n  23022: ReforgedRemembrance,\n}\n\nfunction BaptismOfPureThought(s) {\n  let sValuesCd = [0.08, 0.09, 0.10, 0.11, 0.12]\n  let sValuesDmg = [0.36, 0.42, 0.48, 0.54, 0.60]\n  let sValuesFuaPen = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='debuffCdStacks' text='Debuff cd stacks' min={0} max={3} lc />\n        <FormSwitch name='postUltBuff' text='Disputation ult cd / fua def pen buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      debuffCdStacks: 3,\n      postUltBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CD] += r.debuffCdStacks * sValuesCd[s]\n      x.ELEMENTAL_DMG += r.postUltBuff ? sValuesDmg[s] : 0\n      x.FUA_DEF_PEN += r.postUltBuff ? sValuesFuaPen[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PastSelfInMirror(s) {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltDmgBuff' text='Post ult dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.postUltDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SolitaryHealing(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltDotDmgBuff' text='Post ult dot dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltDotDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DOT_BOOST += r.postUltDotDmgBuff ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TextureOfMemories(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='activeShieldDmgDecrease' text='Active shield dmg decrease' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      activeShieldDmgDecrease: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += (r.activeShieldDmgDecrease) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction CruisingInTheStellarSea(s) {\n  let sValuesCr = [0.08, 0.10, 0.12, 0.14, 0.16]\n  let sValuesAtk = [0.20, 0.25, 0.30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHp50CrBoost' text='Enemy HP <= 50% cr boost' lc />\n        <FormSwitch name='enemyDefeatedAtkBuff' text='Enemy defeated atk buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHp50CrBoost: true,\n      enemyDefeatedAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.enemyHp50CrBoost && request.enemyHpPercent <= 0.50) ? sValuesCr[s] : 0\n      x[Stats.ATK_P] += (r.enemyDefeatedAtkBuff) ? sValuesAtk[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction OnTheFallOfAnAeon(s) {\n  let sValuesAtkStacks = [0.08, 0.10, 0.12, 0.14, 0.16]\n  let sValuesDmgBuff = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='atkBoostStacks' text='Atk boost stacks' min={0} max={4} lc />\n        <FormSwitch name='weaknessBreakDmgBuff' text='Weakness break dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBoostStacks: 4,\n      weaknessBreakDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.atkBoostStacks * sValuesAtkStacks[s]\n      x.ELEMENTAL_DMG += (r.weaknessBreakDmgBuff) ? sValuesDmgBuff[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction AnInstantBeforeAGaze(s) {\n  const sValues = [0.0036, 0.0042, 0.0048, 0.0054, 0.006]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='maxEnergyUltDmgStacks' text='Max energy' min={0} max={180} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      maxEnergyUltDmgStacks: 180,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ULT_BOOST += r.maxEnergyUltDmgStacks * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction NightOfFright(s) {\n  const sValues = [0.024, 0.028, 0.032, 0.036, 0.04]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='atkBuffStacks' text=\"Atk buff stacks\" min={0} max={5} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBuffStacks: 5,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.atkBuffStacks * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction WorrisomeBlissful(s) {\n  let sValuesFuaDmg = [0.30, 0.35, 0.40, 0.45, 0.50]\n  let sValuesCd = [0.12, 0.14, 0.16, 0.18, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='fuaDmgBoost' text='Fua dmg boost' lc />\n        <FormSlider name='targetTameStacks' text=\"Target tame stacks\" min={0} max={2} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      fuaDmgBoost: true,\n      targetTameStacks: 2,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CD] += r.targetTameStacks * sValuesCd[s]\n      x.FUA_BOOST += (r.fuaDmgBoost) ? sValuesFuaDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction BrighterThanTheSun(s) {\n  let sValuesAtk = [0.18, 0.21, 0.24, 0.27, 0.30]\n  let sValuesErr = [0.06, 0.07, 0.08, 0.09, 0.10]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='dragonsCallStacks' text=\"Dragon's call stacks\" min={0} max={2} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dragonsCallStacks: 2,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.dragonsCallStacks * sValuesAtk[s]\n      x[Stats.ERR] += r.dragonsCallStacks * sValuesErr[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction IShallBeMyOwnSword(s) {\n  let sValuesStackDmg = [0.14, 0.165, 0.19, 0.215, 0.24]\n  let sValuesDefPen = [0.12, 0.14, 0.16, 0.18, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='eclipseStacks' text='Eclipse stacks' min={0} max={3} lc />\n        <FormSwitch name='maxStackDefPen' text='Max stack def pen' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      eclipseStacks: 3,\n      maxStackDefPen: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.eclipseStacks * sValuesStackDmg[s]\n      x.DEF_SHRED += (r.maxStackDefPen && r.eclipseStacks == 3) ? sValuesDefPen[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TimeWaitsForNoOne(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='healingBasedDmgProc' text='Healing based dmg proc (not implemented)' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      healingBasedDmgProc: false,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SleepLikeTheDead(s) {\n  const sValues = [0.36, 0.42, 0.48, 0.54, 0.60]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='missedCritCrBuff' text='Missed crit cr buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      missedCritCrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.missedCritCrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SheAlreadyShutHerEyes(s) {\n  const sValues = [0.09, 0.105, 0.12, 0.135, 0.15]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='hpLostDmgBuff' text='Hp lost dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      hpLostDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.hpLostDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction BeforeDawn(s) {\n  let sValuesSkillUltDmg = [0.18, 0.21, 0.24, 0.27, 0.30]\n  let sValuesFuaDmg = [0.48, 0.56, 0.64, 0.72, 0.80]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='skillUltDmgBoost' text='Skill/ult dmg boost' lc />\n        <FormSwitch name='fuaDmgBoost' text='Fua dmg boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillUltDmgBoost: true,\n      fuaDmgBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.SKILL_BOOST += (r.skillUltDmgBoost) ? sValuesSkillUltDmg[s] : 0\n      x.ULT_BOOST += (r.skillUltDmgBoost) ? sValuesSkillUltDmg[s] : 0\n      x.FUA_BOOST += (r.fuaDmgBoost) ? sValuesFuaDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TheUnreachableSide(s) {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBuff' text='Hp consumed or attacked dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.dmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction EchoesOfTheCoffin(s) {\n  const sValues = [12, 14, 16, 18, 20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltSpdBuff' text='Post ult spd buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltSpdBuff: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD] += (r.postUltSpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction IncessantRain(s) {\n  let sValuesCr = [0.12, 0.14, 0.16, 0.18, 0.20]\n  let sValuesDmg = [0.12, 0.14, 0.16, 0.18, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemy3DebuffsCrBoost' text='Enemy <= 3 debuffs cr boost' lc />\n        <FormSwitch name='targetCodeDebuff' text='Target code debuff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemy3DebuffsCrBoost: true,\n      targetCodeDebuff: true\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.enemy3DebuffsCrBoost) ? sValuesCr[s] : 0\n      x.ELEMENTAL_DMG += (r.targetCodeDebuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PatienceIsAllYouNeed(s) {\n  let sValuesDmg = [0.24, 0.28, 0.32, 0.36, 0.40]\n  let sValuesSpd = [0.048, 0.056, 0.064, 0.072, 0.08]\n\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBoost' text='Dmg boost' lc />\n        <FormSlider name='spdStacks' text='Spd stacks' min={0} max={3} lc />\n        <FormSwitch name='dotEffect' text='Dot effect (not implemented)' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBoost: true,\n      spdStacks: 0,\n      dotEffect: false\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD_P] += r.spdStacks * sValuesSpd[s]\n      x.ELEMENTAL_DMG += (r.dmgBoost) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction MomentOfVictory(s) {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='selfAttackedDefBuff' text='Self attacked def buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      selfAttackedDefBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.DEF_P] += (r.selfAttackedDefBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction InTheNameOfTheWorld(s) {\n  let sValuesDmg = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyDebuffedDmgBoost' text='Enemy debuffed dmg boost' lc />\n        <FormSwitch name='skillAtkBoost' text='Skill atk boost (not implemented)' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyDebuffedDmgBoost: true,\n      skillAtkBoost: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyDebuffedDmgBoost) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ButTheBattleIsntOver(s) {\n  let sValuesErr = [0.10, 0.12, 0.14, 0.16, 0.18]\n  let sValuesDmg = [0.30, 0.35, 0.40, 0.45, 0.50]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postSkillDmgBuff' text='Post skill dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postSkillDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ERR] += sValuesErr[s]\n      x.ELEMENTAL_DMG += (r.postSkillDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SomethingIrreplaceable(s) {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBuff' text='Enemy defeated or self hit dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.dmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction InTheNight(s) {\n  let sValuesDmg = [0.06, 0.07, 0.08, 0.09, 0.10]\n  let sValuesCd = [0.12, 0.14, 0.16, 0.18, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='spdScalingBuffs' text='Speed scaling buffs enabled' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      spdScalingBuffs: true,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (c, request) => {\n      let r = request.lightConeConditionals\n      let x = c.x\n\n      let stacks = Math.max(0, Math.min(6, Math.floor((x[Stats.SPD] - 100) / 10)))\n\n      x.BASIC_BOOST += (r.spdScalingBuffs) ? stacks * sValuesDmg[s] : 0\n      x.SKILL_BOOST += (r.spdScalingBuffs) ? stacks * sValuesDmg[s] : 0\n      x.ULT_CD_BOOST += (r.spdScalingBuffs) ? stacks * sValuesCd[s] : 0\n    }\n  }\n}\n\nfunction NightOnTheMilkyWay(s) {\n  let sValuesAtk = [0.09, 0.105, 0.12, 0.135, 0.15]\n  let sValuesDmg = [0.30, 0.35, 0.40, 0.45, 0.50]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyCountAtkBuff' text='Enemy count atk buff' lc />\n        <FormSwitch name='enemyWeaknessBreakDmgBuff' text='Enemy weakness break dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyCountAtkBuff: true,\n      enemyWeaknessBreakDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.enemyCountAtkBuff) ? request.enemyCount * sValuesAtk[s] : 0\n      x.ELEMENTAL_DMG += (r.enemyWeaknessBreakDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction HeyOverHere(s) {\n  const sValues = [0.16, 0.19, 0.22, 0.25, 0.28]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postSkillHealBuff' text='Post skill heal buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postSkillHealBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.postSkillHealBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction BeforeTheTutorialMissionStarts(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TodayIsAnotherPeacefulDay(s) {\n  const sValues = [0.002, 0.0025, 0.003, 0.0035, 0.004]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='maxEnergyStacks' text='Max energy' min={0} max={160} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      maxEnergyStacks: 160,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.maxEnergyStacks * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction NowhereToRun(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction CarveTheMoonWeaveTheClouds(s) {\n  let sValuesAtk = [0.10, 0.125, 0.15, 0.175, 0.20]\n  let sValuesCd = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='atkBuffActive' text='Atk buff active' lc />\n        <FormSwitch name='cdBuffActive' text='Cd buff active' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBuffActive: true,\n      cdBuffActive: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.atkBuffActive) ? sValuesAtk[s] : 0\n      x[Stats.CD] += (r.cdBuffActive) ? sValuesCd[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ReturnToDarkness(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ThisIsMe(/* s */) {\n  // const sValues = [0.60, 0.75, 0.90, 1.05, 1.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defScalingUltDmg' text='Def scaling ult dmg (not implemented)' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defScalingUltDmg: false,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (c, request) => {\n      console.warn('not implemented', c, request)\n      // let r = request.lightConeConditionals\n      // let x = c.x\n\n      // x.ULT_DEF_SCALING += (r.defScalingUltDmg) ? sValues[s] : 0\n    }\n  }\n}\n\nfunction WeWillMeetAgain(s) {\n  const sValues = [0.48, 0.60, 0.72, 0.84, 0.96]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='extraDmgProc' text='Additional dmg proc' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      extraDmgProc: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_SCALING += (r.extraDmgProc) ? sValues[s] : 0\n      x.SKILL_SCALING += (r.extraDmgProc) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction WarmthShortensColdNights(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TheSeriousnessOfBreakfast(s) {\n  let sValuesDmgBoost = [0.12, 0.15, 0.18, 0.21, 0.24]\n  let sValuesStacks = [0.04, 0.05, 0.06, 0.07, 0.08]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBoost' text='Dmg boost' lc />\n        <FormSlider name='defeatedEnemyAtkStacks' text='Defeated enemy atk stacks' min={0} max={3} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBoost: true,\n      defeatedEnemyAtkStacks: 3,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.defeatedEnemyAtkStacks * sValuesStacks[s]\n      x.ELEMENTAL_DMG += (r.dmgBoost) ? sValuesDmgBoost[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction WoofWalkTime(s) {\n  const sValues = [0.16, 0.20, 0.24, 0.28, 0.32]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyBurnedBleeding' text='Enemy burned / bleeding' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyBurnedBleeding: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyBurnedBleeding) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PastAndFuture(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction RiverFlowsInSpring(s) {\n  let sValuesSpd = [0.08, 0.09, 0.10, 0.11, 0.12]\n  let sValuesDmg = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='spdDmgBuff' text='Spd / dmg buff active' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      spdDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD_P] += (r.spdDmgBuff) ? sValuesSpd[s] : 0\n      x.ELEMENTAL_DMG += (r.spdDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction WeAreWildfire(s) {\n  const sValues = [0.08, 0.10, 0.12, 0.14, 0.16]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='initialDmgReductionBuff' text='Initial dmg reduction buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      initialDmgReductionBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += (r.initialDmgReductionBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Fermata(s) {\n  const sValues = [0.16, 0.20, 0.24, 0.28, 0.32];\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyShockWindShear' text='Enemy shocked / wind sheared' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyShockWindShear: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyShockWindShear) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction QuidProQuo(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction GeniusesRepose(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemyCdBuff' text='Defeated enemy cd buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemyCdBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CD] += (r.defeatedEnemyCdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction UnderTheBlueSky(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemyCrBuff' text='Defeated enemy cr buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemyCrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.defeatedEnemyCrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction DanceDanceDance(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SubscribeForMore(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='maxEnergyDmgBoost' text='Max energy dmg boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      maxEnergyDmgBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_BOOST += sValues[s]\n      x.SKILL_BOOST += sValues[s]\n      x.BASIC_BOOST += (r.maxEnergyDmgBoost) ? sValues[s] : 0\n      x.SKILL_BOOST += (r.maxEnergyDmgBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TrendOfTheUniversalMarket(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ResolutionShinesAsPearlsOfSweat(s) {\n  const sValues = [0.12, 0.13, 0.14, 0.15, 0.16]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='targetEnsnared' text='Target ensnared' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      targetEnsnared: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DEF_SHRED += (r.targetEnsnared) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PerfectTiming(s) {\n  const sValues = [0.33, 0.36, 0.39, 0.42, 0.45]\n  let sMaxValues = [0.15, 0.18, 0.21, 0.24, 0.27]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='resToHealingBoost' text='Res to healing boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      resToHealingBoost: true,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (c, request) => {\n      let r = request.lightConeConditionals\n      let x = c.x\n\n      let boost = Math.min(sMaxValues[s], sValues[s] * x[Stats.RES])\n      x[Stats.OHB] += (r.resToHealingBoost) ? boost : 0\n    }\n  }\n}\n\nfunction MakeTheWorldClamor(s) {\n  const sValues = [0.32, 0.40, 0.48, 0.56, 0.64]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='ultDmgBuff' text='Ult dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ULT_BOOST += (r.ultDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ASecretVow(s) {\n  const sValues = [0.20, 0.25, 0.30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHpHigherDmgBoost' text='Enemy HP % higher dmg boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHpHigherDmgBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += sValues[s]\n      x.ELEMENTAL_DMG += (r.enemyHpHigherDmgBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PlanetaryRendezvous(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='alliesSameElement' text='Allies same element dmg boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      alliesSameElement: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.alliesSameElement) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Swordplay(s) {\n  const sValues = [0.08, 0.10, 0.12, 0.14, 0.16]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='sameTargetHitStacks' text='Same target hit stacks' min={0} max={5} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      sameTargetHitStacks: 5,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.sameTargetHitStacks) * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction LandausChoice(s) {\n  const sValues = [0.16, 0.18, 0.20, 0.22, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, /* request */) => {\n      // let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction EyesOfThePrey(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, /* request */) => {\n      // let r = request.lightConeConditionals\n\n      x.DOT_BOOST += sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SharedFeeling(s) {\n  const sValues = [0.10, 0.125, 0.15, 0.175, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, /* request */) => {\n      // let r = request.lightConeConditionals\n\n      x[Stats.OHB] += sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TheBirthOfTheSelf(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHp50FuaBuff' text='Enemy HP < 50% fua buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHp50FuaBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.xxxxxxxxxxxxxxxxxxxxx] += (r.name) ? sValues[s] : 0\n      x.FUA_BOOST += sValues[s]\n      x.FUA_BOOST += (r.enemyHp50FuaBuff && request.enemyHpPercent < 0.50) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TheMolesWelcomeYou(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='atkBuffStacks' text='Atk buff stacks' min={0} max={3} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBuffStacks: 3,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.atkBuffStacks) * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction MemoriesOfThePast() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction OnlySilenceRemains(s) {\n  let sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemies2CrBuff' text='<= 2 enemies cr buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemies2CrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.enemies2CrBuff && request.enemyCount <= 2) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction DayOneOfMyNewLife(s) {\n  const sValues = [0.16, 0.18, 0.20, 0.22, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgResBuff' text='Dmg RES buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgResBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += (r.dmgResBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction GoodNightAndSleepWell(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='debuffStacksDmgIncrease' text='Debuff stacks dmg increase' min={0} max={3} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      debuffStacksDmgIncrease: 3,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.debuffStacksDmgIncrease * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PostOpConversation(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltHealingBoost' text='Post ult healing boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltHealingBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.postUltHealingBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Sagacity(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltAtkBuff' text='Post ult atk buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.postUltAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Mediation(s) {\n  const sValues = [12, 14, 16, 18, 20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='initialSpdBuff' text='Initial spd buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      initialSpdBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD] += (r.initialSpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction HiddenShadow(s) {\n  const sValues = [0.60, 0.75, 0.90, 1.05, 1.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='basicAtkBuff' text='Basic atk buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_BOOST += (r.basicAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Pioneering() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction MutualDemise(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='selfHp80CrBuff' text='Self HP <80% cr buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      selfHp80CrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.selfHp80CrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Multiplication() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Adversarial(s) {\n  const sValues = [0.10, 0.12, 0.14, 0.16, 0.18]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemySpdBuff' text='Defeated enemy spd buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemySpdBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD_P] += (r.defeatedEnemySpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Passkey() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction MeshingCogs() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Loop(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemySlowedDmgBuff' text='Enemy slowed dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemySlowedDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemySlowedDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Defense() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ShatteredHome(s) {\n  const sValues = [0.20, 0.25, 0.30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHp50Buff' text='Enemy HP >50% dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHp50Buff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyHp50Buff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction FineFruit() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n      name: true,\n    }),\n    precomputeEffects: (x, request) => { console.warn('not implemented', x, request) },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction DartingArrow(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemyAtkBuff' text='Atk buff on kill' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemyAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.defeatedEnemyAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction DataBank(s) {\n  const sValues = [0.28, 0.35, 0.42, 0.49, 0.56]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='ultDmgBuff' text='Ult dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ULT_BOOST += (r.ultDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Chorus(s) {\n  const sValues = [0.08, 0.09, 0.10, 0.11, 0.12]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='inBattleAtkBuff' text='In battle atk buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      inBattleAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.inBattleAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Void(s) {\n  const sValues = [0.20, 0.25, 0, 30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='initialEhrBuff' text='Initial EHR buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      initialEhrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.EHR] += (r.initialEhrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\n\nfunction Amber(s) {\n  const sValues = [0.16, 0.20, 0.24, 0.28, 0.32]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='hp50DefBuff' text='HP <50% def buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      hp50DefBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.DEF_P] += (r.hp50DefBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction CollapsingSky(s) {\n  const sValues = [0.20, 0.25, 0.30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='basicSkillDmgBuff' text='Basic/Skill dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicSkillDmgBuff: true\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_BOOST += (r.basicSkillDmgBuff) ? sValues[s] : 0\n      x.SKILL_BOOST += (r.basicSkillDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Cornucopia(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='healingBuff' text='Healing buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      healingBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.healingBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Arrows(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='critBuff' text='Initial crit buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      critBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.critBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ReforgedRemembrance(s) {\n  let sValuesAtk = [0.05, 0.06, 0.07, 0.08, 0.09]\n  let sValuesDotPen = [0.072, 0.079, 0.086, 0.093, 0.10]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='prophetStacks' text='Prophet stacks' min={0} max={4} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      prophetStacks: 4,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.prophetStacks * sValuesAtk[s]\n      x.DOT_DEF_PEN += r.prophetStacks * sValuesDotPen[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction EarthlyEscapade(s) {\n  const sValuesCr = [0.10, 0.11, 0.12, 0.13, 0.14]\n  const sValuesCd = [0.28, 0.35, 0.42, 0.49, 0.56]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='maskActive' text='Mask active' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      maskActive: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.maskActive) ? sValuesCr[s] : 0\n      x[Stats.CD] += (r.maskActive) ? sValuesCd[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nexport const LightConeConditionals = {\n  get: (request) => {\n    let lcFn = lightConeOptionMapping[request.lightCone]\n    if (!lcFn) {\n      return {\n        display: () => (\n          <Flex vertical gap={5}>\n            <HeaderText>Light cone passives</HeaderText>\n          </Flex>\n        ),\n        defaults: () => ({})\n      }\n    }\n    return lcFn(request.lightConeSuperimposition - 1)\n  },\n  getDisplayForLightCone: (id, superimposition) => {\n    if (!id || !lightConeOptionMapping[id]) {\n      return (\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Light cone passives</HeaderText>\n          <TooltipImage type={Hint.lightConePassives()} />\n        </Flex>\n      )\n    }\n\n    let lcFn = lightConeOptionMapping[id]\n    let display = lcFn(superimposition - 1).display()\n\n    return (\n      <Flex vertical gap={5}>\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Light cone passives</HeaderText>\n          <TooltipImage type={Hint.lightConePassives()} />\n        </Flex>\n        {display}\n      </Flex>\n    )\n  },\n}","import { ConfigProvider, Flex } from \"antd\";\nimport React from \"react\";\nimport { HeaderText } from \"../components/HeaderText\";\nimport { Constants } from './constants.ts'\nimport { FormSlider, FormSwitch } from \"../components/optimizerTab/FormConditionalInputs\";\nimport { TooltipImage } from \"../components/TooltipImage\";\nimport { Hint } from \"./hint\";\n\nlet Stats = Constants.Stats\n\nlet precisionRound = (number, precision = 8) => {\n  let factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nconst ASHBLAZING_ATK_STACK = 0.06\n// Remove the ashblazing set atk bonus only when calc-ing fua attacks\nfunction calculateAshblazingSet(c, request, hitMulti) {\n  let enabled = p4(c.sets.TheAshblazingGrandDuke)\n  let valueTheAshblazingGrandDuke = request.setConditionals[Constants.Sets.TheAshblazingGrandDuke][1]\n  let ashblazingAtk = 0.06 * valueTheAshblazingGrandDuke * enabled * c.baseAtk * enabled\n  let ashblazingMulti = hitMulti * enabled * c.baseAtk\n\n  return {\n    ashblazingMulti,\n    ashblazingAtk\n  }\n}\n\nconst characterOptionMapping = {\n  1212: jingliu,\n  1302: argenti,\n  1008: arlan,\n  1009: asta,\n  1211: bailu,\n  1205: blade,\n  1101: bronya,\n  1107: clara,\n  1002: danheng,\n  1208: fuxuan,\n  1104: gepard,\n  1210: guinaifen,\n  1215: hanya,\n  1013: herta,\n  1003: himeko,\n  1109: hook,\n  1217: huohuo,\n  1213: imbibitorlunae, // Simplified stacking logic, revisit\n  1204: jingyuan,\n  1005: kafka,\n  1111: luka,\n  1203: luocha,\n  1110: lynx,\n  1001: march7th,\n  1105: natasha,\n  1106: pela,\n  1201: qingque,\n  1108: sampo,\n  1102: seele,\n  1103: serval,\n  1006: silverwolf,\n  1206: sushang,\n  1202: tingyun,\n  1112: topaz,\n  8001: physicaltrailblazer,\n  8002: physicaltrailblazer,\n  8003: firetrailblazer,\n  8004: firetrailblazer,\n  1004: welt,\n  1209: yanqing,\n  1207: yukong,\n  1303: ruanmei,\n  1305: drratio,\n  1214: xueyi,\n  1306: sparkle,\n  1307: blackswan,\n  1312: misha,\n}\n\n// TODO profile & convert to array for performance?\nconst baseComputedStatsObject = {\n  [Stats.HP_P]: 0,\n  [Stats.ATK_P]: 0,\n  [Stats.DEF_P]: 0,\n  [Stats.SPD_P]: 0,\n  [Stats.HP]: 0,\n  [Stats.ATK]: 0,\n  [Stats.DEF]: 0,\n  [Stats.SPD]: 0,\n  [Stats.CD]: 0,\n  [Stats.CR]: 0,\n  [Stats.EHR]: 0,\n  [Stats.RES]: 0,\n  [Stats.BE]: 0,\n  [Stats.ERR]: 0,\n  [Stats.OHB]: 0,\n\n  ELEMENTAL_DMG: 0,\n  DEF_SHRED: 0,\n  DMG_TAKEN_MULTI: 0,\n  ALL_DMG_MULTI: 0,\n  RES_PEN: 0,\n  DMG_RED_MULTI: 1,\n\n  BASIC_CR_BOOST: 0,\n  SKILL_CR_BOOST: 0,\n  ULT_CR_BOOST: 0,\n  FUA_CR_BOOST: 0,\n\n  BASIC_CD_BOOST: 0,\n  SKILL_CD_BOOST: 0,\n  ULT_CD_BOOST: 0,\n  FUA_CD_BOOST: 0,\n\n  BASIC_SCALING: 0,\n  SKILL_SCALING: 0,\n  ULT_SCALING: 0,\n  FUA_SCALING: 0,\n  DOT_SCALING: 0,\n\n  BASIC_BOOST: 0,\n  SKILL_BOOST: 0,\n  ULT_BOOST: 0,\n  FUA_BOOST: 0,\n  DOT_BOOST: 0,\n\n  BASIC_VULNERABILITY: 0,\n  SKILL_VULNERABILITY: 0,\n  ULT_VULNERABILITY: 0,\n  FUA_VULNERABILITY: 0,\n  DOT_VULNERABILITY: 0,\n\n  BASIC_DMG: 0,\n  SKILL_DMG: 0,\n  ULT_DMG: 0,\n  FUA_DMG: 0,\n  DOT_DMG: 0,\n\n  BASIC_DEF_PEN: 0,\n  SKILL_DEF_PEN: 0,\n  ULT_DEF_PEN: 0,\n  FUA_DEF_PEN: 0,\n  DOT_DEF_PEN: 0,\n\n  BASIC_RES_PEN: 0,\n  SKILL_RES_PEN: 0,\n  ULT_RES_PEN: 0,\n  FUA_RES_PEN: 0,\n  DOT_RES_PEN: 0,\n}\n\nfunction xueyi(e) {\n  let ultBoostMax = ult(e, 0.60, 0.648)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.40, 1.54)\n  let ultScaling = ult(e, 2.50, 2.70)\n  let fuaScaling = talent(e, 0.90, 0.99)\n\n  let hitMultiByFuaHits = {\n    0: 0,\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1), // 0.06\n    2: ASHBLAZING_ATK_STACK * (1 * 1 / 2 + 2 * 1 / 2), // 0.09\n    3: ASHBLAZING_ATK_STACK * (1 * 1 / 3 + 2 * 1 / 3 + 3 * 1 / 3) // 0.12\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyToughness50' text='Enemy toughness >= 50%' />\n        <FormSlider name='toughnessReductionDmgBoost' text='Ult toughness based dmg boost' min={0} max={ultBoostMax} percent />\n        <FormSlider name='fuaHits' text='Fua hits' min={0} max={3} />\n        <FormSwitch name='e4BeBuff' text='E4 break effect buff' disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyToughness50: true,\n      toughnessReductionDmgBoost: ultBoostMax,\n      fuaHits: 3,\n      e4BeBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += (e >= 4 && r.e4BeBuff) ? 0.40 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling * r.fuaHits\n\n      // Boost\n      x.ULT_BOOST += (r.enemyToughness50) ? 0.10 : 0\n      x.ULT_BOOST += r.toughnessReductionDmgBoost\n      x.FUA_BOOST += (e >= 1) ? 0.40 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.ELEMENTAL_DMG += Math.min(2.40, x[Stats.BE])\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      let hitMulti = hitMultiByFuaHits[r.fuaHits]\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction drratio(e) {\n  let debuffStacksMax = 5\n  let summationStacksMax = (e >= 1) ? 10 : 6\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.50, 1.65)\n  let ultScaling = ult(e, 2.40, 2.592)\n  let fuaScaling = talent(e, 2.70, 2.97)\n\n  function e2FuaRatio(procs, fua = true) {\n    return fua\n      ? fuaScaling / (fuaScaling + 0.20 * procs) // for fua dmg\n      : 0.20 / (fuaScaling + 0.20 * procs) // for each e2 proc\n  }\n\n  let baseHitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n  let fuaMultiByDebuffs = {\n    0: ASHBLAZING_ATK_STACK * (1 * 1 / 1), // 0\n    1: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(1, true) + 2 * e2FuaRatio(1, false)), // 2\n    2: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(2, true) + 5 * e2FuaRatio(2, false)), // 2 + 3\n    3: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(3, true) + 9 * e2FuaRatio(3, false)), // 2 + 3 + 4\n    4: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(4, true) + 14 * e2FuaRatio(4, false)), // 2 + 3 + 4 + 5\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='summationStacks' text='Summation stacks' min={0} max={summationStacksMax} />\n        <FormSlider name='enemyDebuffStacks' text='Enemy debuffs' min={0} max={debuffStacksMax} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyDebuffStacks: debuffStacksMax,\n      summationStacks: summationStacksMax,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += r.summationStacks * 0.025\n      x[Stats.CD] += r.summationStacks * 0.05\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.enemyDebuffStacks >= 3) ? Math.min(0.50, r.enemyDebuffStacks * 0.10) : 0\n      x.FUA_BOOST += (e >= 6) ? 0.50 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      if (e >= 2) {\n        let hitMulti = fuaMultiByDebuffs[Math.min(4, r.enemyDebuffStacks)]\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      } else {\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, baseHitMulti)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      }\n    }\n  }\n}\n\nfunction ruanmei(e) {\n  let fieldResPenValue = ult(e, 0.25, 0.27)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultFieldActive' text='Ult field active' />\n        <FormSwitch name='e4BeBuff' text='E4 break effect buff' disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultFieldActive: true,\n      e4BeBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += 0.20\n      x[Stats.BE] += (e >= 4 && r.e4BeBuff) ? 1.00 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.RES_PEN += (r.ultFieldActive) ? fieldResPenValue : 0\n      x.DEF_SHRED += (e >= 1 && r.ultFieldActive) ? 0.20 : 0\n      x[Stats.ATK_P] += (e >= 2 && request.enemyWeaknessBroken) ? 0.40 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      let beOver = precisionRound((x[Stats.BE] * 100 - 120) / 10)\n      x.ELEMENTAL_DMG += Math.floor(Math.max(0, beOver)) * 0.06\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction yukong(e) {\n  let skillAtkBuffValue = skill(e, 0.80, 0.88)\n  let ultCdBuffValue = skill(e, 0.65, 0.702)\n  let ultCrBuffValue = skill(e, 0.28, 0.294)\n  let talentAtkScaling = talent(e, 0.80, 0.88)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 3.80, 4.104)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='roaringBowstrings' text='Roaring bowstrings' />\n        <FormSwitch name='ultBuff' text='Ult buff' />\n        <FormSwitch name='initialSpeedBuff' text='Initial speed buff' />\n      </Flex>\n    ),\n    defaults: () => ({\n      roaringBowstringsActive: true,\n      ultBuff: true,\n      initialSpeedBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.roaringBowstrings) ? skillAtkBuffValue : 0\n      x[Stats.CR] += (r.ultBuff && r.roaringBowstrings) ? ultCrBuffValue : 0\n      x[Stats.CD] += (r.ultBuff && r.roaringBowstrings) ? ultCdBuffValue : 0\n      x[Stats.SPD_P] += (r.initialSpeedBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.BASIC_SCALING += talentAtkScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.12\n      x.ELEMENTAL_DMG += (e >= 4 && r.roaringBowstrings) ? 0.30 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction yanqing(e) {\n  let ultCdBuffValue = ult(e, 0.50, 0.54)\n  let talentCdBuffValue = ult(e, 0.30, 0.33)\n  let talentCrBuffValue = ult(e, 0.20, 0.21)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.20, 2.42)\n  let ultScaling = ult(e, 3.50, 3.78)\n  let fuaScaling = talent(e, 0.50, 0.55)\n\n  let hitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuffActive' text='Ult buff active' />\n        <FormSwitch name='soulsteelBuffActive' text='Soulsteel buff active' />\n        <FormSwitch name='critSpdBuff' text='Crit spd buff' />\n        <FormSwitch name='e1TargetFrozen' text='E1 target frozen' disabled={e < 1} />\n        <FormSwitch name='e4CurrentHp80' text='E4 self HP >= 80%' disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuffActive: true,\n      soulsteelBuffActive: true,\n      critSpdBuff: true,\n      e1TargetFrozen: true,\n      e4CurrentHp80: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (r.ultBuffActive) ? 0.60 : 0\n      x[Stats.CD] += (r.ultBuffActive && r.soulsteelBuffActive) ? ultCdBuffValue : 0\n      x[Stats.CR] += (r.soulsteelBuffActive) ? talentCrBuffValue : 0\n      x[Stats.CD] += (r.soulsteelBuffActive) ? talentCdBuffValue : 0\n      x[Stats.RES] += (r.soulsteelBuffActive) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.critSpdBuff) ? 0.10 : 0\n      x[Stats.ERR] += (e >= 2 && r.soulsteelBuffActive) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      x.BASIC_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.SKILL_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.ULT_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.FUA_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n\n      x.BASIC_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.SKILL_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.ULT_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.FUA_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n\n      // Boost\n      x.RES_PEN += (e >= 4 && r.e4CurrentHp80) ? 0.12 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction welt(e) {\n  let skillExtraHitsMax = (e >= 6) ? 3 : 2\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0.72, 0.792)\n  let ultScaling = ult(e, 1.50, 1.62)\n  let talentScaling = talent(e, 0.60, 0.66)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyDmgTakenDebuff' text='Enemy dmg taken debuff' />\n        <FormSwitch name='enemySlowed' text='Enemy slowed' />\n        <FormSlider name='skillExtraHits' text='Skill extra hits' min={0} max={skillExtraHitsMax} />\n        <FormSwitch name='e1EnhancedState' text='E1 enhanced state' disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemySlowed: true,\n      enemyDmgTakenDebuff: true,\n      skillExtraHits: skillExtraHitsMax,\n      e1EnhancedState: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x.BASIC_SCALING += (r.enemySlowed) ? talentScaling : 0\n      x.SKILL_SCALING += (r.enemySlowed) ? talentScaling : 0\n      x.ULT_SCALING += (r.enemySlowed) ? talentScaling : 0\n\n      x.BASIC_SCALING += (e >= 1 && r.e1EnhancedState) ? 0.50 * basicScaling : 0\n      x.SKILL_SCALING += (e >= 1 && r.e1EnhancedState) ? 0.80 * skillScaling : 0\n\n      x.SKILL_SCALING += r.skillExtraHits * skillScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (request.enemyWeaknessBroken) ? 0.20 : 0\n      x.DMG_TAKEN_MULTI += (r.enemyDmgTakenDebuff) ? 0.12 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction firetrailblazer(e) {\n  let skillDamageReductionValue = skill(e, 0.50, 0.52)\n\n  let basicAtkScaling = basic(e, 1.00, 1.10)\n  let basicDefScaling = (e >= 1) ? 0.25 : 0\n  let basicEnhancedAtkScaling = basic(e, 1.35, 1.463)\n  let basicEnhancedDefScaling = (e >= 1) ? 0.50 : 0\n  let skillScaling = skill(e, 0, 0)\n  let ultAtkScaling = ult(e, 1.00, 1.10)\n  let ultDefScaling = ult(e, 1.50, 1.65)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedBasic' text='Enhanced basic' />\n        <FormSwitch name='skillActive' text='Skill active' />\n        <FormSwitch name='shieldActive' text='Shield active' />\n        <FormSlider name='e6DefStacks' text='E6 def stacks' min={0} max={3} disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedBasic: true,\n      skillActive: true,\n      shieldActive: true,\n      e6DefStacks: 3,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.DEF_P] += (e >= 6) ? r.e6DefStacks * 0.10 : 0\n      x[Stats.ATK_P] += (r.shieldActive) ? 0.15 : 0\n\n      // Scaling\n      x.SKILL_SCALING += skillScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (r.skillActive) ? (1 - skillDamageReductionValue) : 1\n      x.DMG_RED_MULTI *= (r.skillActive) ? (1 - 0.15) : 1\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      if (r.enhancedBasic) {\n        x.BASIC_DMG += basicEnhancedAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicEnhancedDefScaling * x[Stats.DEF]\n      } else {\n        x.BASIC_DMG += basicAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicDefScaling * x[Stats.DEF]\n      }\n\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += ultAtkScaling * x[Stats.ATK]\n      x.ULT_DMG += ultDefScaling * x[Stats.DEF]\n    }\n  }\n}\n\nfunction physicaltrailblazer(e) {\n  let talentAtkScalingValue = talent(e, 0.20, 0.22)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.25, 1.375)\n  let ultScaling = ult(e, 4.5, 4.80)\n  let ultEnhancedScaling = ult(e, 2.70, 2.88)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedUlt' text='Aoe ult' />\n        <FormSlider name='talentStacks' text='Talent stacks' min={0} max={2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedUlt: true,\n      talentStacks: 2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += r.talentStacks * talentAtkScalingValue\n      x[Stats.DEF_P] += r.talentStacks * 0.10\n      x[Stats.CR] += (request.enemyWeaknessBroken) ? 0.25 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += (r.enhancedUlt) ? ultEnhancedScaling : ultScaling\n\n      // Boost\n      x.SKILL_BOOST += 0.25\n      x.ULT_BOOST += (r.enhancedUlt) ? 0.25 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction topaz(e) {\n  let proofOfDebtFuaVulnerability = skill(e, 0.50, 0.55)\n  let enhancedStateFuaScalingBoost = ult(e, 1.50, 1.65)\n  let enhancedStateFuaCdBoost = ult(e, 0.25, 0.275)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.50, 1.65)\n  let fuaScaling = talent(e, 1.50, 1.65)\n\n  // 0.06\n  let basicHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1 * 1 / 1)\n\n  // 0.18\n  let fuaHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1 * 1 / 7 + 2 * 1 / 7 + 3 * 1 / 7 + 4 * 1 / 7 + 5 * 1 / 7 + 6 * 1 / 7 + 7 * 1 / 7)\n\n  // 0.252\n  let fuaEnhancedHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1 * 1 / 10 + 2 * 1 / 10 + 3 * 1 / 10 + 4 * 1 / 10 + 5 * 1 / 10 + 6 * 1 / 10 + 7 * 1 / 10 + 8 * 3 / 10)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyProofOfDebtDebuff' text='Target proof of debt debuff' />\n        <FormSwitch name='numbyEnhancedState' text='Numby enhanced state' />\n        <FormSlider name='e1DebtorStacks' text='E1 debtor stacks' min={0} max={2} disabled={e < 1} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyProofOfDebtDebuff: true,\n      numbyEnhancedState: true,\n      e1DebtorStacks: 2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.SKILL_SCALING += (r.numbyEnhancedState) ? enhancedStateFuaScalingBoost : 0\n      x.FUA_SCALING += fuaScaling\n      x.FUA_SCALING += (r.numbyEnhancedState) ? enhancedStateFuaScalingBoost : 0\n\n      // Boost\n      x.FUA_VULNERABILITY += (r.enemyProofOfDebtDebuff) ? proofOfDebtFuaVulnerability : 0\n      x.ELEMENTAL_DMG += (request.enemyElementalWeak) ? 0.15 : 0\n      x.FUA_CD_BOOST += (e >= 1) ? 0.25 * r.e1DebtorStacks : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      let hitMulti = (r.numbyEnhancedState) ? fuaEnhancedHitCountMulti : fuaHitCountMulti\n      let ashblazingFuaData = calculateAshblazingSet(c, request, hitMulti)\n      let ashblazingBasicData = calculateAshblazingSet(c, request, basicHitCountMulti)\n\n\n      x.BASIC_DMG += x.BASIC_SCALING * (x[Stats.ATK] - ashblazingBasicData.ashblazingAtk + ashblazingBasicData.ashblazingMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingFuaData.ashblazingAtk + ashblazingFuaData.ashblazingMulti)\n      x.SKILL_DMG = x.FUA_DMG\n\n      // Copy fua boosts to skill/basic\n      // BOOSTS get added, while vulnerability / def pen gets replaced (?)\n      x.SKILL_BOOST += x.FUA_BOOST\n      x.SKILL_CD_BOOST += x.FUA_CD_BOOST\n      x.SKILL_CR_BOOST += x.FUA_CR_BOOST\n      x.SKILL_VULNERABILITY = x.FUA_VULNERABILITY\n      x.SKILL_DEF_PEN = x.FUA_DEF_PEN\n      x.SKILL_RES_PEN = x.FUA_RES_PEN\n\n      x.BASIC_BOOST += x.FUA_BOOST\n      x.BASIC_CD_BOOST += x.FUA_CD_BOOST\n      x.BASIC_CR_BOOST += x.FUA_CR_BOOST\n      x.BASIC_VULNERABILITY = x.FUA_VULNERABILITY\n      x.BASIC_DEF_PEN = x.FUA_DEF_PEN\n      x.BASIC_RES_PEN = x.FUA_RES_PEN\n\n      // Her ult buff only applies to the skill/fua not basic\n      x.FUA_CD_BOOST += (r.numbyEnhancedState) ? enhancedStateFuaCdBoost : 0\n      x.SKILL_CD_BOOST += (r.numbyEnhancedState) ? enhancedStateFuaCdBoost : 0\n\n      // Her e6 only applies to skill/fua not basic\n      x.SKILL_RES_PEN += (e >= 6) ? 0.10 : 0\n      x.FUA_RES_PEN += (e >= 6) ? 0.10 : 0\n    }\n  }\n}\n\nfunction tingyun(e) {\n  let skillAtkBoostMax = skill(e, 0.25, 0.27)\n  let ultDmgBoost = ult(e, 0.50, 0.56)\n  // let skillAtkBoostScaling = skill(e, 0.50, 0.55) + ((e >= 4) ? 0.20 : 0)\n  // let talentScaling = talent(e, 0.60, 0.66) + ((e >= 4) ? 0.20 : 0)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='benedictionBuff' text='Benediction buff' />\n        <FormSwitch name='skillSpdBuff' text='Skill spd buff' />\n        <FormSwitch name='ultSpdBuff' text='Ult spd buff' />\n        <FormSwitch name='ultDmgBuff' text='Ult dmg buff' />\n      </Flex>\n    ),\n    defaults: () => ({\n      benedictionBuff: false,\n      skillSpdBuff: false,\n      ultSpdBuff: false,\n      ultDmgBuff: false,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.SPD_P] += (e >= 1 && r.ultSpdBuff) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.skillSpdBuff) ? 0.20 : 0\n      x[Stats.ATK_P] += (r.benedictionBuff) ? skillAtkBoostMax : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.BASIC_BOOST += 0.40\n      x.ELEMENTAL_DMG += (r.ultDmgBuff) ? ultDmgBoost : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction sushang(e) {\n  let talentSpdBuffValue = talent(e, 0.20, 0.21)\n  let ultBuffedAtk = ult(e, 0.30, 0.324)\n  let talentSpdBuffStacksMax = (e >= 6) ? 2 : 1\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.10, 2.31)\n  let skillExtraHitScaling = skill(e, 1.00, 1.10)\n  let ultScaling = ult(e, 3.20, 3.456)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuffedState' text='Ult buffed state' />\n        <FormSlider name='skillExtraHits' text='Skill extra hits' min={0} max={3} />\n        <FormSlider name='skillTriggerStacks' text='Skill trigger stacks' min={0} max={10} />\n        <FormSlider name='talentSpdBuffStacks' text='Talent spd buff stacks' min={0} max={talentSpdBuffStacksMax} />\n        <FormSwitch name='e2DmgReductionBuff' text='E2 dmg reduction' disabled={e < 2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuffedState: true,\n      e2DmgReductionBuff: true,\n      skillExtraHits: 3,\n      skillTriggerStacks: 10,\n      talentSpdBuffStacks: talentSpdBuffStacksMax,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += (e >= 4) ? 0.40 : 0\n      x[Stats.ATK_P] += (r.ultBuffedState) ? ultBuffedAtk : 0\n      x[Stats.SPD_P] += (r.talentSpdBuffStacks) * talentSpdBuffValue\n\n      // Scaling\n      // Trace only affects stance damage not skill damage - boost this based on proportion of stance : total skill dmg\n      let originalSkillScaling = skillScaling\n      let stanceSkillScaling = 0\n      stanceSkillScaling += (r.skillExtraHits >= 1) ? skillExtraHitScaling : 0\n      stanceSkillScaling += (r.ultBuffedState && r.skillExtraHits >= 2) ? skillExtraHitScaling * 0.5 : 0\n      stanceSkillScaling += (r.ultBuffedState && r.skillExtraHits >= 3) ? skillExtraHitScaling * 0.5 : 0\n      let stanceScalingProportion = stanceSkillScaling / (stanceSkillScaling + originalSkillScaling)\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += originalSkillScaling\n      x.SKILL_SCALING += stanceSkillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.SKILL_BOOST += r.skillTriggerStacks * 0.025 * stanceScalingProportion\n      x.DMG_RED_MULTI *= (e >= 2 && r.e2DmgReductionBuff) ? (1 - 0.20) : 1\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction silverwolf(e) {\n  let skillResShredValue = skill(e, 0.10, 0.105)\n  let skillDefShredBufValue = skill(e, 0.08, 0.088)\n  let ultDefShredValue = ult(e, 0.45, 0.468)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.96, 2.156)\n  let ultScaling = ult(e, 3.80, 4.104)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillResShredDebuff' text='Skill res shred' />\n        <FormSwitch name='skillDefShredDebuff' text='Skill def shred' />\n        <FormSwitch name='ultDefShredDebuff' text='Ult def shred' />\n        <FormSlider name='targetDebuffs' text='Target debuffs' min={0} max={5} />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillResShredDebuff: true,\n      skillDefShredDebuff: true,\n      ultDefShredDebuff: true,\n      targetDebuffs: 5,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 4) ? r.targetDebuffs * 0.20 : 0\n\n      // Boost\n      x.RES_PEN += (r.skillResShredDebuff) ? skillResShredValue : 0\n      x.RES_PEN += (r.skillResShredDebuff && r.targetDebuffs >= 3) ? 0.03 : 0\n      x.DEF_SHRED += (r.skillDefShredDebuff) ? skillDefShredBufValue : 0\n      x.DEF_SHRED += (r.ultDefShredDebuff) ? ultDefShredValue : 0\n      x.ELEMENTAL_DMG += (e >= 6) ? r.targetDebuffs * 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction serval(e) {\n  let talentExtraDmgScaling = talent(e, 0.72, 0.792)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.40, 1.54)\n  let ultScaling = ult(e, 1.80, 1.944)\n  let dotScaling = skill(e, 1.04, 1.144)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='targetShocked' text='Target shocked' />\n        <FormSwitch name='enemyDefeatedBuff' text='Enemy killed buff' />\n      </Flex>\n    ),\n    defaults: () => ({\n      targetShocked: true,\n      enemyDefeatedBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.enemyDefeatedBuff) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n\n      x.BASIC_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0\n      x.SKILL_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0\n      x.ULT_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += (e >= 6 && r.targetShocked) ? 0.30 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction seele(e) {\n  let buffedStateDmgBuff = talent(e, 0.80, 0.88)\n  let speedBoostStacksMax = (e >= 2 ? 2 : 1)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.20, 2.42)\n  let ultScaling = ult(e, 4.25, 4.59)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='buffedState' text='Buffed state' />\n        <FormSlider name='speedBoostStacks' text='Speed boost stacks' min={0} max={speedBoostStacksMax} />\n        <FormSwitch name='e6UltTargetDebuff' text='E6 ult debuff' disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      buffedState: true,\n      speedBoostStacks: speedBoostStacksMax,\n      e6UltTargetDebuff: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 1 && request.enemyHpPercent <= 0.80) ? 0.15 : 0\n      x[Stats.SPD_P] += 0.25 * r.speedBoostStacks\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.buffedState) ? buffedStateDmgBuff : 0\n      x.RES_PEN += (r.buffedState) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      x.BASIC_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0\n      x.SKILL_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0\n      x.ULT_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0\n    }\n  }\n}\n\nfunction sampo(e) {\n  let dotVulnerabilityValue = ult(e, 0.30, 0.32)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0.56, 0.616)\n  let ultScaling = ult(e, 1.60, 1.728)\n  let dotScaling = talent(e, 0.52, 0.572)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='targetDotTakenDebuff' text='Ult dot taken debuff' />\n        <FormSlider name='skillExtraHits' text='Skill extra hits' min={0} max={4} />\n        <FormSwitch name='targetWindShear' text='Target has wind shear' />\n      </Flex>\n    ),\n    defaults: () => ({\n      targetDotTakenDebuff: true,\n      skillExtraHits: 4,\n      targetWindShear: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.SKILL_SCALING += (r.skillExtraHits) * skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n      x.DOT_SCALING += (e >= 6) ? 0.15 : 0\n\n      // Boost\n      x.DOT_VULNERABILITY += (r.targetDotTakenDebuff) ? dotVulnerabilityValue : 0\n      x.DMG_RED_MULTI *= (r.targetWindShear) ? (1 - 0.15) : 1\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction qingque(e) {\n  let skillStackDmg = skill(e, 0.38, 0.408)\n  let talentAtkBuff = talent(e, 0.72, 0.792)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let basicEnhancedScaling = basic(e, 2.40, 2.64)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 2.00, 2.16)\n\n  let hitMultiByTargetsBlast = {\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1), // 0.06\n    3: ASHBLAZING_ATK_STACK * (2 * 1 / 1), // 0.12\n    5: ASHBLAZING_ATK_STACK * (2 * 1 / 1)  // 0.12\n  }\n\n  let hitMultiSingle = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='basicEnhanced' text='Basic enhanced' />\n        <FormSwitch name='basicEnhancedSpdBuff' text='Basic enhanced spd buff' />\n        <FormSlider name='skillDmgIncreaseStacks' text='Skill dmg stacks' min={0} max={4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicEnhanced: true,\n      basicEnhancedSpdBuff: true,\n      skillDmgIncreaseStacks: 4,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.basicEnhanced) ? talentAtkBuff : 0\n      x[Stats.SPD_P] += (r.basicEnhancedSpdBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += (r.basicEnhanced) ? basicEnhancedScaling : basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += (e >= 4) ? x.BASIC_SCALING : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += r.skillDmgIncreaseStacks * skillStackDmg\n      x.ULT_BOOST += (e >= 1) ? 0.10 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      if (r.basicEnhanced) {\n        let hitMulti = hitMultiByTargetsBlast[request.enemyCount]\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      } else {\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiSingle)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      }\n    }\n  }\n}\n\nfunction pela(e) {\n  let ultDefPenValue = ult(e, 0.40, 0.42)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.10, 2.31)\n  let ultScaling = ult(e, 1.00, 1.08)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyDebuffed' text='Enemy debuffed' />\n        <FormSwitch name='skillRemovedBuff' text='Skill removed buff' />\n        <FormSwitch name='ultDefPenDebuff' text='Ult def pen debuff' />\n        <FormSwitch name='e4SkillResShred' text='E4 skill res shred' disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyDebuffed: true,\n      skillRemovedBuff: true,\n      ultDefPenDebuff: true,\n      e4SkillResShred: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.EHR] += 0.10\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.BASIC_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n      x.SKILL_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n      x.ULT_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n\n      x.RES_PEN += (e >= 4 && r.e4SkillResShred) ? 0.12 : 0\n      x.DEF_SHRED += (r.ultDefPenDebuff) ? ultDefPenValue : 0\n\n      x.ELEMENTAL_DMG += (r.enemyDebuffed) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      x.BASIC_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n      x.SKILL_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n      x.ULT_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n    }\n  }\n}\n\nfunction natasha(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: () => {\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.BASIC_DMG += (e >= 6) ? 0.40 * x[Stats.HP] : 0\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction march7th(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 1.50, 1.62)\n  let fuaScaling = talent(e, 1.00, 1.10)\n\n  let hitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: () => {\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      x.FUA_DMG += (e >= 4) ? 0.30 * x[Stats.DEF] : 0\n    }\n  }\n}\n\nfunction lynx(e) {\n  let skillHpPercentBuff = skill(e, 0.075, 0.08)\n  let skillHpFlatBuff = skill(e, 200, 223)\n\n  let basicScaling = basic(e, 0.50, 0.55)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillBuff' text='Skill buff' />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillBuff: true,\n      e4TalentAtkBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.HP_P] += (r.skillBuff) ? skillHpPercentBuff : 0\n      x[Stats.HP] += (r.skillBuff) ? skillHpFlatBuff : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.HP] += (e >= 6 && r.skillBuff) ? 0.06 * x[Stats.HP] : 0\n      x[Stats.ATK] += (e >= 4 && r.skillBuff) ? 0.03 * x[Stats.HP] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction luocha(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 2.00, 2.16)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='fieldActive' text='Field active' />\n        <FormSwitch name='e6ResReduction' text='E6 res reduction' disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      fieldActive: true,\n      e6ResReduction: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r >= 1 && r.fieldActive) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.RES_PEN += (e >= 6 && r.e6ResReduction) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction luka(e) {\n  let basicEnhancedHitValue = basic(e, 0.20, 0.22)\n  let targetUltDebuffDmgTakenValue = ult(e, 0.20, 0.216)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let basicEnhancedScaling = basic(e, 0.20 * 3 + 0.80, 0.22 * 3 + 0.88)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let ultScaling = ult(e, 3.30, 3.564)\n  let dotScaling = skill(e, 3.38, 3.718)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='basicEnhanced' text='Basic enhanced' />\n        <FormSwitch name='targetUltDebuffed' text='Target ult debuffed' />\n        <FormSlider name='basicEnhancedExtraHits' text='Basic extra hits' min={0} max={3} />\n        <FormSwitch name='e1TargetBleeding' text='E1 target bleeding' disabled={e < 1} />\n        <FormSlider name='e4TalentStacks' text='E4 talent stacks' min={0} max={4} disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicEnhanced: true,\n      targetUltDebuffed: true,\n      e1TargetBleeding: true,\n      basicEnhancedExtraHits: 3,\n      e4TalentStacks: 4,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (e >= 4) ? r.e4TalentStacks * 0.05 : 0\n\n      // Scaling\n      x.BASIC_SCALING += (r.basicEnhanced) ? basicEnhancedScaling : basicScaling\n      x.BASIC_SCALING += (r.basicEnhanced && r.basicEnhancedExtraHits) * basicEnhancedHitValue\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.DMG_TAKEN_MULTI += (r.targetUltDebuffed) ? targetUltDebuffDmgTakenValue : 0\n      x.ELEMENTAL_DMG += (e >= 1 && r.e1TargetBleeding) ? 0.15 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction kafka(e) {\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.60, 1.76)\n  let ultScaling = ult(e, 0.80, 0.864)\n  let fuaScaling = talent(e, 1.40, 1.596)\n  let dotScaling = ult(e, 2.90, 3.183)\n\n  let hitMulti = ASHBLAZING_ATK_STACK *\n    (1 * 0.15 + 2 * 0.15 + 3 * 0.15 + 4 * 0.15 + 5 * 0.15 + 6 * 0.25)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='e1DotDmgReceivedDebuff' text='E1 dot dmg debuff' disabled={e < 1} />\n      </Flex>\n    ),\n    defaults: () => ({\n      e1DotDmgReceivedDebuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.DOT_VULNERABILITY += (e >= 1 && r.e1DotDmgReceivedDebuff) ? 0.30 : 0\n      x.DOT_BOOST += (e >= 2) ? 0.25 : 0\n      x.DOT_SCALING += (e >= 6) ? 1.56 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction jingyuan(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.00, 1.10)\n  let ultScaling = ult(e, 2.00, 2.16)\n  let fuaScaling = talent(e, 0.66, 0.726)\n\n  let hitMulti = 0\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillCritBuff' text='Skill cr buff' />\n        <FormSlider name='talentHitsPerAction' text='Talent stacks' min={3} max={10} />\n        <FormSlider name='talentAttacks' text='Talent hit on target' min={0} max={10} />\n        <FormSwitch name='e2DmgBuff' text='E2 dmg buff' disabled={e < 2} />\n        <FormSlider name='e6FuaVulnerabilityStacks' text='E6 vulnerable stacks (applies to all hits)' min={0} max={3} disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillCritBuff: true,\n      talentHitsPerAction: 10,\n      talentAttacks: 10,\n      e2DmgBuff: true,\n      e6FuaVulnerabilityStacks: 3\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      r.talentHitsPerAction = Math.max(r.talentHitsPerAction, r.talentAttacks)\n\n      // Stats\n      x[Stats.CR] += (r.skillCritBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n      x.FUA_CD_BOOST += (r.talentHitsPerAction >= 6) ? 0.25 : 0\n      x.BASIC_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n      x.SKILL_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n      x.ULT_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n\n      x.FUA_VULNERABILITY += (e >= 6) ? r.e6FuaVulnerabilityStacks * 0.12 : 0\n\n      // Lightning lord calcs\n      let stacks = r.talentHitsPerAction\n      let hits = r.talentAttacks\n      let stacksPerMiss = (request.enemyCount >= 3) ? 2 : 0\n      let stacksPerHit = (request.enemyCount >= 3) ? 3 : 1\n      let stacksPreHit = (request.enemyCount >= 3) ? 2 : 1\n\n      // Calc stacks on miss\n      let ashblazingStacks = stacksPerMiss * (stacks - hits)\n\n      // Calc stacks on hit\n      ashblazingStacks += stacksPreHit\n      let atkBoostSum = 0\n      for (let i = 0; i < hits; i++) {\n        atkBoostSum += Math.min(8, ashblazingStacks) * (1 / hits)\n        ashblazingStacks += stacksPerHit\n      }\n\n      hitMulti = atkBoostSum * 0.06\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * r.talentAttacks * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction imbibitorlunae(e) {\n  let righteousHeartStackMax = (e >= 1) ? 10 : 6\n  let outroarStackCdValue = skill(e, 0.12, 0.132)\n  let righteousHeartDmgValue = talent(e, 0.10, 0.11)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let basicEnhanced1Scaling = basic(e, 2.60, 2.86)\n  let basicEnhanced2Scaling = basic(e, 3.80, 4.18)\n  let basicEnhanced3Scaling = basic(e, 5.00, 5.50)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 3.00, 3.24)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='basicEnhancements' text='Basic enhancements' min={0} max={3} />\n        <FormSlider name='skillOutroarStacks' text='Outroar stacks (applied to all hits)' min={0} max={4} />\n        <FormSlider name='talentRighteousHeartStacks' text='Righteous Heart stacks (applied to all hits)' min={0} max={righteousHeartStackMax} />\n        <FormSlider name='e6ResPenStacks' text='E6 RES pen stacks' min={0} max={3} disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicEnhancements: 3,\n      skillOutroarStacks: 4,\n      talentRighteousHeartStacks: righteousHeartStackMax,\n      e6ResPenStacks: 3,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CD] += (request.enemyElementalWeak) ? 0.24 : 0\n      x[Stats.CD] += r.skillOutroarStacks * outroarStackCdValue\n\n      // Scaling\n      x.BASIC_SCALING += {\n        0: basicScaling,\n        1: basicEnhanced1Scaling,\n        2: basicEnhanced2Scaling,\n        3: basicEnhanced3Scaling,\n      }[r.basicEnhancements]\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += r.talentRighteousHeartStacks * righteousHeartDmgValue\n      x.BASIC_RES_PEN += (e >= 6 && r.basicEnhancements == 3) ? 0.20 * r.e6ResPenStacks : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction huohuo(e) {\n  let ultBuffValue = ult(e, 0.40, 0.432)\n  let basicScaling = basic(e, 0.50, 0.55)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuff' text='Ult buff' />\n        <FormSwitch name='skillBuff' text='Skill buff' />\n        <FormSwitch name='e6DmgBuff' text='E6 dmg buff' disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuff: true,\n      skillBuff: true,\n      e6DmgBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.SPD_P] += (e >= 1 && r.skillBuff) ? 0.12 : 0\n      x[Stats.ATK_P] += (r.ultBuff) ? ultBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (e >= 6 && r.skillBuff) ? 0.50 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n    }\n  }\n}\n\nfunction hook(e) {\n  let targetBurnedExtraScaling = talent(e, 1.00, 1.10)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.40, 2.64)\n  let skillEnhancedScaling = skill(e, 2.80, 3.08)\n  let ultScaling = ult(e, 4.00, 4.32)\n  let dotScaling = skill(e, 0.65, 0.715)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedSkill' text='Enhanced skill' />\n        <FormSwitch name='targetBurned' text='Target burned' />\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedSkill: true,\n      targetBurned: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += (r.enhancedSkill) ? skillEnhancedScaling : skillScaling\n      x.ULT_SCALING += ultScaling\n      x.BASIC_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.SKILL_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.ULT_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.SKILL_BOOST += (e >= 1 && r.enhancedSkill) ? 0.20 : 0\n      x.ELEMENTAL_DMG += (e >= 6 && r.targetBurned) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\nfunction himeko(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let ultScaling = ult(e, 2.30, 2.484)\n  let fuaScaling = talent(e, 1.40, 1.54)\n  let dotScaling = 0.30\n\n  let hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1 * 0.20 + 2 * 0.20 + 3 * 0.20 + 4 * 0.40), // 0.168\n    3: ASHBLAZING_ATK_STACK * (2 * 0.20 + 5 * 0.20 + 8 * 0.20 + 8 * 0.40), // 0.372\n    5: ASHBLAZING_ATK_STACK * (3 * 0.20 + 8 * 0.20 + 8 * 0.20 + 8 * 0.40), // 0.42\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='targetBurned' text='Target burned' />\n        <FormSwitch name='selfCurrentHp80Percent' text='Self HP >= 80%' />\n        <FormSwitch name='e1TalentSpdBuff' text='E1 spd buff' disabled={e < 1} />\n        <FormSlider name='e6UltExtraHits' text='E6 ult extra hits' min={0} max={2} disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      targetBurned: true,\n      selfCurrentHp80Percent: true,\n      e1TalentSpdBuff: true,\n      e6UltExtraHits: 2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (r.selfCurrentHp80Percent) ? 0.15 : 0\n      x[Stats.SPD_P] += (e >= 1 && r.e1TalentSpdBuff) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 6) ? r.e6UltExtraHits * ultScaling * 0.40 : 0\n      x.FUA_SCALING += fuaScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.SKILL_BOOST += (r.targetBurned) ? 0.20 : 0\n      x.ELEMENTAL_DMG += (e >= 2 && request.enemyHpPercent <= 0.50) ? 0.15 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n\n      let hitMulti = hitMultiByTargets[request.enemyCount]\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction herta(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.00, 1.10)\n  let ultScaling = ult(e, 2.00, 2.16)\n  let fuaScaling = talent(e, 0.40, 0.43)\n\n  let hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1),\n    3: ASHBLAZING_ATK_STACK * (2 * 1 / 1),\n    5: ASHBLAZING_ATK_STACK * (3 * 1 / 1)\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='techniqueBuff' text='Technique buff' />\n        <FormSwitch name='targetFrozen' text='Target frozen' />\n        <FormSlider name='e2TalentCritStacks' text='E2 talent crit stacks' min={0} max={5} disabled={e < 2} />\n        <FormSwitch name='e6UltAtkBuff' text='E6 ult atk buff' disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      techniqueBuff: true,\n      targetFrozen: true,\n      e2TalentCritStacks: 5,\n      e6UltAtkBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.techniqueBuff) ? 0.40 : 0\n      x[Stats.CR] += (e >= 2) ? r.e2TalentCritStacks * 0.03 : 0\n      x[Stats.ATK_P] += (e >= 6 && r.e6UltAtkBuff) ? 0.25 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.BASIC_SCALING += (e >= 1 && request.enemyHpPercent <= 0.50) ? 0.40 : 0\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      x.SKILL_BOOST += (request.enemyHpPercent >= 0.50) ? 0.45 : 0\n\n      // Boost\n      x.ULT_BOOST += (r.targetFrozen) ? 0.20 : 0\n      x.FUA_BOOST += (e >= 4) ? 0.10 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      let hitMulti = hitMultiByTargets[request.enemyCount]\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction hanya(e) {\n  let ultSpdBuffValue = ult(e, 0.20, 0.21)\n  let ultAtkBuffValue = ult(e, 0.60, 0.648)\n  let talentDmgBoostValue = talent(e, 0.30, 0.33)\n\n  talentDmgBoostValue += (e >= 6) ? 0.10 : 0\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.40, 2.64)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuff' text='Ult buff active' />\n        <FormSwitch name='targetBurdenActive' text='Target burden active' />\n        <FormSwitch name='burdenAtkBuff' text='Burden atk buff' />\n        <FormSwitch name='e2SkillSpdBuff' text='E2 skill spd buff' disabled={e < 2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuff: true,\n      targetBurdenActive: true,\n      burdenAtkBuff: true,\n      skillSpdBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x[Stats.ATK_P] += (r.ultBuff) ? ultAtkBuffValue : 0\n      x[Stats.ATK_P] += (r.burdenAtkBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.e2SkillSpdBuff) ? 0.20 : 0\n\n      // Boost\n      x.ALL_DMG_MULTI = (r.targetBurdenActive) ? talentDmgBoostValue : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.SPD] += (r.ultBuff) ? ultSpdBuffValue * x[Stats.SPD] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction guinaifen(e) {\n  let talentDebuffDmgIncreaseValue = talent(e, 0.07, 0.076)\n  let talentDebuffMax = (e >= 6) ? 4 : 3\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let ultScaling = ult(e, 1.20, 1.296)\n  let dotScaling = skill(e, 2.182, 2.40)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='talentDebuffStacks' text='Talent debuff stacks' min={0} max={talentDebuffMax} />\n        <FormSwitch name='enemyBurned' text='Enemy burned' />\n        <FormSwitch name='e2BurnMultiBoost' text='E2 burn multi boost' disabled={e < 2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentDebuffStacks: talentDebuffMax,\n      enemyBurned: true,\n      e2BurnMultiBoost: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n      x.DOT_SCALING += (e >= 2 && r.e2BurnMultiBoost) ? 0.40 : 0\n\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.enemyBurned) ? 0.20 : 0\n      x.DMG_TAKEN_MULTI += r.talentDebuffStacks * talentDebuffDmgIncreaseValue\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction gepard(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: () => {\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.RES] += 0.20\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x[Stats.ATK] += 0.35 * x[Stats.DEF]\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction fuxuan(e) {\n  let skillCrBuffValue = skill(e, 0.12, 0.132)\n  let skillHpBuffValue = skill(e, 0.06, 0.066)\n  let talentDmgReductionValue = talent(e, 0.18, 0.196)\n\n  let basicScaling = basic(e, 0.50, 0.55)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 1.00, 1.08)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillActive' text='Skill active' />\n        <FormSlider name='e6TeamHpLostPercent' text='E6 team hp lost' min={0} max={1.2} percent disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillActive: true,\n      e6TeamHpLostPercent: 1.2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CD] += (e >= 1) ? 0.30 : 0\n      x[Stats.CR] += (r.skillActive) ? skillCrBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (1 - talentDmgReductionValue)\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.HP] += (r.skillActive) ? skillHpBuffValue * x[Stats.HP] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.HP]\n      x.ULT_DMG += (e >= 6) ? 2.00 * r.e6TeamHpLostPercent * x[Stats.HP] : 0\n    }\n  }\n}\nfunction danheng(e) {\n  let extraPenValue = talent(e, 0.36, 0.396)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.60, 2.86)\n  let ultScaling = ult(e, 4.00, 4.32)\n  let ultExtraScaling = ult(e, 1.20, 1.296)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='talentPenBuff' text='Talent pen buff' />\n        <FormSwitch name='enemySlowed' text='Enemy slowed' />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentPenBuff: true,\n      enemySlowed: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 1 && request.enemyHpPercent >= 0.50) ? 0.12 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (r.enemySlowed) ? ultExtraScaling : 0\n\n      // Boost\n      x.BASIC_BOOST += (r.enemySlowed) ? 0.40 : 0\n      x.RES_PEN += (r.talentPenBuff) ? extraPenValue : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction clara(e) {\n  let ultDmgReductionValue = ult(e, 0.25, 0.27)\n  let ultFuaExtraScaling = ult(e, 1.60, 1.728)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let fuaScaling = talent(e, 1.60, 1.76)\n\n  let hitMultiByTargetsBlast = {\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1),\n    3: ASHBLAZING_ATK_STACK * (2 * 1 / 1),\n    5: ASHBLAZING_ATK_STACK * (2 * 1 / 1) // Clara is 1 hit blast when enhanced\n  }\n\n  let hitMultiSingle = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuff' text='Ult buff' />\n        <FormSwitch name='talentEnemyMarked' text='Enemy marked' />\n        <FormSwitch name='e2UltAtkBuff' text='E2 ult ATK buff' disabled={e < 2} />\n        <FormSwitch name='e4DmgReductionBuff' text='E4 dmg reduction buff' disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuff: true,\n      talentEnemyMarked: true,\n      e2UltAtkBuff: true,\n      e4DmgReductionBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (e >= 2 && r.e2UltAtkBuff) ? 0.30 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      // x.SKILL_SCALING += r.talentEnemyMarked ?\n      x.FUA_SCALING += fuaScaling\n      x.FUA_SCALING += r.ultBuff ? ultFuaExtraScaling : 0\n\n      // Boost\n      x.DMG_RED_MULTI *= (1 - 0.10)\n      x.DMG_RED_MULTI *= r.ultBuff ? (1 - ultDmgReductionValue) : 1\n      x.DMG_RED_MULTI *= (e >= 4 && r.e4DmgReductionBuff) ? (1 - 0.30) : 1\n      x.FUA_BOOST += 0.30\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n\n      // Calc ashblazing: ult buff -> blast, unbuffed -> single\n      if (r.ultBuff) {\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiByTargetsBlast[request.enemyCount])\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      } else {\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiSingle)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      }\n    }\n  }\n}\n\nfunction bronya(e) {\n  let skillDmgBoostValue = skill(e, 0.66, 0.726)\n  let ultAtkBoostValue = ult(e, 0.55, 0.594)\n  let ultCdBoostValue = ult(e, 0.16, 0.168)\n  let ultCdBoostBaseValue = ult(e, 0.20, 0.216)\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let fuaScaling = basicScaling * 0.80\n\n  let hitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='techniqueBuff' text='Technique buff' />\n        <FormSwitch name='battleStartDefBuff' text='Battle start DEF buff' />\n        <FormSwitch name='skillBuff' text='Skill buff' />\n        <FormSwitch name='ultBuff' text='Ult buff' />\n        <FormSwitch name='e2SkillSpdBuff' text='E2 skill SPD buff' disabled={e < 2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      techniqueBuff: true,\n      battleStartDefBuff: true,\n      skillBuff: true,\n      ultBuff: true,\n      e2SkillSpdBuff: false,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.DEF_P] += (r.battleStartDefBuff) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.e2SkillSpdBuff) ? 0.30 : 0\n      x[Stats.ATK_P] += (r.techniqueBuff) ? 0.15 : 0\n      x[Stats.ATK_P] += (r.ultBuff) ? ultAtkBoostValue : 0\n      x.BASIC_CR_BOOST += 1.00\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.FUA_SCALING += (e >= 4) ? fuaScaling : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.10\n      x.ELEMENTAL_DMG += (r.skillBuff) ? skillDmgBoostValue : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      // Order matters?\n      x[Stats.CD] += (r.ultBuff) ? ultCdBoostValue * x[Stats.CD] : 0\n      x[Stats.CD] += (r.ultBuff) ? ultCdBoostBaseValue : 0\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction blade(e) {\n  let enhancedStateDmgBoost = skill(e, 0.40, 0.456)\n  let hpPercentLostTotalMax = 0.90\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let basicEnhancedAtkScaling = skill(e, 0.40, 0.44)\n  let basicEnhancedHpScaling = skill(e, 1.00, 1.10)\n  let ultAtkScaling = ult(e, 0.40, 0.432)\n  let ultHpScaling = ult(e, 1.00, 1.08)\n  let ultLostHpScaling = ult(e, 1.00, 1.08)\n  let fuaAtkScaling = talent(e, 0.44, 0.484)\n  let fuaHpScaling = talent(e, 1.10, 1.21)\n\n  let hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1 * 0.33 + 2 * 0.33 + 3 * 0.34),\n    3: ASHBLAZING_ATK_STACK * (2 * 0.33 + 5 * 0.33 + 8 * 0.34),\n    5: ASHBLAZING_ATK_STACK * (3 * 0.33 + 8 * 0.33 + 8 * 0.34),\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedStateActive' text='Enhanced state' />\n        <FormSlider name='hpPercentLostTotal' text='HP% lost total' min={0} max={hpPercentLostTotalMax} percent />\n        <FormSlider name='e4MaxHpIncreaseStacks' text='E4 max HP stacks' min={0} max={2} disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedStateActive: true,\n      hpPercentLostTotal: hpPercentLostTotalMax,\n      e4MaxHpIncreaseStacks: 2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 2 && r.enhancedStateActive) ? 0.15 : 0\n      x[Stats.HP_P] += (e >= 4) ? r.e4MaxHpIncreaseStacks * 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      // Rest of the scalings are calculated dynamically\n\n      // Boost\n      x.ELEMENTAL_DMG += r.enhancedStateActive ? enhancedStateDmgBoost : 0\n      x.FUA_BOOST += 0.20\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      if (r.enhancedStateActive) {\n        x.BASIC_DMG += basicEnhancedAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicEnhancedHpScaling * x[Stats.HP]\n      } else {\n        x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      }\n\n      x.ULT_DMG += ultAtkScaling * x[Stats.ATK]\n      x.ULT_DMG += ultHpScaling * x[Stats.HP]\n      x.ULT_DMG += ultLostHpScaling * r.hpPercentLostTotal * x[Stats.HP]\n      x.ULT_DMG += (e >= 1 && request.enemyCount == 1) ? 1.50 * r.hpPercentLostTotal * x[Stats.HP] : 0\n\n      let hitMulti = hitMultiByTargets[request.enemyCount]\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += fuaAtkScaling * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n\n      x.FUA_DMG += fuaHpScaling * x[Stats.HP]\n      x.FUA_DMG += (e >= 6) ? 0.50 * x[Stats.HP] : 0\n    }\n  }\n}\n\nfunction bailu(e) {\n  let basicScaling = basic(e, 1.0, 1.1)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='healingMaxHpBuff' text='Healing max HP buff' />\n        <FormSwitch name='talentDmgReductionBuff' text='Talent dmg reduced' />\n        <FormSwitch name='e2UltHealingBuff' text='E2 ult heal buff' disabled={e < 2} />\n        <FormSlider name='e4SkillHealingDmgBuffStacks' text='E4 dmg buff stacks' min={0} max={3} disabled={e < 4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      healingMaxHpBuff: true,\n      talentDmgReductionBuff: true,\n      e2UltHealingBuff: true,\n      e4SkillHealingDmgBuffStacks: 0,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.HP_P] += (r.healingMaxHpBuff) ? 0.10 : 0\n      x[Stats.OHB] += (e >= 2 && r.e2UltHealingBuff) ? 0.15 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (r.talentDmgReductionBuff) ? (1 - 0.10) : 1\n      x.ALL_DMG_MULTI += (e >= 4) ? r.e4SkillHealingDmgBuffStacks * 0.10 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += 0\n      x.ULT_DMG += 0\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction asta(e) {\n  let ultSpdBuffValue = ult(e, 50, 52.8)\n  let talentStacksAtkBuff = talent(e, 0.14, 0.154)\n  let talentStacksDefBuff = 0.06\n  let skillExtraDmgHitsMax = (e >= 1) ? 5 : 4\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let skillScaling = skill(e, 0.50, 0.55)\n  let ultScaling = ult(e, 0, 0)\n  let dotScaling = basic(e, 0.50, 0.55)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='skillExtraDmgHits' text='Skill extra hits' min={0} max={skillExtraDmgHitsMax} />\n        <FormSlider name='talentBuffStacks' text='Talent ATK buff stacks' min={0} max={5} />\n        <FormSwitch name='ultSpdBuff' text='Ult SPD buff active' />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentBuffStacks: 5,\n      skillExtraDmgHits: skillExtraDmgHitsMax,\n      ultSpdBuff: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.talentBuffStacks) * talentStacksAtkBuff\n      x[Stats.DEF_P] += (r.talentBuffStacks) * talentStacksDefBuff\n      x[Stats.ERR] += (e >= 4 && r.talentBuffStacks >= 2) ? 0.15 : 0\n      x[Stats.SPD] += (r.ultSpdBuff) ? ultSpdBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.18\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += 0\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction arlan(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.40, 2.64)\n  let ultScaling = ult(e, 3.20, 3.456)\n\n  let talentMissingHpDmgBoostMax = talent(e, 0.72, 0.792)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='selfCurrentHpPercent' text='Self current HP%' min={0.01} max={1.0} percent />\n      </Flex>\n    ),\n    defaults: () => ({\n      selfCurrentHpPercent: 1.00,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x.ELEMENTAL_DMG += Math.min(talentMissingHpDmgBoostMax, 1 - r.selfCurrentHpPercent)\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.SKILL_BOOST += (e >= 1 && r.selfCurrentHpPercent <= 0.50) ? 0.10 : 0\n      x.ULT_BOOST += (e >= 6 && r.selfCurrentHpPercent <= 0.50) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction argenti(e) {\n  let talentMaxStacks = (e >= 4) ? 12 : 10\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let ultScaling = ult(e, 1.60, 1.728)\n  let ultEnhancedScaling = ult(e, 2.80, 3.024)\n  let ultEnhancedExtraHitScaling = ult(e, 0.95, 1.026)\n  let talentCrStackValue = talent(e, 0.025, 0.028)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultEnhanced' text='Enhanced ult' />\n        <FormSlider name='talentStacks' text='Talent stacks' min={0} max={talentMaxStacks} />\n        <FormSlider name='ultEnhancedExtraHits' text='Ult extra hits' min={0} max={6} />\n        <FormSwitch name='e2UltAtkBuff' text='E2 ult ATK buff' disabled={e < 2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultEnhanced: true,\n      talentStacks: talentMaxStacks,\n      ultEnhancedExtraHits: 6,\n      e2UltAtkBuff: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Skills\n      x[Stats.CR] += (r.talentStacks) * talentCrStackValue\n\n      // Traces\n\n      // Eidolons\n      x[Stats.CD] += (e >= 1) ? (r.talentStacks) * 0.04 : 0\n      x[Stats.ATK_P] += (e >= 2 && r.e2UltAtkBuff) ? 0.40 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += (r.ultEnhanced) ? ultEnhancedScaling : ultScaling\n      x.ULT_SCALING += (r.ultEnhancedExtraHits) * ultEnhancedExtraHitScaling\n\n      // BOOST\n      x.ULT_BOOST += (request.enemyHpPercent <= 0.5) ? 0.15 : 0\n      x.ULT_DEF_PEN += (e >= 6) ? 0.30 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction jingliu(e) {\n  let talentCrBuff = talent(e, 0.50, 0.52)\n  let talentHpDrainAtkBuffMax = talent(e, 1.80, 1.98)\n  talentHpDrainAtkBuffMax += (e >= 4) ? 0.30 : 0\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let skillEnhancedScaling = skill(e, 2.50, 2.75)\n  let ultScaling = ult(e, 3.00, 3.24)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='talentEnhancedState' text='Enhanced state' />\n        <FormSlider name='talentHpDrainAtkBuff' text='HP drain ATK buff' min={0} max={talentHpDrainAtkBuffMax} percent />\n        <FormSwitch name='e1CdBuff' text='E1 ult active' disabled={e < 1} />\n        <FormSwitch name='e2SkillDmgBuff' text='E2 skill buff' disabled={e < 2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentEnhancedState: true,\n      talentHpDrainAtkBuff: talentHpDrainAtkBuffMax,\n      e1CdBuff: true,\n      e2SkillDmgBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Skills\n      x[Stats.CR] += (r.talentEnhancedState) ? talentCrBuff : 0\n      x[Stats.ATK_P] += (r.talentEnhancedState) ? r.talentHpDrainAtkBuff : 0\n\n      // Traces\n      x[Stats.RES] += (r.talentEnhancedState) ? 0.35 : 0\n      x.ULT_BOOST += (r.talentEnhancedState) ? 0.20 : 0\n\n      // Eidolons\n      x[Stats.CD] += (e >= 1 && r.e1CdBuff) ? 0.24 : 0\n      x[Stats.CD] += (e >= 6 && r.talentEnhancedState) ? 0.50 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n\n      x.SKILL_SCALING += (r.talentEnhancedState) ? skillEnhancedScaling : skillScaling\n      x.SKILL_SCALING += (e >= 1 && r.talentEnhancedState && request.enemyCount == 1) ? 1 : 0\n\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 1 && request.enemyCount == 1) ? 1 : 0\n\n      x.FUA_SCALING += 0\n\n      // BOOST\n      x.SKILL_BOOST += (e >= 2 && r.talentEnhancedState && r.e2SkillDmgBuff) ? 0.80 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction blackswan(e) {\n  let arcanaStackMultiplier = talent(e, 0.12, 0.132)\n  let stack3ArcanaBlastDmg = talent(e, 1.80, 1.98)\n  let epiphanyDmgTakenBoost = ult(e, 0.25, 0.27)\n  let defShredValue = skill(e, 0.208, 0.22)\n\n  let basicScaling = basic(e, 0.60, 0.66)\n  let skillScaling = skill(e, 0.90, 0.99)\n  let ultScaling = ult(e, 1.20, 1.30)\n  let dotScaling = talent(e, 2.40, 2.64)\n\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='epiphanyDebuff' text='Epiphany debuff' />\n        <FormSwitch name='defDecreaseDebuff' text='Def decrease debuff' />\n        <FormSlider name='arcanaStacks' text='Arcana stacks' min={0} max={50} />\n        <FormSwitch name='e1ResReduction' text='E1 RES reduction' disabled={e < 1} />\n      </Flex>\n    ),\n    defaults: () => ({\n      epiphanyDebuff: true,\n      defDecreaseDebuff: true,\n      arcanaStacks: 7,\n      e1ResReduction: true\n    }),\n    precomputeEffects: (request) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling + arcanaStackMultiplier * r.arcanaStacks\n      x.DOT_SCALING += (r.arcanaStacks >= 3) ? stack3ArcanaBlastDmg : 0\n\n      x.DOT_DEF_PEN += (r.arcanaStacks >= 7) ? 0.20 : 0\n      x.DEF_SHRED += (r.defDecreaseDebuff) ? defShredValue : 0\n      x.DOT_VULNERABILITY += (r.epiphanyDebuff) ? epiphanyDmgTakenBoost : 0\n\n      x.RES_PEN += (e >= 1 && r.e1ResReduction) ? 0.25 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.ELEMENTAL_DMG += Math.min(0.72, 0.60 * x[Stats.EHR])\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction sparkle(e) {\n  let skillCdBuffScaling = skill(e, 0.24, 0.264)\n  let skillCdBuffBase = skill(e, 0.45, 0.486)\n  let cipherTalentStackBoost = ult(e, 0.10, 0.108)\n  let talentBaseStackBoost = ult(e, 0.06, 0.066)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  let atkBoostByQuantumAllies = {\n    0: 0,\n    1: 0.05,\n    2: 0.15,\n    3: 0.30,\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillCdBuff' text='Skill CD buff' />\n        <FormSwitch name='cipherBuff' text='Cipher buff' />\n        <FormSlider name='talentStacks' text='Talent DMG stacks' min={0} max={3} />\n        <FormSlider name='quantumAllies' text='Quantum allies' min={0} max={3} />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillCdBuff: true,\n      cipherBuff: true,\n      talentStacks: 3,\n      quantumAllies: 3,\n    }),\n    precomputeEffects: (request) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      x[Stats.ATK_P] += 0.15 + (atkBoostByQuantumAllies[r.quantumAllies] || 0)\n      x[Stats.ATK_P] += (e >= 1 && r.cipherBuff) ? 0.40 : 0\n\n      x.ELEMENTAL_DMG += (r.cipherBuff) ? r.talentStacks * (talentBaseStackBoost + cipherTalentStackBoost) : r.talentStacks * talentBaseStackBoost\n      x.DEF_SHRED += (e >= 2) ? 0.08 * r.talentStacks : 0\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.CD] += (r.skillCdBuff) ? skillCdBuffBase + skillCdBuffScaling * x[Stats.CD] : 0\n      x[Stats.CD] += (e >= 6 && r.skillCdBuff) ? 0.30 * x[Stats.CD] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction misha(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let ultStackScaling = ult(e, 0.60, 0.65)\n  ultStackScaling += (e >= 4 ? 0.06 : 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='ultHitsOnTarget' text='Ult hits on target' min={1} max={10} />\n        <FormSwitch name='enemyFrozen' text='Enemy frozen' />\n        <FormSwitch name='e2DefReduction' text='E2 def reduction' disabled={e < 2} />\n        <FormSwitch name='e6UltDmgBoost' text='E6 ult dmg boost' disabled={e < 6} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultHitsOnTarget: 10,\n      enemyFrozen: true,\n      e2DefReduction: true,\n      e6UltDmgBoost: true,\n    }),\n    precomputeEffects: (request) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      x[Stats.CD] += (r.enemyFrozen) ? 0.30 : 0\n\n      x.DEF_SHRED += (e >= 2 && r.e2DefReduction) ? 0.16 : 0\n      x.ELEMENTAL_DMG += (e >= 6 && r.e6UltDmgBoost) ? 0.30 : 0\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultStackScaling * (r.ultHitsOnTarget)\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction skill(e, value1, value2) {\n  return e >= 3 ? value2 : value1\n}\n\nlet talent = skill\n\nfunction ult(e, value1, value2) {\n  return e >= 5 ? value2 : value1\n}\nlet basic = ult\n\nfunction p4(set) {\n  return set >> 2\n}\n\nexport const CharacterConditionals = {\n  get: (request) => {\n    let characterFn = characterOptionMapping[request.characterId]\n    return characterFn(request.characterEidolon)\n  },\n  getDisplayForCharacter: (id, eidolon) => {\n    // console.log('getDisplayForCharacter', id)\n    if (!id || !characterOptionMapping[id]) {\n      return (\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Character passives</HeaderText>\n          <TooltipImage type={Hint.characterPassives()} />\n        </Flex>\n      )\n    }\n\n    let characterFn = characterOptionMapping[id]\n    let display = characterFn(eidolon).display()\n\n    return (\n      <ConfigProvider\n        theme={{\n          token: {\n            opacityLoading: 0.15\n          }\n        }}\n      >\n        <Flex vertical gap={5}>\n          <Flex justify='space-between' align='center'>\n            <HeaderText>Character passives</HeaderText>\n            <TooltipImage type={Hint.characterPassives()} />\n          </Flex>\n          {display}\n        </Flex>\n      </ConfigProvider>\n    )\n  },\n}","import { Constants } from \"./constants.ts\";\nimport DB from \"./db\";\nimport { CharacterStats } from \"./characterStats\";\nimport { Utils } from \"./utils\";\n\nlet maxedMainStats\n\nexport const StatCalculator = {\n  getMaxedMainStat: (relic) => {\n    if (!maxedMainStats) {\n      maxedMainStats = {\n        [Constants.Stats.SPD]: [7.613, 11.419, 16.426, 25.032],\n        [Constants.Stats.HP]: [139.991, 281.111, 469.647, 705.600],\n        [Constants.Stats.ATK]: [69.996, 140.556, 234.824, 352.800],\n        [Constants.Stats.HP_P]: [8.571, 17.211, 28.754, 43.200],\n        [Constants.Stats.ATK_P]: [8.571, 17.211, 28.754, 43.200],\n        [Constants.Stats.DEF_P]: [10.714, 21.514, 35.942, 54.000],\n        [Constants.Stats.CR]: [6.428, 12.908, 21.565, 32.400],\n        [Constants.Stats.CD]: [12.856, 25.817, 43.130, 64.800],\n        [Constants.Stats.OHB]: [6.856, 13.769, 23.003, 34.561],\n        [Constants.Stats.EHR]: [8.571, 17.211, 28.754, 43.200],\n        [Constants.Stats.BE]: [12.856, 25.817, 43.130, 64.800],\n        [Constants.Stats.ERR]: [3.857, 7.745, 12.939, 19.439],\n        [Constants.Stats.Physical_DMG]: [7.714, 15.490, 25.878, 38.880],\n        [Constants.Stats.Fire_DMG]: [7.714, 15.490, 25.878, 38.880],\n        [Constants.Stats.Ice_DMG]: [7.714, 15.490, 25.878, 38.880],\n        [Constants.Stats.Lightning_DMG]: [7.714, 15.490, 25.878, 38.880],\n        [Constants.Stats.Wind_DMG]: [7.714, 15.490, 25.878, 38.880],\n        [Constants.Stats.Quantum_DMG]: [7.714, 15.490, 25.878, 38.880],\n        [Constants.Stats.Imaginary_DMG]: [7.714, 15.490, 25.878, 38.880],\n      }\n    }\n\n    return maxedMainStats[relic.main.stat][relic.grade - 2]\n  },\n\n  calculateCharacterWithRelics(character, relics) {\n    if (!character) return console.log('No character selected');\n\n    let form = character.form\n    let characterMetadata = DB.getMetadata().characters[character.id]\n    let characterLevel = form.characterLevel\n\n    let lightConeMetadata;\n    let lightConeLevel;\n    let lightConeSuperimposition;\n    let lightConeStats;\n    let superimpositionStats;\n\n    if (form.lightCone && form.lightCone != '0') {\n      lightConeMetadata = DB.getMetadata().lightCones[form.lightCone]\n      lightConeLevel = form.lightConeLevel\n      lightConeSuperimposition = form.lightConeSuperimposition\n      lightConeStats = lightConeMetadata.promotions[lightConeLevel]\n      superimpositionStats = lightConeMetadata.superimpositions[lightConeSuperimposition]\n    } else {\n      console.log('No light cone selected');\n      lightConeLevel = 0\n      lightConeSuperimposition = 0\n      lightConeStats = {}\n      superimpositionStats = {}\n    }\n\n    let traceStats = characterMetadata.traces\n    let characterStats = characterMetadata.promotions[characterLevel]\n\n    let element = characterMetadata.element\n    let elementalMultipliers = [\n      element == 'Physical' ? 1 : 0,\n      element == 'Fire' ? 1 : 0,\n      element == 'Ice' ? 1 : 0,\n      element == 'Thunder' ? 1 : 0,\n      element == 'Wind' ? 1 : 0,\n      element == 'Quantum' ? 1 : 0,\n      element == 'Imaginary' ? 1 : 0,\n    ]\n\n    let baseStats = {\n      base: {\n        ...CharacterStats.getZeroes(),\n        ...characterStats\n      },\n      traces: {\n        ...CharacterStats.getZeroes(),\n        ...traceStats\n      },\n      lightCone: {\n        ...CharacterStats.getZeroes(),\n        ...lightConeStats,\n        ...superimpositionStats\n      }\n    }\n\n    let lc = baseStats.lightCone\n    let base = baseStats.base\n    let trace = baseStats.traces\n\n    let { relicSets, ornamentSets } = Utils.relicsToSetArrays(relics);\n\n    console.log(characterMetadata, lightConeMetadata)\n    console.log(baseStats)\n    console.log(relics)\n\n    function sum(relics, stat) {\n      let total = 0\n      for (let relic of relics) {\n        if (!relic) continue\n        total += relic.augmentedStats[stat] || 0\n\n        if (stat == relic.augmentedStats.mainStat) {\n          total += relic.augmentedStats.mainValue\n        }\n      }\n\n      return total\n    }\n\n    let crSum = sum(relics, Constants.Stats.CR)\n    let cdSum = sum(relics, Constants.Stats.CD)\n\n    let hero = {\n      [Constants.Stats.HP]: (base[Constants.Stats.HP] + lc[Constants.Stats.HP]) * (1 + 0.12 * Math.min(1, ornamentSets[1] >> 1) + 0.12 * Math.min(1, relicSets[12] >> 1) + sum(relics, Constants.Stats.HP_P) + trace[Constants.Stats.HP_P] + lc[Constants.Stats.HP_P]) + sum(relics, Constants.Stats.HP),\n      [Constants.Stats.ATK]: (base[Constants.Stats.ATK] + lc[Constants.Stats.ATK]) * (1 + 0.12 * Math.min(1, ornamentSets[0] >> 1) + 0.12 * Math.min(1, ornamentSets[10] >> 1) + 0.12 * Math.min(1, relicSets[1] >> 1) + 0.12 * Math.min(1, relicSets[15] >> 1) + sum(relics, Constants.Stats.ATK_P) + trace[Constants.Stats.ATK_P] + lc[Constants.Stats.ATK_P]) + sum(relics, Constants.Stats.ATK),\n      [Constants.Stats.DEF]: (base[Constants.Stats.DEF] + lc[Constants.Stats.DEF]) * (1 + 0.15 * Math.min(1, ornamentSets[3] >> 1) + 0.15 * Math.min(1, relicSets[2] >> 1) + sum(relics, Constants.Stats.DEF_P) + trace[Constants.Stats.DEF_P] + lc[Constants.Stats.DEF_P]) + sum(relics, Constants.Stats.DEF),\n      [Constants.Stats.SPD]: (base[Constants.Stats.SPD] + lc[Constants.Stats.SPD]) * (1 + 0.06 * Math.min(1, relicSets[13] >> 1) + 0.06 * (relicSets[1] >> 2) + sum(relics, Constants.Stats.SPD_P) + trace[Constants.Stats.SPD_P]) + sum(relics, Constants.Stats.SPD) + trace[Constants.Stats.SPD],\n      [Constants.Stats.CR]: 0.08 * Math.min(1, ornamentSets[5] >> 1) + 0.08 * Math.min(1, ornamentSets[8] >> 1) + (base[Constants.Stats.CR] + lc[Constants.Stats.CR] + crSum + trace[Constants.Stats.CR]),\n      [Constants.Stats.CD]: 0.16 * Math.min(1, ornamentSets[4] >> 1) + (base[Constants.Stats.CD] + lc[Constants.Stats.CD] + cdSum + trace[Constants.Stats.CD]),\n      [Constants.Stats.EHR]: 0.1 * Math.min(1, ornamentSets[2] >> 1) + (base[Constants.Stats.EHR] + lc[Constants.Stats.EHR] + sum(relics, Constants.Stats.EHR) + trace[Constants.Stats.EHR]),\n      [Constants.Stats.RES]: 0.1 * Math.min(1, ornamentSets[9] >> 1) + (base[Constants.Stats.RES] + lc[Constants.Stats.RES] + sum(relics, Constants.Stats.RES) + trace[Constants.Stats.RES]),\n      [Constants.Stats.BE]: 0.16 * Math.min(1, ornamentSets[6] >> 1) + 0.16 * Math.min(1, relicSets[10] >> 1) + 0.16 * (relicSets[10] >> 2) + (base[Constants.Stats.BE] + lc[Constants.Stats.BE] + sum(relics, Constants.Stats.BE) + trace[Constants.Stats.BE]),\n      [Constants.Stats.ERR]: 0.05 * Math.min(1, ornamentSets[7] >> 1) + 0.05 * Math.min(1, ornamentSets[11] >> 1) + (base[Constants.Stats.ERR] + lc[Constants.Stats.ERR] + sum(relics, Constants.Stats.ERR) + trace[Constants.Stats.ERR]),\n      [Constants.Stats.OHB]: 0.1 * Math.min(1, relicSets[0] >> 1) + (base[Constants.Stats.OHB] + lc[Constants.Stats.OHB] + sum(relics, Constants.Stats.OHB) + trace[Constants.Stats.OHB]),\n      [Constants.Stats.Physical_DMG]: 0.1 * Math.min(1, relicSets[4] >> 1) + (base[Constants.Stats.Physical_DMG] + lc[Constants.Stats.Physical_DMG] + sum(relics, Constants.Stats.Physical_DMG) + trace[Constants.Stats.Physical_DMG]),\n      [Constants.Stats.Fire_DMG]: 0.1 * Math.min(1, relicSets[6] >> 1) + (base[Constants.Stats.Fire_DMG] + lc[Constants.Stats.Fire_DMG] + sum(relics, Constants.Stats.Fire_DMG) + trace[Constants.Stats.Fire_DMG]),\n      [Constants.Stats.Ice_DMG]: 0.1 * Math.min(1, relicSets[3] >> 1) + (base[Constants.Stats.Ice_DMG] + lc[Constants.Stats.Ice_DMG] + sum(relics, Constants.Stats.Ice_DMG) + trace[Constants.Stats.Ice_DMG]),\n      [Constants.Stats.Lightning_DMG]: 0.1 * Math.min(1, relicSets[8] >> 1) + (base[Constants.Stats.Lightning_DMG] + lc[Constants.Stats.Lightning_DMG] + sum(relics, Constants.Stats.Lightning_DMG) + trace[Constants.Stats.Lightning_DMG]),\n      [Constants.Stats.Wind_DMG]: 0.1 * Math.min(1, relicSets[9] >> 1) + (base[Constants.Stats.Wind_DMG] + lc[Constants.Stats.Wind_DMG] + sum(relics, Constants.Stats.Wind_DMG) + trace[Constants.Stats.Wind_DMG]),\n      [Constants.Stats.Quantum_DMG]: 0.1 * Math.min(1, relicSets[7] >> 1) + (base[Constants.Stats.Quantum_DMG] + lc[Constants.Stats.Quantum_DMG] + sum(relics, Constants.Stats.Quantum_DMG) + trace[Constants.Stats.Quantum_DMG]),\n      [Constants.Stats.Imaginary_DMG]: 0.1 * Math.min(1, relicSets[11] >> 1) + (base[Constants.Stats.Imaginary_DMG] + lc[Constants.Stats.Imaginary_DMG] + sum(relics, Constants.Stats.Imaginary_DMG) + trace[Constants.Stats.Imaginary_DMG])\n    }\n\n    let elementalDmg = 0\n    if (elementalMultipliers[0]) elementalDmg = 0.1 * Math.min(1, relicSets[4] >> 1) + (base[Constants.Stats.Physical_DMG] + lc[Constants.Stats.Physical_DMG] + sum(relics, Constants.Stats.Physical_DMG) + trace[Constants.Stats.Physical_DMG])\n    if (elementalMultipliers[1]) elementalDmg = 0.1 * Math.min(1, relicSets[6] >> 1) + (base[Constants.Stats.Fire_DMG] + lc[Constants.Stats.Fire_DMG] + sum(relics, Constants.Stats.Fire_DMG) + trace[Constants.Stats.Fire_DMG])\n    if (elementalMultipliers[2]) elementalDmg = 0.1 * Math.min(1, relicSets[3] >> 1) + (base[Constants.Stats.Ice_DMG] + lc[Constants.Stats.Ice_DMG] + sum(relics, Constants.Stats.Ice_DMG) + trace[Constants.Stats.Ice_DMG])\n    if (elementalMultipliers[3]) elementalDmg = 0.1 * Math.min(1, relicSets[8] >> 1) + (base[Constants.Stats.Lightning_DMG] + lc[Constants.Stats.Lightning_DMG] + sum(relics, Constants.Stats.Lightning_DMG) + trace[Constants.Stats.Lightning_DMG])\n    if (elementalMultipliers[4]) elementalDmg = 0.1 * Math.min(1, relicSets[9] >> 1) + (base[Constants.Stats.Wind_DMG] + lc[Constants.Stats.Wind_DMG] + sum(relics, Constants.Stats.Wind_DMG) + trace[Constants.Stats.Wind_DMG])\n    if (elementalMultipliers[5]) elementalDmg = 0.1 * Math.min(1, relicSets[7] >> 1) + (base[Constants.Stats.Quantum_DMG] + lc[Constants.Stats.Quantum_DMG] + sum(relics, Constants.Stats.Quantum_DMG) + trace[Constants.Stats.Quantum_DMG])\n    if (elementalMultipliers[6]) elementalDmg = 0.1 * Math.min(1, relicSets[11] >> 1) + (base[Constants.Stats.Imaginary_DMG] + lc[Constants.Stats.Imaginary_DMG] + sum(relics, Constants.Stats.Imaginary_DMG) + trace[Constants.Stats.Imaginary_DMG])\n\n    // let cappedCrit = Math.min(hero[Constants.Stats.CR] + form.buffCr, 1)\n    let ehp = hero[Constants.Stats.HP] / (1 - hero[Constants.Stats.DEF] / (hero[Constants.Stats.DEF] + 200 + 10 * 80))\n    let cv = 100 * (crSum * 2 + cdSum)\n\n    hero.ED = elementalDmg\n    hero.CV = cv\n    hero.EHP = ehp\n\n    hero.WEIGHT = 0\n    hero.BASIC = 0\n    hero.SKILL = 0\n    hero.ULT = 0\n    hero.FUA = 0\n    hero.DOT = 0\n    hero.xATK = 0\n    hero.xDEF = 0\n    hero.xHP = 0\n    hero.xSPD = 0\n    hero.xCR = 0\n    hero.xCD = 0\n    hero.xEHR = 0\n    hero.xRES = 0\n    hero.xBE = 0\n    hero.xERR = 0\n    hero.xOHB = 0\n    hero.xELEMENTAL_DMG = 0\n\n\n    return hero;\n  },\n\n  calculate(character) {\n    if (!character) return console.log('No character selected');\n\n    const relicsById = window.store.getState().relicsById\n    let relics = Object.values(character.equipped).map(x => relicsById[x])\n\n    return StatCalculator.calculateCharacterWithRelics(character, relics)\n  },\n}","import { inPlaceSort } from 'fast-sort';\nimport DB from './db';\nimport { Message } from \"./message\";\nimport { SaveState } from \"./saveState\";\nimport { Constants } from \"./constants.ts\";\nimport { Utils } from \"./utils\";\nimport { LightConeConditionals } from \"./lightConeConditionals\";\nimport { CharacterConditionals } from \"./characterConditionals\";\nimport { CharacterStats } from \"./characterStats\";\nimport { StatCalculator } from \"./statCalculator\";\n\nlet relics\nlet consts\nlet aggs\nlet rows = []\nlet filteredIndices\nlet filterModel\nlet sortModel\n\nlet columnsToAggregate\nlet columnsToAggregateMap\n\nexport const OptimizerTabController = {\n  setMetadata: (inputConsts, inputRelics) => {\n    consts = inputConsts\n    relics = inputRelics\n  },\n\n  getMetadata: () => {\n    return {\n      consts: consts,\n      relics: relics,\n    }\n  },\n\n  setAggs: (x) => {\n    aggs = x\n  },\n\n  getAggs: () => {\n    return aggs\n  },\n\n  setRows: (x) => {\n    rows = x\n  },\n\n  setTopRow: (x) => {\n    // delete x.id\n    window.optimizerGrid.current.api.updateGridOptions({ pinnedTopRowData: [x] })\n  },\n\n  getRows: () => {\n    return rows\n  },\n\n  equipClicked: () => {\n    console.log('Equip clicked');\n    let formValues = OptimizerTabController.getForm()\n    let characterId = formValues.characterId\n\n    if (!characterId) {\n      return;\n    }\n    DB.addFromForm(formValues)\n\n    let selectedNodes = window.optimizerGrid.current.api.getSelectedNodes()\n    if (!selectedNodes || selectedNodes.length == 0) {\n      return\n    }\n\n    let row = selectedNodes[0].data\n    let build = OptimizerTabController.calculateRelicsFromId(row.id)\n\n    DB.equipRelicIdsToCharacter(Object.values(build), characterId)\n    Message.success('Equipped relics')\n    OptimizerTabController.setTopRow(row)\n    window.setOptimizerBuild(build);\n    window.relicsGrid.current.api.redrawRows()\n    SaveState.save()\n  },\n\n  cellClicked: (event) => {\n    let data = event.data\n\n    if (event.rowPinned == \"top\") {\n      console.log('Top row clicked', event.data)\n      let fieldValues = OptimizerTabController.getForm()\n      if (event.data && fieldValues.characterId) {\n        let character = DB.getCharacterById(fieldValues.characterId);\n\n        if (character) {\n          window.setOptimizerBuild(character.equipped);\n        }\n      }\n      return\n    }\n\n    console.log('cellClicked', event);\n\n    let build = OptimizerTabController.calculateRelicsFromId(data.id)\n    console.log('build', build)\n    window.setOptimizerBuild(build);\n  },\n\n  getColumnsToAggregate: (map) => {\n    if (!columnsToAggregate) {\n      columnsToAggregateMap = {\n        [Constants.Stats.HP]: true,\n        [Constants.Stats.ATK]: true,\n        [Constants.Stats.DEF]: true,\n        [Constants.Stats.SPD]: true,\n        [Constants.Stats.CR]: true,\n        [Constants.Stats.CD]: true,\n        [Constants.Stats.EHR]: true,\n        [Constants.Stats.RES]: true,\n        [Constants.Stats.BE]: true,\n        [Constants.Stats.ERR]: true,\n        [Constants.Stats.OHB]: true,\n        // For custom ones remember to set the min/max in aggregate()\n        'ED': true,\n        'CV': true,\n        'WEIGHT': true,\n        'EHP': true,\n\n        'BASIC': true,\n        'SKILL': true,\n        'ULT': true,\n        'FUA': true,\n        'DOT': true,\n\n        'xATK': true,\n        'xDEF': true,\n        'xHP': true,\n        'xSPD': true,\n        'xCR': true,\n        'xCD': true,\n        'xEHR': true,\n        'xRES': true,\n        'xBE': true,\n        'xERR': true,\n        'xOHB': true,\n        'xELEMENTAL_DMG': true,\n\n      }\n      columnsToAggregate = Object.keys(columnsToAggregateMap)\n    }\n\n    return map ? columnsToAggregateMap : columnsToAggregate\n  },\n\n  resetDataSource: () => {\n    window.optimizerGrid.current.api.updateGridOptions({ datasource: OptimizerTabController.getDataSource(sortModel, filterModel) })\n  },\n\n  getDataSource: (newSortModel, newFilterModel) => {\n    sortModel = newSortModel\n    filterModel = newFilterModel\n    return {\n      getRows: (params) => {\n        console.log(params);\n        aggs = undefined\n        window.optimizerGrid.current.api.showLoadingOverlay()\n\n        // Give it time to show the loading page before we block\n        Utils.sleep(100).then(() => {\n          if (params.sortModel.length > 0 && params.sortModel[0] != sortModel) {\n            sortModel = params.sortModel[0]\n            sort()\n          }\n\n          if (filterModel) {\n            filter(filterModel)\n            let indicesSubArray = filteredIndices.slice(params.startRow, params.endRow);\n            let subArray = []\n            for (let index of indicesSubArray) {\n              subArray.push(rows[index])\n            }\n            aggregate(subArray)\n            params.successCallback(subArray, filteredIndices.length)\n          } else {\n            let subArray = rows.slice(params.startRow, params.endRow);\n            aggregate(subArray)\n\n            params.successCallback(subArray, rows.length)\n          }\n          window.optimizerGrid.current.api.hideOverlay()\n          OptimizerTabController.redrawRows()\n        })\n      },\n    };\n  },\n\n  calculateRelicsFromId: (id) => {\n    let lSize = consts.lSize\n    let pSize = consts.pSize\n    let fSize = consts.fSize\n    let bSize = consts.bSize\n    let gSize = consts.gSize\n    let hSize = consts.hSize\n\n    let x = id\n    let l = (x % lSize);\n    let p = (((x - l) / lSize) % pSize);\n    let f = (((x - p * lSize - l) / (lSize * pSize)) % fSize);\n    let b = (((x - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize)) % bSize);\n    let g = (((x - b * fSize * pSize * lSize - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize * bSize)) % gSize);\n    let h = (((x - g * bSize * fSize * pSize * lSize - b * fSize * pSize * lSize - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize * bSize * gSize)) % hSize);\n\n    let characterId = OptimizerTabController.getForm().characterId\n    relics.Head[h].optimizerCharacterId = characterId\n    relics.Hands[g].optimizerCharacterId = characterId\n    relics.Body[b].optimizerCharacterId = characterId\n    relics.Feet[f].optimizerCharacterId = characterId\n    relics.PlanarSphere[p].optimizerCharacterId = characterId\n    relics.LinkRope[l].optimizerCharacterId = characterId\n\n    return {\n      Head: relics.Head[h].id,\n      Hands: relics.Hands[g].id,\n      Body: relics.Body[b].id,\n      Feet: relics.Feet[f].id,\n      PlanarSphere: relics.PlanarSphere[p].id,\n      LinkRope: relics.LinkRope[l].id\n    };\n  },\n\n  getForm: () => {\n    let form = window.optimizerForm.getFieldsValue();\n    return OptimizerTabController.fixForm(form);\n  },\n\n  getDisplayFormValues: (form) => {\n    let newForm = JSON.parse(JSON.stringify(form))\n\n    newForm.maxHp = unsetMax(form.maxHp)\n    newForm.minHp = unsetMin(form.minHp)\n    newForm.maxAtk = unsetMax(form.maxAtk)\n    newForm.minAtk = unsetMin(form.minAtk)\n    newForm.maxDef = unsetMax(form.maxDef)\n    newForm.minDef = unsetMin(form.minDef)\n    newForm.maxSpd = unsetMax(form.maxSpd)\n    newForm.minSpd = unsetMin(form.minSpd)\n    newForm.maxCr = unsetMax(form.maxCr, true)\n    newForm.minCr = unsetMin(form.minCr, true)\n    newForm.maxCd = unsetMax(form.maxCd, true)\n    newForm.minCd = unsetMin(form.minCd, true)\n    newForm.maxEhr = unsetMax(form.maxEhr, true)\n    newForm.minEhr = unsetMin(form.minEhr, true)\n    newForm.maxRes = unsetMax(form.maxRes, true)\n    newForm.minRes = unsetMin(form.minRes, true)\n    newForm.maxBe = unsetMax(form.maxBe, true)\n    newForm.minBe = unsetMin(form.minBe, true)\n    newForm.maxCv = unsetMax(form.maxCv)\n    newForm.minCv = unsetMin(form.minCv)\n    newForm.maxWeight = unsetMax(form.maxWeight)\n    newForm.minWeight = unsetMin(form.minWeight)\n    newForm.maxEhp = unsetMax(form.maxEhp)\n    newForm.minEhp = unsetMin(form.minEhp)\n\n    newForm.maxBasic = unsetMax(form.maxBasic)\n    newForm.minBasic = unsetMin(form.minBasic)\n    newForm.maxSkill = unsetMax(form.maxSkill)\n    newForm.minSkill = unsetMin(form.minSkill)\n    newForm.maxUlt = unsetMax(form.maxUlt)\n    newForm.minUlt = unsetMin(form.minUlt)\n    newForm.maxFua = unsetMax(form.maxFua)\n    newForm.minFua = unsetMin(form.minFua)\n    newForm.maxDot = unsetMax(form.maxDot)\n    newForm.minDot = unsetMin(form.minDot)\n\n    newForm.buffAtk = unsetMin(form.buffAtk)\n    newForm.buffAtkP = unsetMin(form.buffAtkP, true)\n    newForm.buffCr = unsetMin(form.buffCr, true)\n    newForm.buffCd = unsetMin(form.buffCd, true)\n    newForm.buffSpd = unsetMin(form.buffSpd)\n    newForm.buffSpdP = unsetMin(form.buffSpdP, true)\n    newForm.buffBe = unsetMin(form.buffBe, true)\n    newForm.buffDmgBoost = unsetMin(form.buffDmgBoost, true)\n    newForm.buffDefShred = unsetMin(form.buffDefShred, true)\n    newForm.buffResPen = unsetMin(form.buffResPen, true)\n    if (!newForm.setConditionals) {\n      newForm.setConditionals = {\n        [Constants.Sets.PasserbyOfWanderingCloud]: [undefined, true],\n        [Constants.Sets.MusketeerOfWildWheat]: [undefined, true],\n        [Constants.Sets.KnightOfPurityPalace]: [undefined, true],\n        [Constants.Sets.HunterOfGlacialForest]: [undefined, true],\n        [Constants.Sets.ChampionOfStreetwiseBoxing]: [undefined, 5],\n        [Constants.Sets.GuardOfWutheringSnow]: [undefined, true],\n        [Constants.Sets.FiresmithOfLavaForging]: [undefined, true],\n        [Constants.Sets.GeniusOfBrilliantStars]: [undefined, true],\n        [Constants.Sets.BandOfSizzlingThunder]: [undefined, true],\n        [Constants.Sets.EagleOfTwilightLine]: [undefined, true],\n        [Constants.Sets.ThiefOfShootingMeteor]: [undefined, true],\n        [Constants.Sets.WastelanderOfBanditryDesert]: [undefined, 0],\n        [Constants.Sets.LongevousDisciple]: [undefined, 2],\n        [Constants.Sets.MessengerTraversingHackerspace]: [undefined, true],\n        [Constants.Sets.TheAshblazingGrandDuke]: [undefined, 0],\n        [Constants.Sets.PrisonerInDeepConfinement]: [undefined, 0],\n        [Constants.Sets.SpaceSealingStation]: [undefined, true],\n        [Constants.Sets.FleetOfTheAgeless]: [undefined, true],\n        [Constants.Sets.PanCosmicCommercialEnterprise]: [undefined, true],\n        [Constants.Sets.BelobogOfTheArchitects]: [undefined, true],\n        [Constants.Sets.CelestialDifferentiator]: [undefined, false],\n        [Constants.Sets.InertSalsotto]: [undefined, true],\n        [Constants.Sets.TaliaKingdomOfBanditry]: [undefined, true],\n        [Constants.Sets.SprightlyVonwacq]: [undefined, true],\n        [Constants.Sets.RutilantArena]: [undefined, true],\n        [Constants.Sets.BrokenKeel]: [undefined, true],\n        [Constants.Sets.FirmamentFrontlineGlamoth]: [undefined, true],\n        [Constants.Sets.PenaconyLandOfTheDreams]: [undefined, true],\n      }\n    }\n\n    if (!form.enemyLevel) {\n      newForm.enemyLevel = 95\n      newForm.enemyCount = 1\n      newForm.enemyResistance = 0.2\n      newForm.enemyHpPercent = 1.0\n      newForm.enemyElementalWeak = true\n      newForm.enemyWeaknessBroken = false\n      newForm.enemyElementalResistance = false\n    }\n\n    let defaultOptions = CharacterConditionals.get(form).defaults()\n    if (!newForm.characterConditionals) newForm.characterConditionals = {}\n    for (let option of Object.keys(defaultOptions)) {\n      if (newForm.characterConditionals[option] == undefined) {\n        newForm.characterConditionals[option] = defaultOptions[option]\n      }\n    }\n\n    let defaultLcOptions = LightConeConditionals.get(form).defaults()\n    if (!newForm.lightConeConditionals) newForm.lightConeConditionals = {}\n    for (let option of Object.keys(defaultLcOptions)) {\n      if (newForm.lightConeConditionals[option] == undefined) {\n        newForm.lightConeConditionals[option] = defaultLcOptions[option]\n      }\n    }\n\n    if (!newForm.statDisplay) {\n      newForm.statDisplay = 'base'\n    }\n\n    if (![1, 3, 5].includes(newForm.enemyCount)) {\n      newForm.enemyCount = 1\n    }\n\n    if (!newForm.weights) {\n      newForm.weights = {\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF_P]: 1,\n        [Constants.Stats.SPD_P]: 1,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.DEF]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 1,\n        [Constants.Stats.BE]: 1,\n        topPercent: 100\n      }\n    }\n\n    console.log('Form update', form, newForm, defaultOptions)\n    return newForm\n  },\n\n  validateForm: (x) => {\n    console.log('validate', x)\n    if (!x.lightCone || !x.lightConeLevel || !x.lightConeSuperimposition) {\n      Message.error('Missing light cone fields')\n      console.log('Missing light cone')\n      return false;\n    }\n\n    if (!x.characterId || !x.characterLevel || x.characterEidolon == undefined) {\n      Message.error('Missing character fields')\n      console.log('Missing character')\n      return false;\n    }\n\n    if (!x.weights || !x.weights.topPercent) {\n      Message.error('Substat weight filter should have a Top % value greater than 0%. Make sure to set the Top % value with your substat weights.', 10)\n      console.log('Top percent')\n      return false;\n    }\n\n    if (x.weights.topPercent > 0 && Object.values(Constants.Stats).map(stat => x.weights[stat]).filter(x => !!x).length == 0) {\n      Message.error('Top % of weighted relics was selected but all weights are set to 0. Make sure to set the substat weights for your character.', 10)\n      console.log('Top percent')\n      return false;\n    }\n    return true\n  },\n\n  fixForm: (x) => {\n    let MAX_INT = Constants.MAX_INT;\n\n    x.maxHp = fixValue(x.maxHp, MAX_INT)\n    x.minHp = fixValue(x.minHp, 0)\n    x.maxAtk = fixValue(x.maxAtk, MAX_INT)\n    x.minAtk = fixValue(x.minAtk, 0)\n    x.maxDef = fixValue(x.maxDef, MAX_INT)\n    x.minDef = fixValue(x.minDef, 0)\n    x.maxSpd = fixValue(x.maxSpd, MAX_INT)\n    x.minSpd = fixValue(x.minSpd, 0)\n    x.maxCr = fixValue(x.maxCr, MAX_INT, 100)\n    x.minCr = fixValue(x.minCr, 0, 100)\n    x.maxCd = fixValue(x.maxCd, MAX_INT, 100)\n    x.minCd = fixValue(x.minCd, 0, 100)\n    x.maxEhr = fixValue(x.maxEhr, MAX_INT, 100)\n    x.minEhr = fixValue(x.minEhr, 0, 100)\n    x.maxRes = fixValue(x.maxRes, MAX_INT, 100)\n    x.minRes = fixValue(x.minRes, 0, 100)\n    x.maxBe = fixValue(x.maxBe, MAX_INT, 100)\n    x.minBe = fixValue(x.minBe, 0, 100)\n\n    x.maxCv = fixValue(x.maxCv, MAX_INT)\n    x.minCv = fixValue(x.minCv, 0)\n    x.maxWeight = fixValue(x.maxWeight, MAX_INT)\n    x.minWeight = fixValue(x.minWeight, 0)\n    x.maxEhp = fixValue(x.maxEhp, MAX_INT)\n    x.minEhp = fixValue(x.minEhp, 0)\n\n    x.maxBasic = fixValue(x.maxBasic, MAX_INT)\n    x.minBasic = fixValue(x.minBasic, 0)\n    x.maxSkill = fixValue(x.maxSkill, MAX_INT)\n    x.minSkill = fixValue(x.minSkill, 0)\n    x.maxUlt = fixValue(x.maxUlt, MAX_INT)\n    x.minUlt = fixValue(x.minUlt, 0)\n    x.maxFua = fixValue(x.maxFua, MAX_INT)\n    x.minFua = fixValue(x.minFua, 0)\n    x.maxDot = fixValue(x.maxDot, MAX_INT)\n    x.minDot = fixValue(x.minDot, 0)\n\n    x.buffAtk = fixValue(x.buffAtk, 0)\n    x.buffAtkP = fixValue(x.buffAtkP, 0, 100)\n    x.buffCr = fixValue(x.buffCr, 0, 100)\n    x.buffCd = fixValue(x.buffCd, 0, 100)\n    x.buffSpd = fixValue(x.buffSpd, 0)\n    x.buffSpdP = fixValue(x.buffSpdP, 0, 100)\n    x.buffBe = fixValue(x.buffBe, 0, 100)\n    x.buffDmgBoost = fixValue(x.buffDmgBoost, 0, 100)\n    x.buffDefShred = fixValue(x.buffDefShred, 0, 100)\n    x.buffResPen = fixValue(x.buffResPen, 0, 100)\n\n    x.mainHead = x.mainHead || []\n    x.mainHands = x.mainHands || []\n    x.mainBody = x.mainBody || []\n    x.mainFeet = x.mainFeet || []\n    x.mainPlanarSphere = x.mainPlanarSphere || []\n    x.mainLinkRope = x.mainLinkRope || []\n\n    return x\n  },\n\n  updateFilters: () => {\n    if (window.optimizerForm) {\n      let fieldValues = OptimizerTabController.getForm()\n      window.onOptimizerFormValuesChange({}, fieldValues);\n    }\n  },\n\n  resetFilters: () => {\n    let fieldValues = OptimizerTabController.getForm()\n    let newForm = {\n      \"characterEidolon\": fieldValues.characterEidolon,\n      \"characterId\": fieldValues.characterId,\n      \"characterLevel\": fieldValues.characterLevel,\n      \"enhance\": 15,\n      \"grade\": 5,\n      \"includeEquippedRelics\": true,\n      \"keepCurrentRelics\": false,\n      \"lightCone\": fieldValues.lightCone,\n      \"lightConeLevel\": fieldValues.lightConeLevel,\n      \"lightConeSuperimposition\": fieldValues.lightConeSuperimposition,\n      \"mainBody\": [],\n      \"mainFeet\": [],\n      \"mainHands\": [],\n      \"mainHead\": [],\n      \"mainLinkRope\": [],\n      \"mainPlanarSphere\": [],\n      \"ornamentSets\": [],\n      \"predictMaxedMainStat\": true,\n      \"rankFilter\": true,\n      \"relicSets\": [],\n    }\n\n    window.optimizerForm.setFieldsValue(OptimizerTabController.getDisplayFormValues(newForm))\n    OptimizerTabController.updateFilters()\n  },\n\n  changeCharacter: (id) => {\n    console.log('ChangeCharacter')\n    let character = DB.getCharacterById(id)\n    if (character) {\n      let displayFormValues = OptimizerTabController.getDisplayFormValues(character.form)\n      window.optimizerForm.setFieldsValue(displayFormValues)\n      if (character.form.lightCone) {\n        let lightConeMetadata = DB.getMetadata().lightCones[character.form.lightCone]\n        window.setSelectedLightCone(lightConeMetadata)\n      }\n      window.store.getState().setStatDisplay(character.form.statDisplay || 'base')\n    } else {\n      let displayFormValues = OptimizerTabController.getDisplayFormValues({\n        characterId: id,\n        characterEidolon: 0\n      })\n      window.optimizerForm.setFieldsValue(displayFormValues)\n      window.store.getState().setStatDisplay('base')\n    }\n\n    setPinnedRow(id)\n    OptimizerTabController.updateFilters()\n  },\n\n  refreshPinned: () => {\n    let fieldValues = OptimizerTabController.getForm()\n    if (fieldValues.characterId) {\n      setPinnedRow(fieldValues.characterId)\n    }\n  },\n\n  redrawRows: () => {\n    window.optimizerGrid.current.api.redrawRows()\n  },\n\n  applyRowFilters: () => {\n    let fieldValues = OptimizerTabController.getForm()\n    filterModel = fieldValues\n    console.log('Apply filters to rows', fieldValues);\n    OptimizerTabController.resetDataSource()\n  }\n}\n\nfunction unsetMin(value, percent) {\n  if (value == undefined) return undefined\n  return value == 0 ? undefined : parseFloat((percent == true ? value * 100 : value).toFixed(1))\n}\nfunction unsetMax(value, percent) {\n  if (value == undefined) return undefined\n  return value == Constants.MAX_INT ? undefined : parseFloat((percent == true ? value * 100 : value).toFixed(1))\n}\n\nfunction fixValue(value, def, div) {\n  if (value == null) {\n    return def\n  }\n  div = div || 1\n  return value / div\n}\n\n\nfunction aggregate(subArray) {\n  let minAgg = CharacterStats.getZeroes()\n  for (let column of OptimizerTabController.getColumnsToAggregate()) {\n    minAgg[column] = Constants.MAX_INT\n  }\n\n  function setMinMax(name) {\n    minAgg[name] = Constants.MAX_INT\n    maxAgg[name] = 0\n  }\n\n  let maxAgg = CharacterStats.getZeroes()\n  minAgg['ED'] = Constants.MAX_INT\n  maxAgg['ED'] = 0\n  minAgg['CV'] = Constants.MAX_INT\n  maxAgg['CV'] = 0\n  minAgg['WEIGHT'] = Constants.MAX_INT\n  maxAgg['WEIGHT'] = 0\n  minAgg['EHP'] = Constants.MAX_INT\n  maxAgg['EHP'] = 0\n\n  setMinMax('BASIC')\n  setMinMax('SKILL')\n  setMinMax('ULT')\n  setMinMax('FUA')\n  setMinMax('DOT')\n  setMinMax('xATK')\n  setMinMax('xDEF')\n  setMinMax('xHP')\n  setMinMax('xSPD')\n  setMinMax('xCR')\n  setMinMax('xCD')\n  setMinMax('xEHR')\n  setMinMax('xRES')\n  setMinMax('xBE')\n  setMinMax('xERR')\n  setMinMax('xOHB')\n  setMinMax('xELEMENTAL_DMG')\n\n  for (let row of subArray) {\n    for (let column of OptimizerTabController.getColumnsToAggregate()) {\n      let value = row[column]\n      if (value < minAgg[column]) minAgg[column] = value\n      if (value > maxAgg[column]) maxAgg[column] = value\n    }\n  }\n  aggs = {\n    minAgg: minAgg,\n    maxAgg: maxAgg\n  }\n}\n\nfunction sort() {\n  if (sortModel.sort == 'desc') {\n    inPlaceSort(rows).desc(sortModel.colId)\n  } else {\n    inPlaceSort(rows).asc(sortModel.colId)\n  }\n}\n\nfunction filter(filterModel) {\n  let isCombat = filterModel.statDisplay == 'combat'\n  let indices = []\n\n  if (isCombat) {\n    for (let i = 0; i < rows.length; i++) {\n      let row = rows[i]\n      let valid =\n        row.xHP >= filterModel.minHp && row.xHP <= filterModel.maxHp &&\n        row.xATK >= filterModel.minAtk && row.xATK <= filterModel.maxAtk &&\n        row.xDEF >= filterModel.minDef && row.xDEF <= filterModel.maxDef &&\n        row.xSPD >= filterModel.minSpd && row.xSPD <= filterModel.maxSpd &&\n        row.xCR >= filterModel.minCr && row.xCR <= filterModel.maxCr &&\n        row.xCD >= filterModel.minCd && row.xCD <= filterModel.maxCd &&\n        row.xEHR >= filterModel.minEhr && row.xEHR <= filterModel.maxEhr &&\n        row.xRES >= filterModel.minRes && row.xRES <= filterModel.maxRes &&\n        row.xBE >= filterModel.minBe && row.xBE <= filterModel.maxBe &&\n        row.CV >= filterModel.minCv && row.CV <= filterModel.maxCv &&\n        row.EHP >= filterModel.minEhp && row.EHP <= filterModel.maxEhp &&\n        row.WEIGHT >= filterModel.minWeight && row.WEIGHT <= filterModel.maxWeight &&\n        row.BASIC >= filterModel.minBasic && row.BASIC <= filterModel.maxBasic &&\n        row.SKILL >= filterModel.minSkill && row.SKILL <= filterModel.maxSkill &&\n        row.ULT >= filterModel.minUlt && row.ULT <= filterModel.maxUlt &&\n        row.FUA >= filterModel.minFua && row.FUA <= filterModel.maxFua &&\n        row.DOT >= filterModel.minDot && row.DOT <= filterModel.maxDot\n      if (valid) {\n        indices.push(i)\n      }\n    }\n  } else {\n    for (let i = 0; i < rows.length; i++) {\n      let row = rows[i]\n      let valid =\n        row[Constants.Stats.HP] >= filterModel.minHp && row[Constants.Stats.HP] <= filterModel.maxHp &&\n        row[Constants.Stats.ATK] >= filterModel.minAtk && row[Constants.Stats.ATK] <= filterModel.maxAtk &&\n        row[Constants.Stats.DEF] >= filterModel.minDef && row[Constants.Stats.DEF] <= filterModel.maxDef &&\n        row[Constants.Stats.SPD] >= filterModel.minSpd && row[Constants.Stats.SPD] <= filterModel.maxSpd &&\n        row[Constants.Stats.CR] >= filterModel.minCr && row[Constants.Stats.CR] <= filterModel.maxCr &&\n        row[Constants.Stats.CD] >= filterModel.minCd && row[Constants.Stats.CD] <= filterModel.maxCd &&\n        row[Constants.Stats.EHR] >= filterModel.minEhr && row[Constants.Stats.EHR] <= filterModel.maxEhr &&\n        row[Constants.Stats.RES] >= filterModel.minRes && row[Constants.Stats.RES] <= filterModel.maxRes &&\n        row[Constants.Stats.BE] >= filterModel.minBe && row[Constants.Stats.BE] <= filterModel.maxBe &&\n        row.CV >= filterModel.minCv && row.CV <= filterModel.maxCv &&\n        row.EHP >= filterModel.minEhp && row.EHP <= filterModel.maxEhp &&\n        row.WEIGHT >= filterModel.minWeight && row.WEIGHT <= filterModel.maxWeight &&\n        row.BASIC >= filterModel.minBasic && row.BASIC <= filterModel.maxBasic &&\n        row.SKILL >= filterModel.minSkill && row.SKILL <= filterModel.maxSkill &&\n        row.ULT >= filterModel.minUlt && row.ULT <= filterModel.maxUlt &&\n        row.FUA >= filterModel.minFua && row.FUA <= filterModel.maxFua &&\n        row.DOT >= filterModel.minDot && row.DOT <= filterModel.maxDot\n      if (valid) {\n        indices.push(i)\n      }\n    }\n  }\n\n  filteredIndices = indices\n}\nfunction setPinnedRow(characterId) {\n  let character = DB.getCharacterById(characterId)\n  let stats = StatCalculator.calculate(character)\n\n  window.optimizerGrid.current.api.updateGridOptions({ pinnedTopRowData: [stats] })\n}","import { Constants } from \"./constants.ts\";\n\nexport const CharacterStats = {\n  getZeroes: function () {\n    return {\n      [Constants.Stats.ATK]: 0,\n      [Constants.Stats.DEF]: 0,\n      [Constants.Stats.HP]: 0,\n      [Constants.Stats.ATK_P]: 0,\n      [Constants.Stats.DEF_P]: 0,\n      [Constants.Stats.HP_P]: 0,\n      [Constants.Stats.SPD]: 0,\n      [Constants.Stats.SPD_P]: 0,\n      [Constants.Stats.CR]: 0,\n      [Constants.Stats.CD]: 0,\n      [Constants.Stats.EHR]: 0,\n      [Constants.Stats.RES]: 0,\n      [Constants.Stats.BE]: 0,\n      [Constants.Stats.ERR]: 0,\n      [Constants.Stats.OHB]: 0,\n      [Constants.Stats.Physical_DMG]: 0,\n      [Constants.Stats.Fire_DMG]: 0,\n      [Constants.Stats.Ice_DMG]: 0,\n      [Constants.Stats.Lightning_DMG]: 0,\n      [Constants.Stats.Wind_DMG]: 0,\n      [Constants.Stats.Quantum_DMG]: 0,\n      [Constants.Stats.Imaginary_DMG]: 0,\n    }\n  },\n}\n\n// HP_P: 'HP%',\n// ATK_P: 'ATK%',\n// DEF_P: 'DEF%',\n// HP: 'HP',\n// ATK: 'ATK',\n// DEF: 'DEF',\n// SPD: 'SPD',\n// CD: 'CRIT DMG',\n// CR: 'CRIT Rate',\n// EHR: 'Effect Hit Rate',\n// RES: 'Effect RES',\n// BE: 'Break Effect',\n// ERR: 'Energy Regeneration Rate',\n// OHB: 'Outgoing Healing Boost',\n// Physical_DMG: 'Physical DMG Boost',\n// Fire_DMG: 'Fire DMG Boost',\n// Ice_DMG: 'Ice DMG Boost',\n// Lightning_DMG: 'Lightning DMG Boost',\n// Wind_DMG: 'Wind DMG Boost',\n// Quantum_DMG: 'Quantum DMG Boost',\n// Imaginary_DMG: 'Imaginary DMG Boost'","import { Constants, Stats } from \"./constants.ts\";\n\nconst SIZE = 35\n\n// When adding new rows, use:\n// let i = 0\n// offset + i++\n\nexport const BufferPacker = {\n  extractCharacter: (arr, offset) => { // Float32Array\n    offset = offset * SIZE\n    return {\n      id: arr[offset], // 0\n      [Constants.Stats.HP]: arr[offset + 1],\n      [Constants.Stats.ATK]: arr[offset + 2],\n      [Constants.Stats.DEF]: arr[offset + 3],\n      [Constants.Stats.SPD]: arr[offset + 4],\n      [Constants.Stats.CD]: arr[offset + 5],\n      [Constants.Stats.CR]: arr[offset + 6],\n      [Constants.Stats.EHR]: arr[offset + 7],\n      [Constants.Stats.RES]: arr[offset + 8],\n      [Constants.Stats.BE]: arr[offset + 9],\n      [Constants.Stats.ERR]: arr[offset + 10], // 10\n      [Constants.Stats.OHB]: arr[offset + 11],\n      ED: arr[offset + 12],\n      CV: arr[offset + 13],\n      WEIGHT: arr[offset + 14],\n      EHP: arr[offset + 15],\n      BASIC: arr[offset + 16],\n      SKILL: arr[offset + 17],\n      ULT: arr[offset + 18],\n      FUA: arr[offset + 19],\n      DOT: arr[offset + 20], // 20\n      xHP: arr[offset + 21],\n      xATK: arr[offset + 22],\n      xDEF: arr[offset + 23],\n      xSPD: arr[offset + 24],\n      xCR: arr[offset + 25],\n      xCD: arr[offset + 26],\n      xEHR: arr[offset + 27],\n      xRES: arr[offset + 28],\n      xBE: arr[offset + 29],\n      xERR: arr[offset + 30], // 30\n      xOHB: arr[offset + 31],\n      xELEMENTAL_DMG: arr[offset + 32],\n      relicSetIndex: arr[offset + 33],\n      ornamentSetIndex: arr[offset + 34],\n    }\n  },\n\n  extractArrayToResults: (arr, length, results) => {\n    for (let i = 0; i < length; i++) {\n      if (arr[i * SIZE + 1]) {\n        results.push(BufferPacker.extractCharacter(arr, i))\n      }\n    }\n  },\n\n  packCharacter: (arr, offset, character) => {\n    offset = offset * SIZE\n\n    // When adding new rows, use:\n    arr[offset] = character.id // 0\n    arr[offset + 1] = character[Stats.HP]\n    arr[offset + 2] = character[Stats.ATK]\n    arr[offset + 3] = character[Stats.DEF]\n    arr[offset + 4] = character[Stats.SPD]\n    arr[offset + 5] = character[Stats.CD]\n    arr[offset + 6] = character[Stats.CR]\n    arr[offset + 7] = character[Stats.EHR]\n    arr[offset + 8] = character[Stats.RES]\n    arr[offset + 9] = character[Stats.BE]\n    arr[offset + 10] = character[Stats.ERR] // 10\n    arr[offset + 11] = character[Stats.OHB]\n    arr[offset + 12] = character.ELEMENTAL_DMG\n    arr[offset + 13] = character.CV\n    arr[offset + 14] = character.WEIGHT\n    arr[offset + 15] = character.EHP\n    arr[offset + 16] = character.x.BASIC_DMG\n    arr[offset + 17] = character.x.SKILL_DMG\n    arr[offset + 18] = character.x.ULT_DMG\n    arr[offset + 19] = character.x.FUA_DMG\n    arr[offset + 20] = character.x.DOT_DMG // 20\n    arr[offset + 21] = character.x[Stats.HP]\n    arr[offset + 22] = character.x[Stats.ATK]\n    arr[offset + 23] = character.x[Stats.DEF]\n    arr[offset + 24] = character.x[Stats.SPD]\n    arr[offset + 25] = character.x[Stats.CR]\n    arr[offset + 26] = character.x[Stats.CD]\n    arr[offset + 27] = character.x[Stats.EHR]\n    arr[offset + 28] = character.x[Stats.RES]\n    arr[offset + 29] = character.x[Stats.BE]\n    arr[offset + 30] = character.x[Stats.ERR] // 30\n    arr[offset + 31] = character.x[Stats.OHB]\n    arr[offset + 32] = character.x.ELEMENTAL_DMG\n    arr[offset + 33] = character.relicSetIndex\n    arr[offset + 34] = character.ornamentSetIndex\n  },\n\n  cleanFloatBuffer: (buffer) => {\n    new Float64Array(buffer).fill(0);\n  },\n\n  createFloatBuffer: (length) => {\n    return new Float64Array(length * SIZE).buffer\n  }\n}","import { BufferPacker } from \"./bufferPacker\";\n\nlet poolSize = (navigator.hardwareConcurrency || 4) - 1\nlet initialized = 0\nconsole.log('Using pool size ' + poolSize)\nlet workers = []\nlet buffers = []\nlet taskQueue = []\nlet taskStatus = {}\n\nexport const WorkerPool = {\n  initialize: () => {\n    if (initialized < poolSize) {\n      const worker = new Worker(new URL('./worker/optimizerWorker.js', import.meta.url));\n      workers.push(worker)\n      initialized++\n    }\n  },\n\n  nextTask: () => {\n    if (taskQueue.length == 0) return;\n    let { task, callback } = taskQueue.shift()\n    WorkerPool.execute(task, callback)\n  },\n\n  execute: (task, callback, id) => {\n    if (taskStatus[id] == undefined) taskStatus[id] = true\n    if (taskStatus[id] == false) return\n\n    WorkerPool.initialize()\n\n    if (workers.length > 0) {\n      const worker = workers.pop();\n\n      let buffer\n      if (buffers.length > 0) {\n        buffer = buffers.pop()\n        BufferPacker.cleanFloatBuffer(buffer)\n      } else {\n        buffer = BufferPacker.createFloatBuffer(100000)\n      }\n\n      task.buffer = buffer\n\n      worker.onmessage = (message) => {\n        // console.log('worker message', message)\n        if (callback) callback(message.data)\n        workers.push(worker)\n        buffers.push(message.data.buffer)\n        WorkerPool.nextTask()\n      };\n\n      worker.postMessage(task, [task.buffer]);\n    } else {\n      taskQueue.push({ task, callback });\n    }\n  },\n\n  cancel: (id) => {\n    taskStatus[id] = false\n    taskQueue = []\n  },\n\n  state: () => {\n    console.log({\n      poolSize,\n      workers,\n      taskQueue,\n      buffers\n    })\n  }\n}\n\nWorkerPool.initialize()","import { Constants } from \"./constants.ts\";\nimport DB from \"./db\";\nimport { Utils } from \"./utils\";\n\nexport const RelicFilters = {\n  calculateWeightScore: (request, relics) => {\n    let weights = request.weights || {}\n    let statScalings = {\n      [Constants.Stats.HP_P]: 64.8 / 43.2,\n      [Constants.Stats.ATK_P]: 64.8 / 43.2,\n      [Constants.Stats.DEF_P]: 64.8 / 54,\n      [Constants.Stats.HP]: 1 / (DB.getMetadata().characters[request.characterId].promotions[80][Constants.Stats.HP] * 2 * 0.01) * (64.8 / 43.2),\n      [Constants.Stats.ATK]: 1 / (DB.getMetadata().characters[request.characterId].promotions[80][Constants.Stats.ATK] * 2 * 0.01) * (64.8 / 43.2),\n      [Constants.Stats.DEF]: 1 / (DB.getMetadata().characters[request.characterId].promotions[80][Constants.Stats.DEF] * 2 * 0.01) * (64.8 / 54),\n      [Constants.Stats.CR]: 64.8 / 32.4,\n      [Constants.Stats.CD]: 64.8 / 64.8,\n      [Constants.Stats.OHB]: 64.8 / 34.5,\n      [Constants.Stats.EHR]: 64.8 / 43.2,\n      [Constants.Stats.RES]: 64.8 / 43.2,\n      [Constants.Stats.SPD]: 64.8 / 25,\n      [Constants.Stats.BE]: 64.8 / 64.8,\n    }\n\n    weights[Constants.Stats.ATK] = weights[Constants.Stats.ATK_P]\n    weights[Constants.Stats.DEF] = weights[Constants.Stats.DEF_P]\n    weights[Constants.Stats.HP] = weights[Constants.Stats.HP_P]\n\n    for (let weight of Object.keys(weights)) {\n      if (weights[weight] == undefined) {\n        weights[weight] = 0\n      }\n    }\n\n    for (let relic of relics) {\n      let sum = 0\n      for (let substat of relic.substats) {\n        let weight = weights[substat.stat] || 0\n        let scale = statScalings[substat.stat] || 0\n        let value = substat.value || 0\n        sum += value * weight * scale\n      }\n      relic.weightScore = sum\n    }\n\n    return relics\n  },\n\n  applyTopFilter: (request, relics, originalRelics) => {\n    let weights = request.weights || {}\n\n    for (let part of Object.values(Constants.Parts)) {\n      let partition = relics[part]\n      let index = Math.max(1, Math.floor(weights.topPercent / 100 * originalRelics[part].length))\n      relics[part] = partition.sort((a, b) => b.weightScore - a.weightScore).slice(0, index)\n    }\n\n    return relics\n  },\n\n  applyRankFilter: (request, relics) => {\n    if (!request.rankFilter) return relics;\n\n    let characters = DB.getCharacters()\n    let characterId = request.characterId;\n    let higherRankedRelics = {}\n    for (let i = 0; i < characters.length; i++) {\n      let rankedCharacter = characters[i]\n      if (rankedCharacter.id == characterId) {\n        break\n      }\n\n      Object.values(rankedCharacter.equipped)\n        .filter(x => x != null)\n        .map(x => higherRankedRelics[x] = true)\n    }\n\n    return relics.filter(x => !higherRankedRelics[x.id])\n  },\n\n  applyMainFilter: (request, relics) => {\n    let out = []\n    out.push(...relics.filter(x => x.part == Constants.Parts.Head))\n    out.push(...relics.filter(x => x.part == Constants.Parts.Hands))\n    out.push(...relics.filter(x => x.part == Constants.Parts.Body).filter(x => request.mainBody.length == 0 || request.mainBody.includes(x.main.stat)))\n    out.push(...relics.filter(x => x.part == Constants.Parts.Feet).filter(x => request.mainFeet.length == 0 || request.mainFeet.includes(x.main.stat)))\n    out.push(...relics.filter(x => x.part == Constants.Parts.PlanarSphere).filter(x => request.mainPlanarSphere.length == 0 || request.mainPlanarSphere.includes(x.main.stat)))\n    out.push(...relics.filter(x => x.part == Constants.Parts.LinkRope).filter(x => request.mainLinkRope.length == 0 || request.mainLinkRope.includes(x.main.stat)))\n\n    return out;\n  },\n\n  applyEnhanceFilter: (request, relics) => {\n    return relics.filter(x => x.enhance >= request.enhance);\n  },\n\n  applyEquippedFilter: (request, relics) => {\n    if (request.includeEquippedRelics)\n      return relics;\n\n    const characterId = request.characterId || \"99999999\";\n    // TODO: refactor after https://github.com/fribbels/hsr-optimizer/issues/56 is completed\n    let blacklist = [];\n    window.store.getState().characters.forEach(char => {\n      if (char.id == characterId) return;\n      blacklist = blacklist.concat(Object.values(char.equipped));\n    });\n    const ret = relics.filter(x => !blacklist.includes(x.id));\n    return ret;\n  },\n\n  applyGradeFilter: (request, relics) => {\n    return relics.filter(x => x.grade ? x.grade >= request.grade : true);\n  },\n\n  applySetFilter: (request, relics) => {\n    function relicFilter(request, relics) {\n      if (!request.relicSets || request.relicSets.length == 0) {\n        return relics\n      }\n      let allowedSets = Utils.arrayOfZeroes(Object.values(Constants.SetsRelics).length)\n\n      for (let relicSet of request.relicSets) {\n        if (relicSet[0] == '4 Piece') {\n          if (relicSet.length == 1) {\n            allowedSets = Utils.arrayOfValue(Object.values(Constants.SetsRelics).length, 1)\n          }\n          if (relicSet.length == 2) {\n            let index = Constants.RelicSetToIndex[relicSet[1]]\n            allowedSets[index] = 1\n          }\n        }\n        if (relicSet[0] == '2 Piece') {\n          if (relicSet.length == 1) {\n            allowedSets = Utils.arrayOfValue(Object.values(Constants.SetsRelics).length, 1)\n          }\n          if (relicSet.length == 2) {\n            allowedSets = Utils.arrayOfValue(Object.values(Constants.SetsRelics).length, 1)\n          }\n          if (relicSet.length == 3) {\n            if (relicSet[2] == 'Any') {\n              allowedSets = Utils.arrayOfValue(Object.values(Constants.SetsRelics).length, 1)\n            }\n            let index1 = Constants.RelicSetToIndex[relicSet[1]]\n            allowedSets[index1] = 1\n\n            let index2 = Constants.RelicSetToIndex[relicSet[2]]\n            allowedSets[index2] = 1\n          }\n        }\n      }\n\n      return relics.filter(relic => {\n        if (\n          relic.part == Constants.Parts.Head ||\n          relic.part == Constants.Parts.Hands ||\n          relic.part == Constants.Parts.Body ||\n          relic.part == Constants.Parts.Feet) {\n          return allowedSets[Constants.RelicSetToIndex[relic.set]] == 1;\n        } else {\n          return true\n        }\n      })\n    }\n\n    function ornamentFilter(request, relics) {\n      if (!request.ornamentSets || request.ornamentSets.length == 0) {\n        return relics\n      }\n      let allowedSets = Utils.arrayOfZeroes(Object.values(Constants.SetsOrnaments).length)\n\n      for (let ornamentSet of request.ornamentSets) {\n        let index = Constants.OrnamentSetToIndex[ornamentSet]\n        allowedSets[index] = 1\n      }\n\n      return relics.filter(relic => {\n        if (\n          relic.part == Constants.Parts.PlanarSphere ||\n          relic.part == Constants.Parts.LinkRope) {\n          return allowedSets[Constants.OrnamentSetToIndex[relic.set]] == 1;\n        } else {\n          return true\n        }\n      })\n    }\n\n    return ornamentFilter(request, relicFilter(request, relics))\n  },\n\n  applyCurrentFilter: (request, relics) => {\n    if (!request.keepCurrentRelics) return relics;\n\n    let character = DB.getCharacterById(request.characterId)\n    if (!character) {\n      return relics\n    }\n\n    function matchingRelic(part) {\n      if (!character.equipped[part]) {\n        return relics[part]\n      }\n      let match = relics[part].find(x => x.id == character.equipped[part])\n      return match ? [match] : []\n    }\n\n    return {\n      Head: matchingRelic(Constants.Parts.Head),\n      Hands: matchingRelic(Constants.Parts.Hands),\n      Body: matchingRelic(Constants.Parts.Body),\n      Feet: matchingRelic(Constants.Parts.Feet),\n      PlanarSphere: matchingRelic(Constants.Parts.PlanarSphere),\n      LinkRope: matchingRelic(Constants.Parts.LinkRope)\n    }\n  },\n\n  splitRelicsByPart: (relics) => {\n    return {\n      Head: relics.filter(x => x.part == Constants.Parts.Head),\n      Hands: relics.filter(x => x.part == Constants.Parts.Hands),\n      Body: relics.filter(x => x.part == Constants.Parts.Body),\n      Feet: relics.filter(x => x.part == Constants.Parts.Feet),\n      PlanarSphere: relics.filter(x => x.part == Constants.Parts.PlanarSphere),\n      LinkRope: relics.filter(x => x.part == Constants.Parts.LinkRope)\n    }\n  }\n}","import { GPUOptimizer } from \"./gpuOptimizer\";\nimport { Constants } from \"./constants.ts\";\nimport { OptimizerTabController } from './optimizerTabController';\nimport { Utils } from './utils';\nimport DB from \"./db\";\nimport { WorkerPool } from \"./workerPool\";\nimport { BufferPacker } from \"./bufferPacker\";\nimport { RelicFilters } from \"./relicFilters\";\nimport { CharacterStats } from \"./characterStats\";\nimport { Message } from \"./message\";\nimport { StatCalculator } from \"./statCalculator\";\n\nlet WIDTH = 100000;\nlet HEIGHT = 1;\nlet MAX_RESULTS = 2_000_000;\n\n// Flatten a relic's augmented stats + part to a single array & percents -> decimals + zeroing undefined\nfunction relicToArray(relic) {\n  let partToNumber = {\n    [Constants.Parts.Head]: 0,\n    [Constants.Parts.Hands]: 1,\n    [Constants.Parts.Body]: 2,\n    [Constants.Parts.Feet]: 3,\n    [Constants.Parts.PlanarSphere]: 4,\n    [Constants.Parts.LinkRope]: 5\n  }\n\n  let setToNumber = {}\n  if (relic.part == Constants.Parts.PlanarSphere || relic.part == Constants.Parts.LinkRope) {\n    for (let i = 0; i < Object.values(Constants.SetsOrnaments).length; i++) {\n      setToNumber[Object.values(Constants.SetsOrnaments)[i]] = i\n    }\n  } else {\n    for (let i = 0; i < Object.values(Constants.SetsRelics).length; i++) {\n      setToNumber[Object.values(Constants.SetsRelics)[i]] = i\n    }\n  }\n\n  let result = []\n  for (let i = 0; i < Object.values(Constants.Stats).length; i++) {\n    let stat = Object.values(Constants.Stats)[i];\n    result[i] = relic.augmentedStats[stat] || 0\n  }\n\n  result.push(partToNumber[relic.part]);\n  result.push(setToNumber[relic.set]);\n\n  return result;\n}\n\n// Flatten a character's stats to arrays & percents -> decimals + zeroing undefined\nfunction characterToArrays(character) {\n  let result = {\n    base: [],\n    traces: [],\n    lightCone: []\n  }\n\n  for (let i = 0; i < Object.values(Constants.Stats).length; i++) {\n    let stat = Object.values(Constants.Stats)[i];\n    result.base[i] = character.base[stat] || 0\n    result.traces[i] = character.traces[stat] || 0\n    result.lightCone[i] = character.lightCone[stat] || 0\n\n  }\n\n  console.log('Convert', character, result);\n\n  return result;\n}\n\nlet CANCEL = false;\n\nexport const Optimizer = {\n  cancel: (id) => {\n    CANCEL = true\n    WorkerPool.cancel(id)\n  },\n\n  getFilteredRelics: (request) => {\n    let relics = Utils.clone(DB.getRelics());\n    RelicFilters.calculateWeightScore(request, relics)\n\n    relics = RelicFilters.applyEquippedFilter(request, relics); // will reduce iterations if \"off\" is selected\n    relics = RelicFilters.applyEnhanceFilter(request, relics);\n    relics = RelicFilters.applyRankFilter(request, relics);\n\n    // Pre-split filters\n    let preFilteredRelicsByPart = RelicFilters.splitRelicsByPart(relics);\n\n    relics = RelicFilters.applyMainFilter(request, relics);\n    relics = addMainStatToAugmentedStats(relics);\n    relics = applyMaxedMainStatsFilter(request, relics);\n    relics = RelicFilters.applySetFilter(request, relics)\n\n    // Post-split filters\n    relics = splitRelicsByPart(relics);\n\n    relics = RelicFilters.applyCurrentFilter(request, relics);\n    relics = RelicFilters.applyTopFilter(request, relics, preFilteredRelicsByPart);\n\n    return [relics, preFilteredRelicsByPart];\n  },\n\n  optimize: function (request) {\n    CANCEL = false\n\n    window.store.getState().setPermutationsSearched(0)\n    window.store.getState().setPermutationsResults(0)\n\n    let lightConeMetadata = DB.getMetadata().lightCones[request.lightCone];\n    let lightConeStats = lightConeMetadata.promotions[request.lightConeLevel]\n    let lightConeSuperimposition = lightConeMetadata.superimpositions[request.lightConeSuperimposition]\n\n    let characterMetadata = DB.getMetadata().characters[request.characterId]\n    let characterStats = characterMetadata.promotions[request.characterLevel]\n\n    console.log({ lightConeStats })\n    console.log({ characterStats })\n\n    let element = characterMetadata.element\n\n    let baseStats = {\n      base: {\n        ...CharacterStats.getZeroes(),\n        ...characterStats\n      },\n      traces: {\n        ...CharacterStats.getZeroes(),\n        ...characterMetadata.traces\n      },\n      lightCone: {\n        ...CharacterStats.getZeroes(),\n        ...lightConeStats,\n        ...lightConeSuperimposition\n      }\n    }\n\n    const [relics] = this.getFilteredRelics(request);\n\n    let relicsArrays = relicsByPartToArray(relics);\n\n    let elementalMultipliers = [\n      element == 'Physical' ? 1 : 0,\n      element == 'Fire' ? 1 : 0,\n      element == 'Ice' ? 1 : 0,\n      element == 'Thunder' ? 1 : 0,\n      element == 'Wind' ? 1 : 0,\n      element == 'Quantum' ? 1 : 0,\n      element == 'Imaginary' ? 1 : 0,\n    ]\n\n    let character = characterToArrays(baseStats);\n    console.log('Optimize request', request)\n    console.log('Current state', Constants)\n    console.log('Optimize relics', relics)\n    console.log('Optimize relics arrays', relicsArrays)\n    console.log('Optimize character', character)\n    console.log('Optimize elemental multipliers', elementalMultipliers)\n\n    let { relicSetAllowList, relicSetSolutions } = generateRelicSetAllowList(request)\n    let ornamentSetSolutions = generateOrnamentSetAllowList(request)\n    console.log('relicSetAllowList, relicSetSolutions', relicSetAllowList, relicSetSolutions)\n\n    let hSize = relicsArrays.Head.length\n    let gSize = relicsArrays.Hands.length\n    let bSize = relicsArrays.Body.length\n    let fSize = relicsArrays.Feet.length\n    let pSize = relicsArrays.PlanarSphere.length\n    let lSize = relicsArrays.LinkRope.length\n\n    let permutations = hSize * gSize * bSize * fSize * pSize * lSize;\n\n    console.log(`Building kernel, permutations: ${permutations}, blocksize: ${WIDTH * HEIGHT}`)\n    let consts = GPUOptimizer.createConstants(\n      HEIGHT,\n      WIDTH,\n      request,\n      relicsArrays,\n      character,\n      relicSetAllowList,\n      relicSetSolutions,\n      ornamentSetSolutions,\n      elementalMultipliers\n    );\n\n    OptimizerTabController.setMetadata(consts, relics)\n\n    if (permutations == 0) {\n      OptimizerTabController.setRows([])\n      OptimizerTabController.resetDataSource()\n      return\n    }\n\n    if (CANCEL) return;\n\n    window.optimizerGrid.current.api.showLoadingOverlay()\n\n    let results = []\n    let increment = (WIDTH * HEIGHT)\n    let searched = 0\n    let runs = Math.ceil(permutations / increment)\n    let inProgress = runs\n\n    let resultsShown = false\n\n    // Create a special optimization request for the top row, ignoring filters and with a custom callback\n    function handleTopRow() {\n      let relics = Utils.clone(DB.getRelics());\n      RelicFilters.calculateWeightScore(request, relics)\n      relics = relics.filter(x => x.equippedBy == request.characterId)\n      relics = addMainStatToAugmentedStats(relics);\n      relics = applyMaxedMainStatsFilter(request, relics);\n      if (relics.length < 6) return\n\n      relics = splitRelicsByPart(relics);\n\n      let callback = (result) => {\n        let resultArr = new Float64Array(result.buffer)\n        console.log(`Top row complete`)\n\n        let rowData = []\n        BufferPacker.extractArrayToResults(resultArr, 1, rowData);\n        if (rowData.length > 0) {\n          OptimizerTabController.setTopRow(rowData[0])\n        }\n      }\n\n      let input = {\n        topRow: true, // Skip all filters for top row\n        setAllowList: relicSetAllowList,\n        relics: relics,\n        character: baseStats,\n        Constants: Constants,\n        consts: consts,\n        WIDTH: WIDTH,\n        HEIGHT: HEIGHT,\n        skip: 0,\n        permutations: 1,\n        relicSetToIndex: Constants.RelicSetToIndex,\n        ornamentSetToIndex: Constants.OrnamentSetToIndex,\n        elementalMultipliers: elementalMultipliers,\n        request: request,\n      }\n\n      WorkerPool.execute(input, callback, request.optimizationId)\n    }\n    handleTopRow()\n\n    for (let run = 0; run < runs; run++) {\n      let input = {\n        setAllowList: relicSetAllowList,\n        relics: relics,\n        character: baseStats,\n        Constants: Constants,\n        consts: consts,\n        WIDTH: WIDTH,\n        HEIGHT: HEIGHT,\n        skip: run * increment,\n        permutations: permutations,\n        relicSetToIndex: Constants.RelicSetToIndex,\n        ornamentSetToIndex: Constants.OrnamentSetToIndex,\n        elementalMultipliers: elementalMultipliers,\n        request: request,\n      }\n\n      let callback = (result) => {\n        searched += increment\n        inProgress -= 1\n\n        if (CANCEL && resultsShown) {\n          return\n        }\n\n        let resultArr = new Float64Array(result.buffer)\n        // console.log(`Optimizer results`, result, resultArr)\n\n        BufferPacker.extractArrayToResults(resultArr, WIDTH * HEIGHT, results);\n\n        console.log(`Thread complete - status: inProgress ${inProgress}, results: ${results.length}`)\n\n        window.store.getState().setPermutationsResults(results.length)\n        window.store.getState().setPermutationsSearched(Math.min(permutations, searched))\n\n        if (inProgress == 0 || CANCEL) {\n          OptimizerTabController.setRows(results)\n\n          window.optimizerGrid.current.api.updateGridOptions({ datasource: OptimizerTabController.getDataSource() })\n          console.log('Done', results.length);\n          resultsShown = true\n          return\n        }\n\n        if ((results.length >= MAX_RESULTS) && !CANCEL) {\n          CANCEL = true;\n          Optimizer.cancel(request.optimizationId)\n          Message.error('Too many results, stopping at 2,000,000 - please narrow your filters to limit results', 10)\n        }\n      }\n\n      // WorkerPool.execute(input, callback)\n      setTimeout(() => WorkerPool.execute(input, callback, request.optimizationId), 10 * run)\n    }\n  }\n}\n\nfunction applyMaxedMainStatsFilter(request, relics) {\n  if (request.predictMaxedMainStat) {\n    relics.map(x => x.augmentedStats[x.main.stat] = Utils.isFlat(x.main.stat) ? StatCalculator.getMaxedMainStat(x) : StatCalculator.getMaxedMainStat(x) / 100)\n  }\n  return relics\n}\n\nfunction relicsByPartToArray(relics) {\n  return {\n    Head: relics.Head.map(x => relicToArray(x)),\n    Hands: relics.Hands.map(x => relicToArray(x)),\n    Body: relics.Body.map(x => relicToArray(x)),\n    Feet: relics.Feet.map(x => relicToArray(x)),\n    PlanarSphere: relics.PlanarSphere.map(x => relicToArray(x)),\n    LinkRope: relics.LinkRope.map(x => relicToArray(x))\n  }\n}\n\nfunction addMainStatToAugmentedStats(relics) {\n  relics = relics.map(x => structuredClone(x))\n\n  for (let relic of relics) {\n    relic.augmentedStats[relic.augmentedStats.mainStat] = relic.augmentedStats.mainValue\n  }\n  return relics;\n}\n\nfunction splitRelicsByPart(relics) {\n  return {\n    Head: relics.filter(x => x.part == Constants.Parts.Head),\n    Hands: relics.filter(x => x.part == Constants.Parts.Hands),\n    Body: relics.filter(x => x.part == Constants.Parts.Body),\n    Feet: relics.filter(x => x.part == Constants.Parts.Feet),\n    PlanarSphere: relics.filter(x => x.part == Constants.Parts.PlanarSphere),\n    LinkRope: relics.filter(x => x.part == Constants.Parts.LinkRope)\n  }\n}\n\nfunction generateEmptyArr(n) {\n  return Array(n).fill(0)\n}\n\n// [0, 0, 0, 2, 0, 2] => [3, 3, 5, 5]\nfunction relicSetAllowListToIndices(arr) {\n  let out = []\n  for (let i = 0; i < arr.length; i++) {\n    while (arr[i]) {\n      arr[i]--\n      out.push(i);\n    }\n  }\n\n  return out;\n}\n\n// [5, 5] => [[5,5,0,0], [5,5,0,1], [5,5,1,1], [5,5,1,2], ...]\nfunction fillRelicSetArrPossibilities(arr, len) {\n  let out = []\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < len; j++) {\n      let newArr = Utils.arrayOfZeroes(4)\n      newArr[0] = arr[0]\n      newArr[1] = arr[1]\n      newArr[2] = i\n      newArr[3] = j\n\n      out.push(newArr)\n    }\n  }\n\n  return out;\n}\n\nconst permutator = (inputArr) => {\n  let result = [];\n\n  const permute = (arr, m = []) => {\n    if (arr.length === 0) {\n      result.push(m)\n    } else {\n      for (let i = 0; i < arr.length; i++) {\n        let curr = arr.slice();\n        let next = curr.splice(i, 1);\n        permute(curr.slice(), m.concat(next))\n      }\n    }\n  }\n\n  permute(inputArr)\n  return result;\n}\n\n// [[5,5,0,0], [5,5,0,1], [5,5,1,1], [5,5,1,2], ...] => [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0..]\nfunction convertRelicSetIndicesTo1D(setIndices) {\n  let len = Constants.SetsRelicsNames.length\n  if (setIndices.length == 0) {\n    return Utils.arrayOfValue(Math.pow(len, 4), 1);\n  }\n\n  let arr = Utils.arrayOfZeroes(Math.pow(len, 4))\n\n  for (let i = 0; i < setIndices.length; i++) {\n    let y = setIndices[i] // [5,5,2,3]\n    let permutations = permutator(y)\n    for (let x of permutations) {\n      let index1D = x[0] + x[1] * Math.pow(len, 1) + x[2] * Math.pow(len, 2) + x[3] * Math.pow(len, 3)\n      arr[index1D] = 1\n    }\n  }\n\n  return arr\n}\nfunction generateOrnamentSetAllowList(request) {\n  let setRequest = request.ornamentSets || [];\n\n  let len = Constants.SetsOrnamentsNames.length;\n\n  if (setRequest.length == 0) {\n    return Utils.arrayOfValue(len * len, 1);\n  }\n\n  let arr = Utils.arrayOfZeroes(len * len)\n\n  for (let set of setRequest) {\n    let setIndex = Constants.OrnamentSetToIndex[set]\n    let index1D = setIndex + setIndex * len\n    arr[index1D] = 1\n  }\n\n  // console.log('ornamentSetSolutions', arr);\n\n  return arr\n}\n\nfunction generateRelicSetAllowList(request) {\n  // Init\n  let setRequest = request.relicSets || [];\n  let len = Constants.SetsRelicsNames.length;\n  let relicSetAllowList = []\n  let setIndices = []\n\n  // console.log('setRequest', setRequest)\n  for (let setArr of setRequest) {\n    if (setArr[0] == '4 Piece') {\n      // ok\n      if (setArr.length == 1) {\n        // All 4 pieces\n        for (let i = 0; i < len; i++) {\n          let arr = generateEmptyArr(len)\n          arr[i] = 4\n          relicSetAllowList.push(arr.join())\n          let indices = relicSetAllowListToIndices(arr)\n          setIndices.push(indices);\n        }\n      }\n\n      // ok\n      if (setArr.length == 2) {\n        // Specific 4 piece\n        let index = Constants.RelicSetToIndex[setArr[1]];\n        let arr = generateEmptyArr(len)\n        arr[index] = 4\n        relicSetAllowList.push(arr.join())\n        let indices = relicSetAllowListToIndices(arr)\n        setIndices.push(indices);\n      }\n    }\n\n    if (setArr[0] == '2 Piece') {\n      // ok\n      if (setArr.length == 1) {\n        // Any 2 piece + Any\n        for (let i = 0; i < len; i++) {\n          let arr = generateEmptyArr(len)\n          arr[i] = 2\n          relicSetAllowList.push(arr.join())\n          let indices = relicSetAllowListToIndices(arr)\n          // setIndices.push(indices);\n          let filledIndices = fillRelicSetArrPossibilities(indices, len)\n          setIndices.push(...filledIndices);\n        }\n\n        // Also means 2 + 2 pieces are allowed\n        for (let i = 0; i < len; i++) {\n          for (let j = 0; j < len; j++) {\n            let arr = generateEmptyArr(len)\n            arr[i] += 2\n            arr[j] += 2\n            relicSetAllowList.push(arr.join())\n            let indices = relicSetAllowListToIndices(arr)\n            setIndices.push(indices);\n          }\n        }\n      }\n\n      // ok\n      if (setArr.length == 2) {\n        // Single 2 piece + Any\n\n        // 2 + 2s\n        let index = Constants.RelicSetToIndex[setArr[1]];\n        for (let i = 0; i < len; i++) {\n          let arr = generateEmptyArr(len)\n          arr[index] = 2\n          arr[i] += 2\n          relicSetAllowList.push(arr.join())\n          let indices = relicSetAllowListToIndices(arr)\n          setIndices.push(indices);\n        }\n\n        // 2 + 0\n        let arr = generateEmptyArr(len)\n        arr[index] = 2\n        relicSetAllowList.push(arr.join())\n        let indices = relicSetAllowListToIndices(arr)\n        // setIndices.push(indices);\n        let filledIndices = fillRelicSetArrPossibilities(indices, len)\n        setIndices.push(...filledIndices);\n      }\n\n      // ok\n      if (setArr.length == 3) {\n        // Specific 2 piece + (2 piece OR any)\n\n        if (setArr[2] == 'Any') {\n          let index = Constants.RelicSetToIndex[setArr[1]];\n          for (let i = 0; i < len; i++) {\n            let arr = generateEmptyArr(len)\n            arr[index] = 2\n            arr[i] += 2\n            relicSetAllowList.push(arr.join())\n            let indices = relicSetAllowListToIndices(arr)\n            setIndices.push(indices);\n          }\n\n          // 2 + 0\n          let arr = generateEmptyArr(len)\n          arr[index] = 2\n          relicSetAllowList.push(arr.join())\n          let indices = relicSetAllowListToIndices(arr)\n          let filledIndices = fillRelicSetArrPossibilities(indices, len)\n          setIndices.push(...filledIndices);\n        } else {\n          let arr = generateEmptyArr(len)\n          let index1 = Constants.RelicSetToIndex[setArr[1]];\n          let index2 = Constants.RelicSetToIndex[setArr[2]];\n          arr[index1] += 2\n          arr[index2] += 2\n          relicSetAllowList.push(arr.join())\n          let indices = relicSetAllowListToIndices(arr)\n          setIndices.push(indices);\n        }\n      }\n    }\n  }\n  let relicSetSolutions = convertRelicSetIndicesTo1D(setIndices);\n\n  relicSetAllowList = [...new Set(relicSetAllowList)]\n  return {\n    relicSetAllowList,\n    relicSetSolutions\n  }\n}","import { Flex, Typography } from \"antd\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nexport default function FormRow(props) {\n  return (\n    <Flex gap={0} vertical style={{\n      paddingTop: 5\n    }}>\n      <Flex // Top bar\n        style={{\n          height: 20,\n          paddingLeft: 15,\n        }}\n        // justify='space-around'\n        align='center'\n      >\n        <Text\n          style={{\n            fontSize: 20,\n          }}\n        >\n          {props.title}\n        </Text>\n      </Flex>\n\n      <Flex\n        style={{\n          paddingTop: 10,\n          paddingLeft: 10,\n          paddingRight: 10,\n          paddingBottom: 10,\n        }}\n        gap={10}\n      >\n        {props.children}\n      </Flex>\n    </Flex>\n  )\n}\nFormRow.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n}\n","import { Flex } from \"antd\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nlet shadow = 'rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.15) 0px 0px 0px 1px inset'\n\nexport default function FilterContainer(props) {\n  return (\n    <Flex\n      vertical\n      style={{\n        // outline: '2px solid #243356',\n        overflow: 'hidden',\n        borderRadius: '10px',\n        boxShadow: shadow,\n        width: 'fit-content',\n        paddingTop: 10\n      }}\n    >\n      {props.children}\n    </Flex>\n  )\n}\nFilterContainer.propTypes = {\n  children: PropTypes.any,\n}\n","import { Flex } from \"antd\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nlet shadow = 'rgba(0, 0, 0, 0.25) 0px 0.0625em 0.0625em, rgba(0, 0, 0, 0.25) 0px 0.125em 0.5em, rgba(255, 255, 255, 0.15) 0px 0px 0px 1px inset'\n\nlet panelWidth = 203;\nlet defaultGap = 5;\nlet defaultPadding = 15\n\nlet smallWidth = panelWidth\nlet mediumWidth = panelWidth * 2 + defaultPadding * 2 + 10\n\nexport default function FormCard(props) {\n  return (\n    <Flex\n      style={{\n        borderRadius: 5,\n        backgroundColor: '#243356',\n        height: props.height || 350,\n        padding: defaultPadding,\n        boxShadow: shadow,\n        overflow: props.style?.overflow\n      }}\n    >\n      <Flex\n        vertical\n        style={{ width: props.medium ? mediumWidth : smallWidth }}\n        gap={defaultGap}\n        justify={props.justify || undefined}\n      >\n        {props.children}\n      </Flex>\n    </Flex>\n  )\n}\nFormCard.propTypes = {\n  children: PropTypes.any,\n  justify: PropTypes.string,\n  style: PropTypes.object,\n  height: PropTypes.number,\n  medium: PropTypes.bool,\n}\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Flex, Form, Radio, Select, Switch, Typography } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\n\nimport { Hint } from \"../../lib/hint\";\nimport { HeaderText } from '../HeaderText';\nimport { TooltipImage } from '../TooltipImage';\n\nimport FormCard from './FormCard';\n\nconst { Text } = Typography;\n\nconst OptimizerOptions = ({ defaultGap = 0, panelWidth = 0 }) => {\n  const setStatDisplay = window.store(s => s.setStatDisplay);\n\n  const onChangeStatDisplay = (e) => {\n    const { target: { value } } = e;\n    setStatDisplay(value);\n  };\n\n  return (\n    <FormCard>\n      <Flex justify='space-between' align='center'>\n        <HeaderText>Optimizer options</HeaderText>\n        <TooltipImage type={Hint.optimizerOptions()} />\n      </Flex>\n\n      <Flex align='center'>\n        <Form.Item name=\"rankFilter\" valuePropName=\"checked\">\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            defaultChecked\n            style={{ width: 45, marginRight: 10 }}\n          />\n        </Form.Item>\n        <Text>Rank filter</Text>\n      </Flex>\n\n      <Flex align='center'>\n        <Form.Item name=\"predictMaxedMainStat\" valuePropName=\"checked\">\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            defaultChecked\n            style={{ width: 45, marginRight: 10 }}\n          />\n        </Form.Item>\n        <Text>Maxed main stat</Text>\n      </Flex>\n\n      <Flex align='center'>\n        <Form.Item name=\"keepCurrentRelics\" valuePropName=\"checked\">\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            defaultChecked\n            style={{ width: 45, marginRight: 10 }}\n          />\n        </Form.Item>\n        <Text>Keep current relics</Text>\n      </Flex>\n\n      <Flex align='center'>\n        <Form.Item name=\"includeEquippedRelics\" valuePropName=\"checked\">\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            defaultChecked\n            style={{ width: 45, marginRight: 10 }}\n          />\n        </Form.Item>\n        <Text>Use equipped</Text>\n      </Flex>\n\n      <Flex justify='space-between' align='center' style={{ marginTop: 15 }}>\n        <HeaderText>Relic enhance / rarity</HeaderText>\n        {/*<TooltipImage type={Hint.optimizerOptions()} />*/}\n      </Flex>\n\n      <Flex justify='space-between'>\n        <Form.Item name=\"enhance\">\n          <Select\n            style={{ width: (panelWidth - defaultGap) / 2 }}\n            options={[\n              { value: 0, label: '+0' },\n              { value: 3, label: '+3' },\n              { value: 6, label: '+6' },\n              { value: 9, label: '+9' },\n              { value: 12, label: '+12' },\n              { value: 15, label: '+15' },\n            ]}\n          />\n        </Form.Item>\n\n        <Form.Item name=\"grade\">\n          <Select\n            style={{ width: (panelWidth - defaultGap) / 2 }}\n            options={[\n              { value: 2, label: '2+ stars' },\n              { value: 3, label: '3+ stars' },\n              { value: 4, label: '4+ stars' },\n              { value: 5, label: '5 stars' },\n            ]}\n          />\n        </Form.Item>\n      </Flex>\n\n      <Flex justify='space-between' align='center' style={{ marginTop: 15 }}>\n        <HeaderText>Stat display</HeaderText>\n        {/*<TooltipImage type={Hint.optimizerOptions()} />*/}\n      </Flex>\n\n      <Form.Item name=\"statDisplay\">\n        <Radio.Group\n          onChange={onChangeStatDisplay}\n          optionType=\"button\"\n          buttonStyle=\"solid\"\n          style={{ width: '100%', display: 'flex' }}\n        >\n          <Radio style={{ display: 'flex', flex: 1, justifyContent: 'center', paddingInline: 0 }} value={'base'} defaultChecked>Base stats</Radio>\n          <Radio style={{ display: 'flex', flex: 1, justifyContent: 'center', paddingInline: 0 }} value={'combat'}>Combat stats</Radio>\n        </Radio.Group>\n      </Form.Item>\n\n      {/*\n      <Button type=\"primary\" onClick={showDrawer}>\n        Advanced Options\n      </Button>\n      <Drawer\n        placement=\"right\"\n        closable={false}\n        onClose={onClose}\n        open={open}\n        getContainer={false}\n        width={250}\n      >\n        <HeaderText>\n          Damage Buffs\n          Coming Soon\n        </HeaderText>\n\n        <Divider style={{marginTop: '8px', marginBottom: '12px'}}/>\n\n      </Drawer>\n\n      <Text>Actions</Text>\n      <Button type=\"primary\" onClick={saveCharacterClicked} style={{width: '100%'}}>\n        Save Character\n      </Button> */}\n    </FormCard>\n\n  );\n};\n\nexport default OptimizerOptions;","import { Flex, Form, InputNumber, Slider, Typography } from \"antd\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Utils } from \"../../lib/utils\";\nimport PropTypes from \"prop-types\";\n\nlet sliderWidth = 130\nconst Text = styled(Typography)`\n  white-space: pre-line;\n`\n\nexport function FormStatRollSlider(props) {\n  return (\n    <Flex gap={5} style={{marginBottom: 0}} align='center'>\n      <Flex justify='flex-start' style={{width: 45, marginRight: 10}}>\n        <Text>\n          {props.text}\n        </Text>\n      </Flex>\n      <Flex align='center' justify='flex-start' gap={10}>\n        <Form.Item name={['weights', props.name]}>\n          <Slider\n            min={0}\n            max={1}\n            step={0.25}\n            style={{\n              minWidth: sliderWidth,\n              marginTop: 0,\n              marginBottom: 0,\n              marginLeft: 0,\n            }}\n            onChangeComplete={(x) => window.onOptimizerFormValuesChange(x, window.optimizerForm.getFieldsValue(), true)}\n          />\n        </Form.Item>\n      </Flex>\n    </Flex>\n  )\n}\nFormStatRollSlider.propTypes = {\n  text: PropTypes.string,\n  name: PropTypes.string,\n}\n\n\nexport function FormStatRollSliderTopPercent() {\n  const [inputValue, setInputValue] = useState(1);\n  const onChange = (newValue) => {\n    setInputValue(newValue);\n  };\n\n  return (\n    <Flex gap={5} style={{marginBottom: 0}} align='center'>\n      <Form.Item name={['weights', 'topPercent']}>\n        <InputNumber\n          size='small'\n          style={{width: 50, marginRight: 5}}\n          controls={false}\n          min={1}\n          max={100}\n          onChange={(x) => {\n            onChange(x)\n            window.onOptimizerFormValuesChange(x, window.optimizerForm.getFieldsValue(), true)\n          }}\n          parser={(value) => value == null || value == '' ? 0 : Utils.precisionRound(value) }\n          formatter={(value) => `${Utils.precisionRound(value)}`}\n        />\n      </Form.Item>\n\n      <Flex align='center' justify='flex-start' gap={10}>\n        <Form.Item name={['weights', 'topPercent']}>\n          <Slider\n            min={1}\n            max={100}\n            step={1}\n            style={{\n              minWidth: sliderWidth,\n              marginTop: 0,\n              marginBottom: 0,\n              marginLeft: 0,\n            }}\n            keyboard={false}\n            tooltip={{\n              formatter: (value) => `${Utils.precisionRound(value)}%`\n            }}\n            value={typeof inputValue === 'number' ? inputValue : 0}\n            onChange={onChange}\n            onChangeComplete={(x) => window.onOptimizerFormValuesChange(x, window.optimizerForm.getFieldsValue(), true)}\n          />\n        </Form.Item>\n      </Flex>\n    </Flex>\n  )\n}","import { Divider, Flex } from 'antd';\nimport * as React from 'react';\n\nexport default function VerticalDivider() {\n  return (\n    <Flex vertical>\n      <Divider type=\"vertical\" style={{flexGrow: 1, margin: '10px 10px'}}/>\n    </Flex>\n  );\n}\n\n","import { ConfigProvider, Drawer, Flex, Form, Popover, Select, Switch, Typography } from \"antd\";\nimport { Constants } from \"../../lib/constants.ts\";\nimport VerticalDivider from \"../VerticalDivider\";\nimport React, { useMemo } from \"react\";\nimport { HeaderText } from \"../HeaderText\";\nimport PropTypes from \"prop-types\";\nimport { Assets } from \"../../lib/assets\";\n\nconst { Text } = Typography;\n\nconst setConditionalsIconWidth = 40\nconst setConditionalsNameWidth = 200\nconst setConditionalsWidth = 80\nconst defaultGap = 5\n\nexport const FormSetConditionals = () => {\n  let conditionalSetEffectsDrawerOpen = window.store(s => s.conditionalSetEffectsDrawerOpen);\n  let setConditionalSetEffectsDrawerOpen = window.store(s => s.setConditionalSetEffectsDrawerOpen);\n\n  const setChampionOfStreetwiseBoxingOptions = useMemo(() => {\n    let options = []\n    for (let i = 0; i <= 5; i++) {\n      options.push({\n        display: i + 'x',\n        value: i,\n        label: `${i} stacks (+${i * 5}% ATK)`\n      })\n    }\n\n    return options\n  }, []);\n  const setWastelanderOfBanditryDesert = useMemo(() => {\n    return [\n      {\n        display: 'Off',\n        value: 0,\n        label: 'Off'\n      },\n      {\n        display: 'CR',\n        value: 1,\n        label: 'Debuffed (+10% CR)'\n      },\n      {\n        display: 'CR+CD',\n        value: 2,\n        label: 'Imprisoned (+10% CR + 20% CD)'\n      }\n    ]\n  }, []);\n  const setLongevousDiscipleOptions = useMemo(() => {\n    let options = []\n    for (let i = 0; i <= 2; i++) {\n      options.push({\n        display: i + 'x',\n        value: i,\n        label: `${i} stacks (+${i * 8}% CR)`\n      })\n    }\n\n    return options\n  }, []);\n  const setTheAshblazingGrandDukeOptions = useMemo(() => {\n    let options = []\n    for (let i = 0; i <= 8; i++) {\n      options.push({\n        display: i + 'x',\n        value: i,\n        label: `${i} stacks (+${6 * i}% ATK)`\n      })\n    }\n\n    return options\n  }, []);\n  const setPrisonerInDeepConfinementOptions = useMemo(() => {\n    let options = []\n    for (let i = 0; i <= 3; i++) {\n      options.push({\n        display: i + 'x',\n        value: i,\n        label: `${i} stacks (+${6 * i}% DEF ignore)`\n      })\n    }\n\n    return options\n  }, []);\n\n  let defaultMessage = 'Enabled by default - effects will apply to combat calculations.'\n\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          opacityLoading: 0.15\n        }\n      }}\n    >\n      <Drawer\n        title=\"Conditional set effects\"\n        placement=\"right\"\n        onClose={() => setConditionalSetEffectsDrawerOpen(false)}\n        open={conditionalSetEffectsDrawerOpen}\n        width={750}\n        forceRender\n      >\n        <Flex justify='center'>\n          <Flex vertical gap={defaultGap}>\n            <Flex gap={defaultGap} align='center' justify='flex-start'>\n              <Text style={{ width: setConditionalsIconWidth }}></Text>\n              <Text style={{ width: setConditionalsNameWidth }}></Text>\n              <Text style={{ marginLeft: 'auto' }}>4 Piece</Text>\n            </Flex>\n\n            <ConditionalSetOption\n              set={Constants.Sets.PasserbyOfWanderingCloud}\n              description=\"At the beginning of the battle, immediately regenerates 1 Skill Point.\"\n              conditional={defaultMessage}\n              p4Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.MusketeerOfWildWheat}\n              description=\"The wearer's SPD increases by 6% and Basic ATK DMG increases by 10%.\"\n              conditional={defaultMessage}\n              p4Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.KnightOfPurityPalace}\n              description=\"Increases the max DMG that can be absorbed by the Shield created by the wearer by 20%.\"\n              conditional={defaultMessage}\n              p4Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.HunterOfGlacialForest}\n              description=\"After the wearer uses their Ultimate, their CRIT DMG increases by 25% for 2 turn(s).\"\n              conditional={'When enabled, CRIT DMG buff is applied to all calculations.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.ChampionOfStreetwiseBoxing}\n              selectOptions={setChampionOfStreetwiseBoxingOptions}\n              description=\"After the wearer attacks or is hit, their ATK increases by 5% for the rest of the battle. This effect can stack up to 5 time(s).\"\n              conditional={'The selected ATK% buff is applied to all calculations based on the number of stacks.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.GuardOfWutheringSnow}\n              description=\"At the beginning of the turn, if the wearer's HP is equal to or less than 50%, restores HP equal to 8% of their Max HP and regenerates 5 Energy.\"\n              conditional={defaultMessage}\n              p4Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.FiresmithOfLavaForging}\n              description=\"Increases the wearer's Skill DMG by 12%. After unleashing Ultimate, increases the wearer's Fire DMG by 12% for the next attack.\"\n              conditional={'The Skill DMG increase is always active by default. When enabled, the Fire DMG buff is applied to all calculations.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.GeniusOfBrilliantStars}\n              description=\"When the wearer deals DMG to the target enemy, ignores 10% DEF. If the target enemy has Quantum Weakness, the wearer additionally ignores 10% DEF.\"\n              conditional={'The 10% DEF pen increase is always active by default. When enabled, treats the enemy as having Quantum Weakness and penetrates 10% more DEF.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.BandOfSizzlingThunder}\n              description=\"When the wearer uses their Skill, increases the wearer's ATK by 20% for 1 turn(s).\"\n              conditional={'When enabled, ATK% buff is applied to all calculations.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.EagleOfTwilightLine}\n              description=\"After the wearer uses their Ultimate, their action is Advanced Forward by 25%.\"\n              conditional={defaultMessage}\n              p4Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.ThiefOfShootingMeteor}\n              description=\"Increases the wearer's Break Effect by 16%. When the wearer inflicts Weakness Break on an enemy, regenerates 3 Energy.\"\n              conditional={defaultMessage}\n              p4Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.WastelanderOfBanditryDesert}\n              selectOptions={setWastelanderOfBanditryDesert}\n              description=\"When attacking debuffed enemies, the wearer's CRIT Rate increases by 10%, and their CRIT DMG increases by 20% against Imprisoned enemies.\"\n              conditional={'Applies the selected buffs to all calculations.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.LongevousDisciple}\n              selectOptions={setLongevousDiscipleOptions}\n              description=\"When the wearer is hit or has their HP consumed by an ally or themselves, their CRIT Rate increases by 8% for 2 turn(s) and up to 2 stacks.\"\n              conditional={'The selected CR buff is applied to all calculations based on the number of stacks.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.MessengerTraversingHackerspace}\n              description=\"When the wearer uses their Ultimate on an ally, SPD for all allies increases by 12% for 1 turn(s). This effect cannot be stacked.\"\n              conditional={'When enabled, SPD% buff is applied to all calculations.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.TheAshblazingGrandDuke}\n              selectOptions={setTheAshblazingGrandDukeOptions}\n              description=\"When the wearer uses follow-up attacks, increases the wearer's ATK by 6% every time the follow-up attack deals DMG. This effect can stack up to 8 time(s) and lasts for 3 turn(s). This effect is removed the next time the wearer uses a follow-up attack.\"\n              conditional={'The selected ATK% buff is applied to all calculations except for Follow-up attacks. Follow-up attack calculations instead will start at 0% ATK buff and stack up based on the number of hits performed by the attack. Hits will increase based on the enemy count and assumes the target is positioned in the center for blast / aoe attacks.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.PrisonerInDeepConfinement}\n              selectOptions={setPrisonerInDeepConfinementOptions}\n              description=\"For every DoT the target enemy is afflicted with, the wearer will ignore 6% of its DEF when dealing DMG to it. This effect is valid for a max of 3 DoTs.\"\n              conditional={'The selected DEF% pen buff is applied to all calculations based on the number of stacks.'}\n            />\n          </Flex>\n\n          <VerticalDivider />\n\n          <Flex vertical gap={defaultGap} style={{ marginLeft: 5 }}>\n            <Flex gap={defaultGap} align='center' justify='flex-start'>\n              <Text style={{ width: setConditionalsIconWidth }}></Text>\n              <Text style={{ width: setConditionalsNameWidth }}></Text>\n              <Text style={{ marginLeft: 'auto' }}>2 Piece</Text>\n            </Flex>\n            <ConditionalSetOption\n              set={Constants.Sets.SpaceSealingStation}\n              description=\"\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.FleetOfTheAgeless}\n              description=\"Increases the wearer's ATK by 12%. When the wearer's SPD reaches 120 or higher, the wearer's ATK increases by an extra 12%.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.PanCosmicCommercialEnterprise}\n              description=\"Increases the wearer's Effect Hit Rate by 10%. Meanwhile, the wearer's ATK increases by an amount that is equal to 25% of the current Effect Hit Rate, up to a maximum of 25%.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.BelobogOfTheArchitects}\n              description=\"Increases the wearer's DEF by 15%. When the wearer's Effect Hit Rate is 50% or higher, the wearer gains an extra 15% DEF.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.CelestialDifferentiator}\n              description=\"Increases the wearer's CRIT DMG by 16%. When the wearer's current CRIT DMG reaches 120% or higher, after entering battle, the wearer's CRIT Rate increases by 60% until the end of their first attack.\"\n              conditional={'When enabled, CRIT Rate buff is applied to all calculations.'}\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.InertSalsotto}\n              description=\"Increases the wearer's CRIT Rate by 8%. When the wearer's current CRIT Rate reaches 50% or higher, the wearer's Ultimate and follow-up attack DMG increases by 15%.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.TaliaKingdomOfBanditry}\n              description=\"Increases the wearer's Break Effect by 16%. When the wearer's SPD reaches 145 or higher, the wearer's Break Effect increases by an extra 20%.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.SprightlyVonwacq}\n              description=\"Increases the wearer's Energy Regeneration Rate by 5%. When the wearer's SPD reaches 120 or higher, the wearer's action is Advanced Forward by 40% immediately upon entering battle.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.RutilantArena}\n              description=\"Increases the wearer's CRIT Rate by 8%. When the wearer's current CRIT Rate reaches 70% or higher, the wearer's Basic ATK and Skill DMG increase by 20%.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.BrokenKeel}\n              description=\"Increases the wearer's Effect RES by 10%. When the wearer's Effect RES is at 30% or higher, all allies' CRIT DMG increases by 10%.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.FirmamentFrontlineGlamoth}\n              description=\"Increases the wearer's ATK by 12%. When the wearer's SPD is equal to or higher than 135/160, the wearer deals 12%/18% more DMG.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n            <ConditionalSetOption\n              set={Constants.Sets.PenaconyLandOfTheDreams}\n              description=\"Increases wearer's Energy Regeneration Rate by 5%. Increases DMG by 10% for all other allies that are of the same Type as the wearer.\"\n              conditional={defaultMessage}\n              p2Checked\n            />\n          </Flex>\n        </Flex>\n      </Drawer>\n    </ConfigProvider>\n  )\n}\n\nfunction ConditionalSetOption(props) {\n  const content = (\n    <Flex vertical gap={10}>\n      <Flex vertical>\n        <HeaderText>\n          <p>{'Set description'}</p>\n        </HeaderText>\n        <p>{props.description}</p>\n      </Flex>\n\n      <Flex vertical>\n        <HeaderText>\n          <p>{'Enabled effect'}</p>\n        </HeaderText>\n        <p>{props.conditional}</p>\n      </Flex>\n    </Flex>\n  );\n\n  if (Constants.SetsRelicsNames.includes(props.set)) {\n    // Relics\n    let inputType = (<Switch disabled={props.p4Checked} />)\n    if (props.selectOptions) {\n      inputType = (\n        <Select\n          optionLabelProp=\"display\"\n          listHeight={500}\n          size='small'\n          style={{ width: setConditionalsWidth }}\n          dropdownStyle={{ width: 250 }}\n          options={props.selectOptions}\n        />\n      )\n    }\n\n    return (\n      <Popover\n        content={content}\n        title={props.set}\n        mouseEnterDelay={0.5}\n        overlayStyle={{\n          width: 600\n        }}\n      >\n        <Flex gap={defaultGap} align='center' justify='flex-start'>\n          <Flex style={{ width: setConditionalsIconWidth }}>\n            <img src={Assets.getSetImage(props.set, Constants.Parts.PlanarSphere)} style={{ width: 36, height: 36 }}></img>\n          </Flex>\n          <Text style={{ width: setConditionalsNameWidth, textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}>{props.set}</Text>\n          <Flex style={{ width: setConditionalsWidth }} justify='flex-end'>\n            <Form.Item name={['setConditionals', props.set, 1]} valuePropName={props.selectOptions ? 'value' : 'checked'}>\n              {inputType}\n            </Form.Item>\n          </Flex>\n        </Flex>\n      </Popover>\n    )\n  } else {\n    // Ornaments\n    return (\n      <Popover\n        content={content}\n        title={props.set}\n        mouseEnterDelay={0.5}\n        overlayStyle={{\n          width: 600\n        }}\n      >\n        <Flex gap={defaultGap} align='center' justify='flex-start'>\n          <Flex style={{ width: setConditionalsIconWidth }}>\n            <img src={Assets.getSetImage(props.set, Constants.Parts.PlanarSphere)} style={{ width: 36, height: 36 }}></img>\n          </Flex>\n          <Text style={{ width: setConditionalsNameWidth, textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}>{props.set}</Text>\n          <Flex style={{ width: setConditionalsWidth }} justify='flex-end'>\n            <Form.Item name={['setConditionals', props.set, 1]} valuePropName='checked'>\n              <Switch disabled={props.p2Checked} />\n            </Form.Item>\n          </Flex>\n        </Flex>\n      </Popover>\n    )\n  }\n}\nConditionalSetOption.propTypes = {\n  description: PropTypes.string,\n  p2Checked: PropTypes.bool,\n  p4Checked: PropTypes.bool,\n  set: PropTypes.string,\n  conditional: PropTypes.string,\n  selectOptions: PropTypes.array,\n}\n","import {\n  Button,\n  Cascader,\n  ConfigProvider,\n  Divider,\n  Flex,\n  Form,\n  Image,\n  InputNumber,\n  Select,\n  Switch,\n  Tag,\n  Typography,\n} from 'antd';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Optimizer } from '../lib/optimizer';\nimport styled from 'styled-components';\nimport { Constants } from '../lib/constants.ts';\nimport FormRow from './optimizerTab/FormRow';\nimport FilterContainer from './optimizerTab/FilterContainer';\nimport FormCard from './optimizerTab/FormCard';\nimport OptimizerOptions from './optimizerTab/OptimizerOptions';\nimport { CheckOutlined, CloseOutlined, SettingOutlined } from '@ant-design/icons';\nimport { HeaderText } from './HeaderText';\nimport { OptimizerTabController } from '../lib/optimizerTabController';\nimport { TooltipImage } from './TooltipImage';\nimport { SaveState } from '../lib/saveState';\nimport { CharacterConditionals } from \"../lib/characterConditionals\";\nimport { LightConeConditionals } from \"../lib/lightConeConditionals\";\nimport { FormStatRollSlider, FormStatRollSliderTopPercent } from \"./optimizerTab/FormStatRollSlider\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getDefaultForm } from \"../lib/defaultForm\";\nimport { FormSetConditionals } from \"./optimizerTab/FormSetConditionals\";\nimport { Assets } from \"../lib/assets\";\nimport PropTypes from \"prop-types\";\nimport DB from \"../lib/db\";\nimport { Message } from \"../lib/message\";\nimport { Hint } from \"../lib/hint\";\nimport { Utils } from \"../lib/utils\";\n\nconst { Text } = Typography;\nconst { SHOW_CHILD } = Cascader;\n\nlet HorizontalDivider = styled(Divider)`\n  margin: 5px 0px;\n`\n\nfunction generateOrnamentsOptions() {\n  return Object.values(Constants.SetsOrnaments).map(x => {\n    return {\n      value: x,\n      label:\n        <Flex gap={5} align='center'>\n          <img src={Assets.getSetImage(x, Constants.Parts.PlanarSphere)} style={{ width: 26, height: 26 }}></img>\n          <div style={{ display: 'inline-block', overflow: 'hidden', textOverflow: 'ellipsis', width: 250, whiteSpace: 'nowrap' }}>\n            {x}\n          </div>\n        </Flex>\n    }\n  })\n}\n\nfunction generateSetsOptions() {\n  let result = [\n    {\n      value: '4 Piece',\n      label: '4 Piece',\n      children: []\n    },\n    {\n      value: '2 Piece',\n      label: '2 Piece',\n      children: []\n    }\n  ];\n\n  let childrenWithAny = Object.entries(Constants.SetsRelics).map(set => {\n    return {\n      value: set[1],\n      label: set[1]\n    }\n  })\n  childrenWithAny.push({\n    value: 'Any',\n    label: 'Any'\n  })\n\n  function generateLabel(value, parens, label) {\n    let imageSrc = value == 'Any' ? Assets.getBlank() : Assets.getSetImage(value, Constants.Parts.Head)\n    return (\n      <Flex gap={5} align='center'>\n        <img src={imageSrc} style={{ width: 26, height: 26 }}></img>\n        <div style={{ display: 'inline-block', overflow: 'hidden', textOverflow: 'ellipsis', width: 250, whiteSpace: 'nowrap' }}>\n          {parens + label}\n        </div>\n      </Flex>\n    )\n  }\n\n  for (let set of Object.entries(Constants.SetsRelics)) {\n    result[0].children.push({\n      value: set[1],\n      label: generateLabel(set[1], '(4) ', set[1])\n    })\n\n    result[1].children.push({\n      value: set[1],\n      label: generateLabel(set[1], '(2) ', set[1]),\n      children: childrenWithAny.map(x => {\n        let parens = x.value == 'Any' ? '(0) ' : '(2) ';\n        return {\n          value: x.value,\n          label: generateLabel(x.value, parens, x.label)\n        }\n      })\n    })\n  }\n\n  return result;\n}\n\nconst FormStatTextStyled = styled(Text)`\n  display: block;\n  text-align: center;\n`\n\nconst InputNumberStyled = styled(InputNumber)`\n  width: 62px\n`\n\nfunction FilterRow(props) {\n  return (\n    <Flex justify='space-between'>\n      <Form.Item size=\"default\" name={`min${props.name}`}>\n        <InputNumberStyled size=\"small\" controls={false} />\n      </Form.Item>\n      <FormStatTextStyled>{props.label}</FormStatTextStyled>\n      <Form.Item size=\"default\" name={`max${props.name}`}>\n        <InputNumberStyled size=\"small\" controls={false} />\n      </Form.Item>\n    </Flex>\n  )\n}\nFilterRow.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n}\n\n\nlet panelWidth = 203;\nlet defaultGap = 5;\n\nexport default function OptimizerForm() {\n  console.log('======================================================================= RENDER')\n  console.log('OptimizerForm')\n  const [optimizerForm] = Form.useForm();\n  window.optimizerForm = optimizerForm\n\n  const characterEidolon = Form.useWatch('characterEidolon', optimizerForm);\n  const lightConeSuperimposition = Form.useWatch('lightConeSuperimposition', optimizerForm);\n\n  const setConditionalSetEffectsDrawerOpen = window.store(s => s.setConditionalSetEffectsDrawerOpen);\n\n  const activeKey = window.store(s => s.activeKey)\n  const characters = window.store(s => s.characters) // characters set in this localStorage instance\n  const setStatDisplay = window.store(s => s.setStatDisplay)\n\n  const [optimizationId, setOptimizationId] = useState();\n\n  const characterOptions = useMemo(() => Utils.generateCharacterOptions(), []);\n\n  const lightConeOptions = useMemo(() => {\n    let lcData = JSON.parse(JSON.stringify(DB.getMetadata().lightCones));\n\n    for (let value of Object.values(lcData)) {\n      value.value = value.id;\n      value.label = value.name;\n    }\n\n    return Object.values(lcData).sort((a, b) => a.label.localeCompare(b.label))\n  }, []);\n\n  const [selectedLightCone, setSelectedLightCone] = useState({ id: 'None', name: 'Light Cone' });\n  window.selectedLightCone = selectedLightCone\n  window.setSelectedLightCone = (x) => {\n    setSelectedLightCone(x)\n  }\n\n  useEffect(() => {\n    let lcFn = LightConeConditionals.get(optimizerForm.getFieldsValue())\n    let form = optimizerForm.getFieldsValue()\n    let defaults = lcFn.defaults()\n    let lightConeForm = form.lightConeConditionals || {}\n\n    // We can't apply the form to dynamically generated elements, so we use an effect to set the form value to default\n    // Only if there's a missing field\n    Object.assign(defaults, lightConeForm)\n    if (Object.values(defaults).includes(undefined)) {\n      optimizerForm.setFieldValue('lightConeConditionals', lcFn.defaults())\n    }\n  }, [selectedLightCone])\n\n  const initialCharacter = useMemo(() => {\n    let characters = DB.getCharacters(); // retrieve instance localStore saved chars\n    if (characters && characters.length > 0) {\n      let character = characters[0];\n      lightConeSelectorChange(character.form.lightCone)\n      setStatDisplay(character.form.statDisplay || 'base')\n      return characterOptions.find(x => x.id == character.id)\n    }\n  }, []);\n\n  const [selectedCharacter, setSelectedCharacter] = useState(() => initialCharacter);\n  window.setSelectedCharacter = setSelectedCharacter\n\n  // TODO: refactor if/when view-routing/deep-linking implemented\n  // coming from char tab\n  const selectedOptimizerCharacter = window.store(s => s.selectedOptimizerCharacter);\n  const setSelectedOptimizerCharacter = window.store(s => s.setSelectedOptimizerCharacter);\n  useEffect(() => {\n    if (selectedOptimizerCharacter && selectedOptimizerCharacter.id !== selectedCharacter.id) {\n      characterSelectorChange(selectedOptimizerCharacter.id);\n      setSelectedOptimizerCharacter(null);\n    }\n  }, [selectedOptimizerCharacter]);\n\n  useEffect(() => {\n    if (activeKey == 'optimizer' && !selectedCharacter && characters && characters.length > 0 && characters[0].id) {\n      characterSelectorChange(characters[0].id)\n    }\n  }, [activeKey])\n\n  const levelOptions = useMemo(() => {\n    let levelStats = []\n    for (let i = 80; i >= 1; i--) {\n      levelStats.push({\n        value: i,\n        label: `Lv. ${i}`\n      })\n    }\n\n    return levelStats\n  }, []);\n\n  const enemyLevelOptions = useMemo(() => {\n    let levelStats = []\n    for (let i = 95; i >= 1; i--) {\n      levelStats.push({\n        value: i,\n        label: `Lv. ${i}`\n      })\n    }\n\n    return levelStats\n  }, []);\n\n  const enemyCountOptions = useMemo(() => {\n    let levelStats = []\n    for (let i = 1; i <= 5; i += 2) {\n      levelStats.push({\n        value: i,\n        label: `${i} target${i > 1 ? 's' : ''}`\n      })\n    }\n\n    return levelStats\n  }, []);\n\n  const enemyResistanceOptions = useMemo(() => {\n    let levelStats = []\n    for (let i = 20; i <= 60; i += 20) {\n      levelStats.push({\n        value: i / 100,\n        label: `${i}% RES`\n      })\n    }\n\n    return levelStats\n  }, []);\n\n  const enemyHpPercentOptions = useMemo(() => {\n    let levelStats = []\n    for (let i = 100; i >= 1; i--) {\n      levelStats.push({\n        value: i / 100,\n        label: `${i}% HP`\n      })\n    }\n\n    return levelStats\n  }, []);\n\n  const superimpositionOptions = useMemo(() => {\n    return [\n      { value: 1, label: 'S1' },\n      { value: 2, label: 'S2' },\n      { value: 3, label: 'S3' },\n      { value: 4, label: 'S4' },\n      { value: 5, label: 'S5' },\n    ]\n  }, []);\n\n  const eidolonOptions = useMemo(() => {\n    return [\n      { value: 0, label: 'E0' },\n      { value: 1, label: 'E1' },\n      { value: 2, label: 'E2' },\n      { value: 3, label: 'E3' },\n      { value: 4, label: 'E4' },\n      { value: 5, label: 'E5' },\n      { value: 6, label: 'E6' },\n    ]\n  }, []);\n\n\n  function characterSelectorChange(id) {\n    setSelectedCharacter(characterOptions.find(x => x.id == id))\n    OptimizerTabController.changeCharacter(id)\n  }\n\n  function lightConeSelectorChange(id) {\n    setSelectedLightCone(lightConeOptions.find(x => x.id == id))\n  }\n\n  const onFinish = (x) => {\n    OptimizerTabController.fixForm(x);\n    if (!OptimizerTabController.validateForm(x)) {\n      return\n    }\n    DB.addFromForm(x)\n    SaveState.save()\n    console.log('Form finished', x);\n\n    let optimizationId = uuidv4()\n    setOptimizationId(optimizationId)\n    x.optimizationId = optimizationId\n\n    Optimizer.optimize(x)\n  };\n\n  const onFinishFailed = () => {\n    Message.error('Submit failed!');\n  };\n\n  const onValuesChange = (changedValues, allValues, bypass) => {\n    if (!changedValues || !allValues || !allValues.characterId) return;\n    let keys = Object.keys(changedValues)\n    if (bypass) {\n      // Allow certain values to refresh permutations.\n      // Sliders should only update at the end of the drag\n    } else if (keys.length == 1 && (\n      keys[0].startsWith('min') ||\n      keys[0].startsWith('max') ||\n      keys[0].startsWith('buff') ||\n      keys[0].startsWith('weights') ||\n      keys[0].startsWith('statDisplay') ||\n      keys[0] == 'characterConditionals' ||\n      keys[0] == 'lightConeConditionals')) {\n      return;\n    }\n    let request = allValues\n\n    console.log('Values changed', request, changedValues);\n\n    const [relics, preFilteredRelicsByPart] = Optimizer.getFilteredRelics(request, allValues.characterId);\n\n    let permutationDetails = {\n      Head: relics.Head.length,\n      Hands: relics.Hands.length,\n      Body: relics.Body.length,\n      Feet: relics.Feet.length,\n      PlanarSphere: relics.PlanarSphere.length,\n      LinkRope: relics.LinkRope.length,\n      HeadTotal: preFilteredRelicsByPart[Constants.Parts.Head].length,\n      HandsTotal: preFilteredRelicsByPart[Constants.Parts.Hands].length,\n      BodyTotal: preFilteredRelicsByPart[Constants.Parts.Body].length,\n      FeetTotal: preFilteredRelicsByPart[Constants.Parts.Feet].length,\n      PlanarSphereTotal: preFilteredRelicsByPart[Constants.Parts.PlanarSphere].length,\n      LinkRopeTotal: preFilteredRelicsByPart[Constants.Parts.LinkRope].length\n    }\n    window.store.getState().setPermutationDetails(permutationDetails)\n    window.store.getState().setPermutations(relics.Head.length * relics.Hands.length * relics.Body.length * relics.Feet.length * relics.PlanarSphere.length * relics.LinkRope.length)\n  }\n  window.onOptimizerFormValuesChange = onValuesChange;\n\n  const filterOption = (input, option) =>\n    (option?.label ?? '').toLowerCase().includes(input.toLowerCase());\n\n  let parentW = 233;\n  let parentH = 350;\n  let innerW = 350;\n  let innerH = 400;\n\n  const initialValues = useMemo(() => {\n    if (selectedCharacter) {\n      let matchingCharacter = DB.getCharacterById(selectedCharacter.id)\n      if (matchingCharacter) {\n        return OptimizerTabController.getDisplayFormValues(matchingCharacter.form)\n      }\n    }\n\n    return getDefaultForm(initialCharacter)\n  }, [initialCharacter]);\n\n  useEffect(() => {\n    onValuesChange({}, initialValues)\n  }, [initialValues])\n\n  function cancelClicked() {\n    console.log('Cancel clicked');\n    Optimizer.cancel(optimizationId)\n  }\n  window.optimizerCancelClicked = cancelClicked\n\n  function resetClicked() {\n    console.log('Reset clicked');\n    OptimizerTabController.resetFilters()\n  }\n  window.optimizerResetClicked = resetClicked\n\n  function filterClicked() {\n    console.log('Filter clicked');\n    OptimizerTabController.applyRowFilters()\n  }\n  window.optimizerFilterClicked = filterClicked\n\n  function startClicked() {\n    console.log('Start clicked');\n    optimizerForm.submit()\n  }\n  window.optimizerStartClicked = startClicked\n\n  function OrnamentSetTagRenderer(props) {\n    const { value, closable, onClose } = props;\n    const onPreventMouseDown = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n    return (\n      <Tag\n        onMouseDown={onPreventMouseDown}\n        closable={closable}\n        onClose={onClose}\n        style={{ display: 'flex', flexDirection: 'row', paddingInline: '1px', marginInlineEnd: '4px', height: 22, alignItems: 'center', overflow: 'hidden' }}\n      >\n        <Flex>\n          <img title={value} src={Assets.getSetImage(value, Constants.Parts.PlanarSphere)} style={{ width: 26, height: 26 }}></img>\n        </Flex>\n      </Tag>\n    );\n  }\n  OrnamentSetTagRenderer.propTypes = {\n    value: PropTypes.string,\n    closable: PropTypes.bool,\n    onClose: PropTypes.func,\n  }\n\n  function RelicSetTagRenderer(props) {\n    const { value, closable, onClose } = props;\n    // The value comes in as:\n    // \"2 PieceBand of Sizzling Thunder__RC_CASCADER_SPLIT__Guard of Wuthering Snow\"\n    // 3 -> render both, any render one, 2 -> render first twice\n    let pieces = value.split('__RC_CASCADER_SPLIT__')\n    let inner\n    if (pieces.length == 3) {\n      if (pieces[2] == 'Any') {\n        inner =\n          <React.Fragment>\n            <img title={pieces[1]} src={Assets.getSetImage(pieces[1], Constants.Parts.Head)} style={{ width: 26, height: 26 }}></img>\n          </React.Fragment>\n      } else {\n        inner =\n          <React.Fragment>\n            <img title={pieces[1]} src={Assets.getSetImage(pieces[1], Constants.Parts.Head)} style={{ width: 26, height: 26 }}></img>\n            <img title={pieces[2]} src={Assets.getSetImage(pieces[2], Constants.Parts.Head)} style={{ width: 26, height: 26 }}></img>\n          </React.Fragment>\n      }\n    } else {\n      inner =\n        <React.Fragment>\n          <img title={pieces[1]} src={Assets.getSetImage(pieces[1], Constants.Parts.Head)} style={{ width: 26, height: 26 }}></img>\n          <img title={pieces[1]} src={Assets.getSetImage(pieces[1], Constants.Parts.Head)} style={{ width: 26, height: 26 }}></img>\n        </React.Fragment>\n    }\n    RelicSetTagRenderer.propTypes = {\n      value: PropTypes.string,\n      closable: PropTypes.bool,\n      onClose: PropTypes.func,\n    }\n\n    const onPreventMouseDown = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n    return (\n      <Tag\n        onMouseDown={onPreventMouseDown}\n        closable={closable}\n        onClose={onClose}\n        style={{ display: 'flex', flexDirection: 'row', paddingInline: '1px', marginInlineEnd: '4px', height: 22, alignItems: 'center', overflow: 'hidden' }}\n      >\n        <Flex>\n          {inner}\n        </Flex>\n      </Tag>\n    );\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <Form\n        form={optimizerForm}\n        layout=\"vertical\"\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        onValuesChange={onValuesChange}\n        initialValues={initialValues}\n      >\n        <FormSetConditionals />\n\n        <FilterContainer>\n          <FormRow gap={defaultGap} title='Character options'>\n            <FormCard style={{ overflow: 'hidden' }}>\n              <div style={{ width: `${parentW}px`, height: `${parentH}px`, borderRadius: '10px' }}>\n                <Image\n                  preview={false}\n                  width={innerW}\n                  src={Assets.getCharacterPreviewById(selectedCharacter?.id)}\n                  style={{ transform: `translate(${(innerW - parentW) / 2 / innerW * -100}%, ${(innerH - parentH) / 2 / innerH * -100}%)` }}\n                />\n              </div>\n            </FormCard>\n\n            <FormCard>\n              <Flex justify='space-between' align='center'>\n                <HeaderText>Character</HeaderText>\n                <TooltipImage type={Hint.character()} />\n              </Flex>\n              <Flex gap={defaultGap}>\n                <Form.Item size=\"default\" name='characterId'>\n                  <Select\n                    showSearch\n                    filterOption={filterOption}\n                    style={{ width: panelWidth }}\n                    onChange={characterSelectorChange}\n                    options={characterOptions}\n                  />\n                </Form.Item>\n              </Flex>\n              <Flex gap={defaultGap} justify='space-between'>\n                <Form.Item size=\"default\" name='characterLevel'>\n                  <Select\n                    showSearch\n                    style={{ width: (panelWidth - defaultGap) / 2 }}\n                    options={levelOptions}\n                  />\n                </Form.Item>\n                <Form.Item size=\"default\" name='characterEidolon'>\n                  <Select\n                    showSearch\n                    style={{ width: (panelWidth - defaultGap) / 2 }}\n                    options={eidolonOptions}\n                  />\n                </Form.Item>\n              </Flex>\n\n              <Flex justify='space-between' align='center'>\n                <HeaderText>Light cone</HeaderText>\n                <TooltipImage type={Hint.lightCone()} />\n              </Flex>\n              <Flex vertical gap={defaultGap}>\n                <Flex gap={defaultGap}>\n                  <Form.Item size=\"default\" name='lightCone'>\n                    <Select\n                      showSearch\n                      filterOption={filterOption}\n                      style={{ width: panelWidth }}\n                      onChange={lightConeSelectorChange}\n                      options={lightConeOptions}\n                    />\n                  </Form.Item>\n                </Flex>\n                <Flex gap={defaultGap} justify='space-between'>\n                  <Form.Item size=\"default\" name='lightConeLevel'>\n                    <Select\n                      showSearch\n                      style={{ width: (panelWidth - defaultGap) / 2 }}\n                      options={levelOptions}\n                    />\n                  </Form.Item>\n                  <Form.Item size=\"default\" name='lightConeSuperimposition'>\n                    <Select\n                      showSearch\n                      style={{ width: (panelWidth - defaultGap) / 2 }}\n                      options={superimpositionOptions}\n                    />\n                  </Form.Item>\n                </Flex>\n              </Flex>\n            </FormCard>\n\n            <FormCard>\n              {CharacterConditionals.getDisplayForCharacter(selectedCharacter?.id, characterEidolon)}\n            </FormCard>\n\n            <FormCard justify='space-between'>\n              {LightConeConditionals.getDisplayForLightCone(selectedLightCone?.id, lightConeSuperimposition)}\n\n              <Flex vertical gap={5} style={{ marginBottom: 5 }}>\n                <Flex justify='space-between' align='center'>\n                  <HeaderText style={{}}>Enemy options</HeaderText>\n                  <TooltipImage type={Hint.enemyOptions()} />\n                </Flex>\n\n                <Flex gap={defaultGap} justify='space-between'>\n                  <Form.Item size=\"default\" name='enemyLevel'>\n                    <Select\n                      showSearch\n                      filterOption={filterOption}\n                      style={{ width: (panelWidth - defaultGap) / 2 }}\n                      options={enemyLevelOptions}\n                    />\n                  </Form.Item>\n                  <Form.Item size=\"default\" name='enemyCount'>\n                    <Select\n                      showSearch\n                      filterOption={filterOption}\n                      style={{ width: (panelWidth - defaultGap) / 2 }}\n                      options={enemyCountOptions}\n                    />\n                  </Form.Item>\n                </Flex>\n\n                <Flex gap={defaultGap} justify='space-between'>\n                  <Form.Item size=\"default\" name='enemyResistance'>\n                    <Select\n                      showSearch\n                      filterOption={filterOption}\n                      style={{ width: (panelWidth - defaultGap) / 2 }}\n                      options={enemyResistanceOptions}\n                    />\n                  </Form.Item>\n                  <Form.Item size=\"default\" name='enemyHpPercent'>\n                    <Select\n                      showSearch\n                      filterOption={filterOption}\n                      style={{ width: (panelWidth - defaultGap) / 2 }}\n                      options={enemyHpPercentOptions}\n                    />\n                  </Form.Item>\n                </Flex>\n\n                <Flex align='center'>\n                  <Form.Item name=\"enemyElementalWeak\" valuePropName=\"checked\">\n                    <Switch\n                      checkedChildren={<CheckOutlined />}\n                      unCheckedChildren={<CloseOutlined />}\n                      defaultChecked\n                      style={{ width: 45, marginRight: 10 }}\n                    />\n                  </Form.Item>\n                  <Text>Elemental weakness</Text>\n                </Flex>\n\n                <Flex align='center'>\n                  <Form.Item name=\"enemyWeaknessBroken\" valuePropName=\"checked\">\n                    <Switch\n                      checkedChildren={<CheckOutlined />}\n                      unCheckedChildren={<CloseOutlined />}\n                      style={{ width: 45, marginRight: 10 }}\n                    />\n                  </Form.Item>\n                  <Text>Weakness broken</Text>\n                </Flex>\n              </Flex>\n            </FormCard>\n\n            <OptimizerOptions defaultGap={defaultGap} panelWidth={panelWidth} />\n          </FormRow>\n\n          <FormRow title='Relic & stat filters'>\n            <FormCard>\n              <Flex vertical gap={defaultGap}>\n                <Flex justify='space-between' align='center'>\n                  <HeaderText>Main stats</HeaderText>\n                  <TooltipImage type={Hint.mainStats()} />\n                </Flex>\n                <Form.Item size=\"default\" name='mainBody'>\n                  <Select\n                    mode=\"multiple\"\n                    allowClear\n                    style={{\n                      width: panelWidth,\n                    }}\n                    placeholder=\"Body\"\n                    maxTagCount='responsive'>\n                    <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                    <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                    <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                    <Select.Option value={Constants.Stats.CR}>CRIT Rate</Select.Option>\n                    <Select.Option value={Constants.Stats.CD}>CRIT DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.OHB}>Outgoing Healing</Select.Option>\n                    <Select.Option value={Constants.Stats.EHR}>Effect HIT Rate</Select.Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item size=\"default\" name='mainFeet'>\n                  <Select\n                    mode=\"multiple\"\n                    allowClear\n                    style={{\n                      width: panelWidth,\n                    }}\n                    placeholder=\"Feet\"\n                    maxTagCount='responsive'>\n                    <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                    <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                    <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                    <Select.Option value={Constants.Stats.SPD}>Speed</Select.Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item size=\"default\" name='mainPlanarSphere'>\n                  <Select\n                    mode=\"multiple\"\n                    allowClear\n                    style={{\n                      width: panelWidth,\n                    }}\n                    placeholder=\"Planar Sphere\"\n                    listHeight={400}\n                    maxTagCount='responsive'>\n                    <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                    <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                    <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                    <Select.Option value={Constants.Stats.Physical_DMG}>Physical DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.Fire_DMG}>Fire DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.Ice_DMG}>Ice DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.Lightning_DMG}>Lightning DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.Wind_DMG}>Wind DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.Quantum_DMG}>Quantum DMG</Select.Option>\n                    <Select.Option value={Constants.Stats.Imaginary_DMG}>Imaginary DMG</Select.Option>\n                  </Select>\n                </Form.Item>\n\n                <Form.Item size=\"default\" name='mainLinkRope'>\n                  <Select\n                    mode=\"multiple\"\n                    allowClear\n                    style={{\n                      width: panelWidth,\n                    }}\n                    placeholder=\"Link Rope\"\n                    maxTagCount='responsive'>\n                    <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                    <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                    <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                    <Select.Option value={Constants.Stats.BE}>Break Effect</Select.Option>\n                    <Select.Option value={Constants.Stats.ERR}>Energy Regeneration Rate</Select.Option>\n                  </Select>\n                </Form.Item>\n              </Flex>\n\n              <Flex vertical gap={defaultGap}>\n                <Flex justify='space-between' align='center'>\n                  <HeaderText>Sets</HeaderText>\n                  <TooltipImage type={Hint.sets()} />\n                </Flex>\n\n                <Form.Item size=\"default\" name='ornamentSets'>\n                  <Select\n                    dropdownStyle={{\n                      width: 250\n                    }}\n                    listHeight={500}\n                    mode=\"multiple\"\n                    allowClear\n                    style={{\n                      width: panelWidth\n                    }}\n                    options={generateOrnamentsOptions()}\n                    tagRender={OrnamentSetTagRenderer}\n                    placeholder=\"Planar Ornaments\"\n                    maxTagCount='responsive'>\n                  </Select>\n                </Form.Item>\n                <ConfigProvider\n                  theme={{\n                    components: {\n                      Cascader: {\n                        dropdownHeight: 625,\n                        controlItemWidth: 100,\n                        controlWidth: 100\n                      },\n                    },\n                  }}\n                >\n                  <Form.Item size=\"default\" name='relicSets'>\n                    <Cascader\n                      placeholder=\"Relics\"\n                      options={generateSetsOptions()}\n                      showCheckedStrategy={SHOW_CHILD}\n                      tagRender={RelicSetTagRenderer}\n                      placement='bottomLeft'\n                      maxTagCount='responsive'\n                      multiple={true}\n                      expandTrigger=\"hover\"\n                    />\n                  </Form.Item>\n                </ConfigProvider>\n              </Flex>\n\n              <Button\n                onClick={() => setConditionalSetEffectsDrawerOpen(true)}\n                icon={<SettingOutlined />}\n              >\n                Conditional set effects\n              </Button>\n            </FormCard>\n\n            <FormCard>\n              <Flex vertical gap={defaultGap}>\n                <Flex justify='space-between' align='center'>\n                  <HeaderText>Substat weight filter</HeaderText>\n                  <TooltipImage type={Hint.substatWeightFilter()} />\n                </Flex>\n\n                <Flex vertical gap={0}>\n                  <FormStatRollSlider text='HP' name={Constants.Stats.HP_P} />\n                  <FormStatRollSlider text='ATK' name={Constants.Stats.ATK_P} />\n                  <FormStatRollSlider text='DEF' name={Constants.Stats.DEF_P} />\n                  <FormStatRollSlider text='SPD' name={Constants.Stats.SPD} />\n                  <FormStatRollSlider text='CR' name={Constants.Stats.CR} />\n                  <FormStatRollSlider text='CD' name={Constants.Stats.CD} />\n                  <FormStatRollSlider text='EHR' name={Constants.Stats.EHR} />\n                  <FormStatRollSlider text='RES' name={Constants.Stats.RES} />\n                  <FormStatRollSlider text='BE' name={Constants.Stats.BE} />\n                </Flex>\n                <HorizontalDivider />\n                <Text>Top % of weighted relics</Text>\n                <FormStatRollSliderTopPercent />\n              </Flex>\n            </FormCard>\n\n            <FormCard>\n              <Flex justify='space-between' align='center'>\n                <HeaderText>Stat filters</HeaderText>\n                <TooltipImage type={Hint.statFilters()} />\n              </Flex>\n              <Flex vertical gap={5}>\n                <FilterRow name='Hp' label='HP' />\n                <FilterRow name='Atk' label='ATK' />\n                <FilterRow name='Def' label='DEF' />\n                <FilterRow name='Spd' label='SPD' />\n                <FilterRow name='Cr' label='CR' />\n                <FilterRow name='Cd' label='CD' />\n                <FilterRow name='Ehr' label='EHR' />\n                <FilterRow name='Res' label='RES' />\n                <FilterRow name='Be' label='BE' />\n              </Flex>\n            </FormCard>\n\n            <FormCard>\n              <Flex vertical gap={defaultGap}>\n                <Flex justify='space-between' align='center'>\n                  <HeaderText>Rating filters</HeaderText>\n                  <TooltipImage type={Hint.ratingFilters()} />\n                </Flex>\n\n                <FilterRow name='Cv' label='CV' />\n                <FilterRow name='Weight' label='WEIGHT' />\n                <FilterRow name='Ehp' label='EHP' />\n                <FilterRow name='Basic' label='BASIC' />\n                <FilterRow name='Skill' label='SKILL' />\n                <FilterRow name='Ult' label='ULT' />\n                <FilterRow name='Fua' label='FUA' />\n                <FilterRow name='Dot' label='DOT' />\n              </Flex>\n            </FormCard>\n\n            <FormCard>\n              <Flex vertical gap={defaultGap}>\n                <Flex justify='space-between' align='center'>\n                  <HeaderText>Combat buffs</HeaderText>\n                  <TooltipImage type={Hint.combatBuffs()} />\n                </Flex>\n\n                <Flex vertical gap={defaultGap}>\n                  <Flex justify='space-between'>\n                    <Text>\n                      ATK\n                    </Text>\n                    <Form.Item size=\"default\" name='buffAtk'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      ATK %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffAtkP'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      Crit Rate %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffCr'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      Crit Dmg %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffCd'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      SPD\n                    </Text>\n                    <Form.Item size=\"default\" name='buffSpd'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      SPD %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffSpdP'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      BE %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffBe'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      Dmg Boost %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffDmgBoost'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      Def Shred %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffDefShred'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n\n                  <Flex justify='space-between'>\n                    <Text>\n                      RES Pen %\n                    </Text>\n                    <Form.Item size=\"default\" name='buffResPen'>\n                      <InputNumberStyled size=\"small\" controls={false} />\n                    </Form.Item>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </FormCard>\n          </FormRow>\n        </FilterContainer>\n      </Form>\n    </div>\n  )\n}\n","import { Flex, Image, Tooltip, } from 'antd';\nimport { CheckCircleFilled } from \"@ant-design/icons\";\nimport * as React from \"react\";\nimport { Constants } from \"./constants.ts\";\nimport { Assets } from \"./assets\";\nimport { Utils } from \"./utils\";\nimport PropTypes from \"prop-types\";\n\nexport const Renderer = {\n  floor: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    return Math.floor(x.value)\n  },\n\n  x100Tenths: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    return (x.value * 100).toFixed(1)\n  },\n\n  tenths: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    return (x.value).toFixed(1)\n  },\n\n  relicSet: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    let i = x.value\n\n    let count = Object.values(Constants.SetsRelics).length\n    let setImages = []\n\n    let s1 = i % count\n    let s2 = ((i - s1) / count) % count\n    let s3 = ((i - s2 * count - s1) / (count * count)) % count\n    let s4 = ((i - s3 * count * count - s2 * count - s1) / (count * count * count)) % count\n\n    let relicSets = [s1, s2, s3, s4]\n\n    while (relicSets.length > 0) {\n      let value = relicSets[0]\n      if (relicSets.lastIndexOf(value)) {\n        let setName = Object.entries(Constants.RelicSetToIndex).find(x => x[1] == value)[0]\n        let assetValue = Assets.getSetImage(setName, Constants.Parts.Head)\n        setImages.push(assetValue)\n\n        let otherIndex = relicSets.lastIndexOf(value)\n        relicSets.splice(otherIndex, 1)\n      }\n      relicSets.splice(0, 1)\n    }\n\n    return (\n      <Flex justify='center' style={{ marginTop: -1 }}>\n        <SetDisplay asset={setImages[0]} />\n        <SetDisplay asset={setImages[1]} />\n      </Flex>\n    )\n  },\n\n  ornamentSet: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    let i = x.value\n\n    let ornamentSetCount = Object.values(Constants.SetsOrnaments).length\n    let setImage\n\n    let s1 = i % ornamentSetCount;\n    let s2 = ((i - s1) / ornamentSetCount) % ornamentSetCount;\n\n    if (s1 == s2) {\n      let setName = Object.entries(Constants.OrnamentSetToIndex).find(x => x[1] == s1)[0]\n      setImage = Assets.getSetImage(setName, Constants.Parts.PlanarSphere)\n      return (\n        <Flex justify='center' style={{ marginTop: -1 }}>\n          <SetDisplay asset={setImage} />\n        </Flex>\n      )\n    } else {\n      return ''\n    }\n  },\n\n  anySet: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    let part = x.data.part\n\n    let src = Assets.getSetImage(x.data.set, part)\n    return (\n      <Flex justify='center' title={x.data.set} style={{ marginTop: -1 }}>\n        <SetDisplay asset={src} />\n      </Flex>\n    )\n  },\n\n  characterIcon: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    let equippedBy = x.data.equippedBy\n    if (!equippedBy) return ''\n\n    let src = Assets.getCharacterAvatarById(equippedBy)\n    return (\n      <Flex justify='center' style={{ marginTop: -1 }}>\n        <SetDisplay asset={src} />\n      </Flex>\n    )\n  },\n\n  readableStat: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    return Constants.StatsToReadable[x.value]\n  },\n\n  readablePart: (x) => {\n    if (x == undefined || x.value == undefined) return '';\n    return Constants.PartsToReadable[x.value]\n  },\n\n  hideZeroes: (x) => {\n    return x.value == 0 ? \"\" : x.value\n  },\n\n  hideZeroesFloor: (x) => {\n    return x.value == 0 ? \"\" : Math.floor(x.value)\n  },\n\n  hideZeroes10ths: (x) => {\n    return x.value == 0 ? \"\" : Utils.precisionRound(Math.floor(x.value * 10) / 10)\n  },\n\n  mainValueRenderer: (x) => {\n    let part = x.data.part\n    if (part == Constants.Parts.Hands || part == Constants.Parts.Head) {\n      return x.value == 0 ? \"\" : Math.floor(x.value)\n    }\n    return x.value == 0 ? \"\" : Utils.truncate10ths(x.value)\n  },\n\n  hideZeroesX100Tenths: (x) => {\n    return x.value == 0 ? \"\" : Renderer.x100Tenths(x)\n  },\n\n  scoreRenderer: (x) => {\n    return Math.round(x.value)\n  },\n\n  hideNaNAndRound: (x) => {\n    return isNaN(x.value) ? '' : Math.round(x.value)\n  },\n\n  renderSubstatNumber: (substat, relic) => {\n    if (substat.stat == Constants.Stats.SPD) {\n      if (relic.verified) {\n        return Utils.truncate10ths(substat.value).toFixed(1)\n      }\n      return Math.floor(substat.value)\n    }\n\n    return Utils.isFlat(substat.stat) ? Math.floor(substat.value) : Utils.truncate10ths(substat.value).toFixed(1)\n  },\n\n  renderMainStatNumber: (mainstat) => {\n    return Utils.isFlat(mainstat.stat) ? Math.floor(mainstat.value) : Utils.truncate10ths(mainstat.value).toFixed(1)\n  },\n\n  renderGradeCell: (x) => {\n    let relic = x.data\n    return Renderer.renderGrade(relic)\n  },\n  renderGrade: (relic) => {\n    let color = gradeToColor[relic.grade] || ''\n    return (\n      relic.verified\n        ?\n        <Tooltip mouseEnterDelay={0.4} title=\"Relic stats verified by relic scorer\"><CheckCircleFilled style={{ fontSize: '14px', color: color }} /></Tooltip>\n        : <div style={{ width: 14, height: 14, borderRadius: '50%', background: color }} />\n    )\n  },\n}\n\nlet gradeToColor = {\n  5: '#efb679',\n  4: '#cc52f1',\n  3: '#58beed',\n  2: '#63e0ac',\n}\n\nfunction SetDisplay(props) {\n  if (props.asset) {\n    return (\n      <Image src={props.asset} width={32} preview={false}>\n      </Image>\n    )\n  } else {\n    return ''\n  }\n}\nSetDisplay.propTypes = {\n  asset: PropTypes.string,\n}","import { Card, Divider, Flex, Typography } from 'antd';\nimport * as React from 'react';\nimport { Renderer } from \"../lib/renderer\";\nimport { Assets } from \"../lib/assets\";\nimport { Utils } from \"../lib/utils\";\nimport { Constants } from \"../lib/constants.ts\";\nimport DB from \"../lib/db\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nconst iconSize = 23\n\nfunction generateStat(stat, source, main, relic) {\n  if (!stat || !stat.stat || stat.value == null) {\n    return (\n      <Flex justify='space-between'>\n        <Flex>\n          <img src={Assets.getBlank()} style={{ width: iconSize, height: iconSize, marginRight: 3 }}></img>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  let displayValue\n  if (main) {\n    displayValue = Renderer.renderMainStatNumber(stat)\n  } else {\n    displayValue = Renderer.renderSubstatNumber(stat, relic)\n  }\n  displayValue += Utils.isFlat(stat.stat) ? '' : '%'\n\n  return (\n    <Flex justify='space-between'>\n      <Flex>\n        <img src={Assets.getStatIcon(stat.stat)} style={{ width: iconSize, height: iconSize, marginRight: 3 }}></img>\n        <Text>\n          {Constants.StatsToReadable[stat.stat]}\n        </Text>\n      </Flex>\n      <Text>\n        {displayValue}\n      </Text>\n    </Flex>\n  )\n}\n\nfunction getRelic(relic) {\n  if (!relic || !relic.id) {\n    return { substats: [] }\n  }\n\n  return DB.getRelicById(relic.id)\n}\n\nexport default function RelicPreview(props) {\n  // console.log('RelicPreview', props)\n  // const [hovered, setHovered] = React.useState(false);\n\n  let relic = getRelic(props.relic)\n  if (props.source == 'scorer') {\n    relic = props.relic\n  }\n\n  if (!relic) {\n    relic = {\n      enhance: 0,\n      part: undefined,\n      set: undefined,\n      grade: 0\n    }\n  }\n\n  let enhance = relic.enhance\n  let part = relic.part\n  let set = relic.set\n\n  let substats = relic.substats || []\n  let main = relic.main || {}\n  let relicSrc = set ? Assets.getSetImage(set, part) : Assets.getBlank()\n\n  let equippedBy = relic.equippedBy\n  let equippedBySrc = equippedBy ? Assets.getCharacterAvatarById(equippedBy) : Assets.getBlank()\n\n  let scored = props.relic != undefined && props.score != undefined\n\n  function relicClicked() {\n    console.log(relic, props)\n    if (!relic || !relic.part || !relic.set || props.source == 'scorer') return\n\n    window.setSelectedRelic(relic)\n    window.setEditModalOpen(true)\n  }\n\n  return (\n    <Card\n      size=\"small\"\n      hoverable={props.source != 'scorer'}\n      onClick={relicClicked}\n      style={{ width: 200, height: 280 }}\n    // onMouseEnter={() => setHovered(true)}\n    // onMouseLeave={() => setHovered(false)}\n    >\n      <Flex vertical justify='space-between' style={{ height: 255 }}>\n        <Flex justify='space-between' align='center'>\n          <img\n            style={{ height: 50, width: 50 }}\n            title={set}\n            src={relicSrc}\n          />\n          <Flex vertical align='center'>\n            <Flex align='center' gap={5}>\n              {Renderer.renderGrade(relic)}\n              <Flex style={{ width: 30 }} justify='space-around'>\n                <Text>\n                  {part != undefined ? `+${enhance}` : ''}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <img\n            style={{ height: 50, width: 50 }}\n            src={equippedBySrc}\n          />\n        </Flex>\n\n        <Divider style={{ margin: '6px 0px 6px 0px' }} />\n\n        {generateStat(main, props.source, true, relic)}\n\n        <Divider style={{ margin: '6px 0px 6px 0px' }} />\n\n        <Flex vertical gap={0}>\n          {generateStat(substats[0], props.source, false, relic)}\n          {generateStat(substats[1], props.source, false, relic)}\n          {generateStat(substats[2], props.source, false, relic)}\n          {generateStat(substats[3], props.source, false, relic)}\n        </Flex>\n\n        <Divider style={{ margin: '6px 0px 6px 0px' }} />\n\n        <Flex gap={4} justify='space-between'>\n          <Flex>\n            <img src={(scored) ? Assets.getStarBw() : Assets.getBlank()} style={{ width: iconSize, height: iconSize, marginRight: 3 }}></img>\n            <Text>\n              {(scored) ? 'Score' : ''}\n            </Text>\n          </Flex>\n          <Text>\n            {(scored) && `${props.score.score} (${props.score.rating})${props.score.meta.modified ? ' *' : ''}`}\n          </Text>\n        </Flex>\n      </Flex>\n    </Card>\n  );\n}\nRelicPreview.propTypes = {\n  relic: PropTypes.object,\n  source: PropTypes.string,\n  characterId: PropTypes.string,\n  score: PropTypes.object,\n}\n","import { Constants } from \"../lib/constants\";\nimport { Character } from \"../types/Character\";\n\nimport DB from \"./db.js\";\n\nconst minRollValue = 5.1 // Use truncated decimal instead of 5.184 because OCR'd results show truncated\nlet mainStatFreeRolls\n\nfunction setMainStatFreeRolls() {\n  if (!mainStatFreeRolls) {\n    mainStatFreeRolls = {\n      [Constants.Parts.Body]: {\n        [Constants.Stats.HP_P]: 1.32,\n        [Constants.Stats.ATK_P]: 1.284,\n        [Constants.Stats.DEF_P]: 1.305,\n        [Constants.Stats.CR]: 1.644,\n        [Constants.Stats.CD]: 1.658,\n        [Constants.Stats.OHB]: 1.712,\n        [Constants.Stats.EHR]: 1.668\n      },\n      [Constants.Parts.Feet]: {\n        [Constants.Stats.HP_P]: 1.058,\n        [Constants.Stats.ATK_P]: 1.019,\n        [Constants.Stats.DEF_P]: 1,\n        [Constants.Stats.SPD]: 1.567\n      },\n      [Constants.Parts.PlanarSphere]: {\n        [Constants.Stats.HP_P]: 1.583,\n        [Constants.Stats.ATK_P]: 1.559,\n        [Constants.Stats.DEF_P]: 1.587,\n        [Constants.Stats.Physical_DMG]: 1.763,\n        [Constants.Stats.Fire_DMG]: 1.763,\n        [Constants.Stats.Ice_DMG]: 1.763,\n        [Constants.Stats.Lightning_DMG]: 1.763,\n        [Constants.Stats.Wind_DMG]: 1.763,\n        [Constants.Stats.Quantum_DMG]: 1.763,\n        [Constants.Stats.Imaginary_DMG]: 1.763,\n      },\n      [Constants.Parts.LinkRope]: {\n        [Constants.Stats.HP_P]: 1.073,\n        [Constants.Stats.ATK_P]: 1.076,\n        [Constants.Stats.DEF_P]: 1.172,\n        [Constants.Stats.BE]: 1.416,\n        [Constants.Stats.ERR]: 2\n      }\n    }\n  }\n}\n\nconst ratingToRolls = {\n  'F': 1,\n  'D': 2,\n  'C': 3,\n  'B': 4,\n  'A': 5,\n  'S': 6,\n  'SS': 7,\n  'SSS': 8,\n  'WTF': 9,\n}\nconst ratings: { threshold: number, rating: string }[] = [];\nfor (const x of Object.entries(ratingToRolls)) {\n  ratings.push({\n    threshold: x[1],\n    rating: x[0]\n  })\n}\n\nfunction countPairs(arr) {\n  let pairs = 0;\n  const obj = {};\n  arr.forEach(i => {\n    if (obj[i]) {\n      pairs += 1;\n      obj[i] = 0;\n    } else {\n      obj[i] = 1;\n    }\n  });\n  return pairs;\n}\n\nexport const RelicScorer = {\n  scoreCharacterWithRelics: (character, relics) => {\n    if (!character || !character.id) return {}\n\n    const scoredRelics = relics.map(x => RelicScorer.score(x, character.id))\n\n    let sum = 0\n    for (const relic of scoredRelics) {\n      sum += Number(relic.score) + Number(relic.mainStatScore)\n    }\n\n    const missingSets = 3 - countPairs(relics.filter(x => x != undefined).map(x => x.set))\n    const deduction = missingSets * minRollValue * 3\n    console.log(`Missing sets ${missingSets} sets, deducting ${deduction} score`)\n    sum = Math.max(0, sum - deduction)\n\n    const base = 64.8 * 4\n    const avgSubstatScore = (sum - base) / 6\n\n    let rating = 'F'\n    for (let i = 0; i < ratings.length; i++) {\n      if (avgSubstatScore >= ratings[i].threshold * minRollValue) {\n        rating = ratings[i].rating\n        if (avgSubstatScore >= (ratings[i].threshold + 0.5) * (minRollValue)) {\n          rating += '+'\n        }\n      }\n    }\n\n    return {\n      relics: scoredRelics,\n      totalScore: sum,\n      totalRating: rating\n    }\n  },\n\n  scoreCharacter: (character: Character) => {\n    if (!character || !character.id) return {}\n\n    console.log('SCORE CHARACTER', character)\n    const relicsById = window.store.getState().relicsById\n    const relics = Object.values(character.equipped).map(x => relicsById[x])\n\n    return RelicScorer.scoreCharacterWithRelics(character, relics)\n  },\n\n  score: (relic, characterId) => {\n    // console.log('score', relic, characterId)\n\n    setMainStatFreeRolls()\n\n    if (!relic) {\n      return {\n        score: 0,\n        rating: 'N/A',\n        mainStatScore: 0\n      }\n    }\n\n    if (!characterId) {\n      if (relic.optimizerCharacterId) {\n        characterId = relic.optimizerCharacterId\n      } else if (relic.equippedBy) {\n        characterId = relic.equippedBy\n      } else {\n        console.log('no id found')\n        return {\n          score: 0,\n          rating: 'N/A',\n          mainStatScore: 0\n        }\n      }\n    }\n\n    const scaling = {\n      [Constants.Stats.HP_P]: 64.8 / 43.2,\n      [Constants.Stats.ATK_P]: 64.8 / 43.2,\n      [Constants.Stats.DEF_P]: 64.8 / 54,\n      [Constants.Stats.HP]: 1 / (DB.getMetadata().characters[characterId].promotions[80][Constants.Stats.HP] * 2 * 0.01) * (64.8 / 43.2),\n      [Constants.Stats.ATK]: 1 / (DB.getMetadata().characters[characterId].promotions[80][Constants.Stats.ATK] * 2 * 0.01) * (64.8 / 43.2),\n      [Constants.Stats.DEF]: 1 / (DB.getMetadata().characters[characterId].promotions[80][Constants.Stats.DEF] * 2 * 0.01) * (64.8 / 54),\n      [Constants.Stats.CR]: 64.8 / 32.4,\n      [Constants.Stats.CD]: 64.8 / 64.8,\n      [Constants.Stats.OHB]: 64.8 / 34.5,\n      [Constants.Stats.EHR]: 64.8 / 43.2,\n      [Constants.Stats.RES]: 64.8 / 43.2,\n      [Constants.Stats.SPD]: 64.8 / 25,\n      [Constants.Stats.BE]: 64.8 / 64.8,\n    }\n\n    const multipliers = DB.getScoringMetadata(characterId).stats\n\n    let sum = 0\n    for (const substat of relic.substats) {\n      substat.scoreMeta = {\n        multiplier: (multipliers[substat.stat] || 0),\n        score: substat.value * (multipliers[substat.stat] || 0) * scaling[substat.stat]\n      }\n      sum += substat.scoreMeta.score\n    }\n\n    if (relic.part == Constants.Parts.Body || relic.part == Constants.Parts.Feet || relic.part == Constants.Parts.PlanarSphere || relic.part == Constants.Parts.LinkRope) {\n      sum += mainStatFreeRolls[relic.part][relic.main.stat] * minRollValue\n    }\n\n    let rating = 'F'\n    for (let i = 0; i < ratings.length; i++) {\n      if (sum >= ratings[i].threshold * minRollValue) {\n        rating = ratings[i].rating\n        if (sum >= (ratings[i].threshold + 0.5) * (minRollValue)) {\n          rating += '+'\n        }\n      }\n    }\n\n    let mainStatScore = 0\n    const metaParts = DB.getScoringMetadata(characterId).parts\n    const max = 10.368 + 3.6288 * relic.grade * 3\n    if (metaParts[relic.part]) {\n      if (metaParts[relic.part].includes(relic.main.stat)) {\n        mainStatScore = max\n      } else {\n        mainStatScore = max * multipliers[relic.main.stat]\n      }\n    }\n\n    return {\n      score: sum.toFixed(1),\n      rating: rating,\n      mainStatScore: mainStatScore,\n      part: relic.part,\n      meta: DB.getScoringMetadata(characterId)\n    }\n  }\n}","import { Flex } from 'antd';\nimport * as React from 'react';\nimport RelicPreview from './RelicPreview';\nimport { RelicScorer } from '../lib/relicScorer.ts';\nimport DB from \"../lib/db\";\nimport { OptimizerTabController } from \"../lib/optimizerTabController\";\nimport PropTypes from \"prop-types\";\n\nexport default function OptimizerBuildPreview(props) {\n  console.log('OptimizerBuildPreview', props)\n\n  // TODO: Force update was a band-aid fix, revisit if we actually need to\n  const [, forceUpdate] = React.useReducer(o => !o, true);\n  window.forceOptimizerBuildPreviewUpdate = forceUpdate\n\n  let relicsById = DB.getRelicsById()\n  let characterId = OptimizerTabController.getForm().characterId\n\n  let headScore = props.build ? RelicScorer.score(relicsById[props.build?.Head], characterId) : undefined;\n  let handsScore = props.build ? RelicScorer.score(relicsById[props.build?.Hands], characterId) : undefined;\n  let bodyScore = props.build ? RelicScorer.score(relicsById[props.build?.Body], characterId) : undefined;\n  let feetScore = props.build ? RelicScorer.score(relicsById[props.build?.Feet], characterId) : undefined;\n  let planarSphereScore = props.build ? RelicScorer.score(relicsById[props.build?.PlanarSphere], characterId) : undefined;\n  let linkRopeScore = props.build ? RelicScorer.score(relicsById[props.build?.LinkRope], characterId) : undefined;\n\n  return (\n    <Flex gap={5} id=\"optimizerBuildPreviewContainer\">\n      <RelicPreview relic={relicsById[props.build?.Head]} score={headScore} />\n      <RelicPreview relic={relicsById[props.build?.Hands]} score={handsScore} />\n      <RelicPreview relic={relicsById[props.build?.Body]} score={bodyScore} />\n      <RelicPreview relic={relicsById[props.build?.Feet]} score={feetScore} />\n      <RelicPreview relic={relicsById[props.build?.PlanarSphere]} score={planarSphereScore} />\n      <RelicPreview relic={relicsById[props.build?.LinkRope]} score={linkRopeScore} />\n    </Flex>\n  );\n}\nOptimizerBuildPreview.propTypes = {\n  build: PropTypes.object,\n}\n","import { Button, Divider, Flex, Typography } from \"antd\";\nimport React from 'react';\nimport FormCard from \"./FormCard\";\nimport { HeaderText } from \"../HeaderText\";\nimport { TooltipImage } from \"../TooltipImage\";\nimport { OptimizerTabController } from \"../../lib/optimizerTabController\";\nimport { Hint } from \"../../lib/hint\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nfunction PermutationDisplay(props) {\n  let rightText = props.total\n    ? `${Number(props.right).toLocaleString()} / ${Number(props.total).toLocaleString()} - (${Math.ceil(Number(props.right) / Number(props.total) * 100)}%)`\n    : `${Number(props.right).toLocaleString()}`\n\n  return (\n    <Flex justify='space-between'>\n      <Text style={{ lineHeight: '24px' }}>\n        {props.left}\n      </Text>\n      <Divider style={{ margin: 'auto 10px', flexGrow: 1, width: 'unset', minWidth: 'unset' }} dashed />\n      <Text style={{ lineHeight: '24px' }}>\n        {rightText}\n      </Text>\n    </Flex>\n  )\n}\nPermutationDisplay.propTypes = {\n  total: PropTypes.number,\n  right: PropTypes.number,\n  left: PropTypes.string\n}\n\n\nlet defaultGap = 5\n\nexport default function Sidebar() {\n\n  const permutationDetails = window.store(s => s.permutationDetails)\n  const permutations = window.store(s => s.permutations)\n  const permutationsSearched = window.store(s => s.permutationsSearched)\n  const permutationsResults = window.store(s => s.permutationsResults)\n\n  return (\n    <Flex vertical style={{overflow: 'clip'}}>\n      <Flex style={{position: 'sticky', top: '50%', transform: 'translateY(-50%)', paddingLeft: 10}}>\n        <FormCard height={500}>\n          <Flex vertical gap={10}>\n            <Flex justify='space-between' align='center'>\n              <HeaderText>Permutations</HeaderText>\n              <TooltipImage type={Hint.optimizationDetails()} />\n            </Flex>\n\n            <Flex vertical>\n              <PermutationDisplay left='Head' right={permutationDetails.Head} total={permutationDetails.HeadTotal} />\n              <PermutationDisplay left='Hands' right={permutationDetails.Hands} total={permutationDetails.HandsTotal} />\n              <PermutationDisplay left='Body' right={permutationDetails.Body} total={permutationDetails.BodyTotal} />\n              <PermutationDisplay left='Feet' right={permutationDetails.Feet} total={permutationDetails.FeetTotal} />\n              <PermutationDisplay left='Rope' right={permutationDetails.LinkRope} total={permutationDetails.LinkRopeTotal} />\n              <PermutationDisplay left='Sphere' right={permutationDetails.PlanarSphere} total={permutationDetails.PlanarSphereTotal} />\n            </Flex>\n\n            <Flex vertical>\n              <PermutationDisplay left='Perms' right={permutations} />\n              <PermutationDisplay left='Searched' right={permutationsSearched} />\n              <PermutationDisplay left='Results' right={permutationsResults} />\n            </Flex>\n\n            <Flex justify='space-between' align='center' style={{marginTop: 10}}>\n              <HeaderText>Controls</HeaderText>\n              <TooltipImage type={Hint.actions()} />\n            </Flex>\n\n            <Flex gap={defaultGap} style={{ marginBottom: 2 }} vertical>\n              <Flex gap={defaultGap}>\n                <Button type=\"primary\" onClick={window.optimizerStartClicked} style={{ width: '205px' }} >\n                  Start\n                </Button>\n              </Flex>\n              <Flex gap={defaultGap}>\n                <Button onClick={window.optimizerCancelClicked} style={{ width: '100px' }} >\n                  Cancel\n                </Button>\n                <Button onClick={window.optimizerResetClicked} style={{ width: '100px' }} >\n                  Reset\n                </Button>\n              </Flex>\n              <Flex gap={defaultGap}>\n              </Flex>\n            </Flex>\n\n            <Flex justify='space-between' align='center' style={{marginTop: 10}}>\n              <HeaderText>Results</HeaderText>\n              {/*<TooltipImage type={Hint.actions()} />*/}\n            </Flex>\n            <Flex gap={defaultGap} justify='space-around'>\n              <Button onClick={window.optimizerFilterClicked} style={{ width: '100px' }} >\n                Filter\n              </Button>\n              <Button onClick={OptimizerTabController.equipClicked} style={{ width: '100px' }} >\n                Equip\n              </Button>\n            </Flex>\n          </Flex>\n        </FormCard>\n      </Flex>\n    </Flex>\n  )\n}","import tinygradient from 'tinygradient';\nimport { Constants } from \"./constants.ts\";\nimport { OptimizerTabController } from \"./optimizerTabController\";\n\nlet optimizerGridGradient = tinygradient([\n  { color: '#5A1A06', pos: 0 }, // red\n  { color: '#343127', pos: 0.35 },\n  { color: '#38821F', pos: 1 } // green\n]);\nlet relicGridGradient = tinygradient('#343127', '#38821F')\nlet relicColumnRanges\n\nexport const Gradient = {\n  getColor: (decimal, gradient) => {\n    return gradient.rgbAt(decimal).toHexString();\n  },\n\n  getOptimizerColumnGradient: (params) => {\n    let aggs = OptimizerTabController.getAggs()\n\n    try {\n      let colId = params.column.colId\n\n      if (params.data && aggs && OptimizerTabController.getColumnsToAggregate(true)[colId]) {\n        let min = aggs.minAgg[colId]\n        let max = aggs.maxAgg[colId]\n        let value = params.value\n\n        let range = (value - min) / (max - min);\n        if (max == min) {\n          range = 0.5\n        }\n        // console.log(min, max, value, range);\n\n        let color = Gradient.getColor(Math.min(Math.max(range, 0), 1), optimizerGridGradient)\n        return {\n          backgroundColor: color\n        };\n      }\n    } catch (e) { console.error(e) }\n  },\n\n  getRelicGradient(params) {\n    let col = params.column.colId\n    let value = params.value\n    if (!relicColumnRanges) {\n      // Not maxes, just for visual representation of gradient. Calculated by low roll x 5\n      relicColumnRanges = {\n        [`augmentedStats.${Constants.Stats.HP}`]: 169.35,\n        [`augmentedStats.${Constants.Stats.ATK}`]: 84.675,\n        [`augmentedStats.${Constants.Stats.DEF}`]: 84.675,\n        [`augmentedStats.${Constants.Stats.SPD}`]: 10,\n        [`augmentedStats.${Constants.Stats.ATK_P}`]: 0.1728,\n        [`augmentedStats.${Constants.Stats.HP_P}`]: 0.1728,\n        [`augmentedStats.${Constants.Stats.DEF_P}`]: 0.216,\n        [`augmentedStats.${Constants.Stats.CR}`]: 0.1296,\n        [`augmentedStats.${Constants.Stats.CD}`]: 0.2592,\n        [`augmentedStats.${Constants.Stats.EHR}`]: 0.1728,\n        [`augmentedStats.${Constants.Stats.RES}`]: 0.1728,\n        [`augmentedStats.${Constants.Stats.BE}`]: 0.2592,\n        'cs': 35,\n        'ss': 35,\n        'ds': 35,\n        'relicsTabWeight': 64.8,\n        'bestCaseWeight': 64.8,\n        'averageCaseWeight': 64.8,\n      }\n    }\n\n    if (value == 0) {\n      return {}\n    }\n\n    let range\n    if (col == 'relicsTabWeight' || col == 'bestCaseWeight' || col == 'averageCaseWeight') {\n      range = Math.max(0, value - 64.8) / relicColumnRanges[col]\n    } else {\n      range = value / relicColumnRanges[col]\n    }\n\n    let color = Gradient.getColor(Math.min(Math.max(range, 0), 1), relicGridGradient)\n\n    return {\n      backgroundColor: color\n    };\n  }\n}","import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport OptimizerForm from './OptimizerForm'\nimport { Flex, } from 'antd';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport { OptimizerTabController } from '../lib/optimizerTabController';\nimport OptimizerBuildPreview from './OptimizerBuildPreview';\nimport \"../style/style.css\";\nimport { Renderer } from '../lib/renderer';\nimport Sidebar from \"./optimizerTab/Sidebar\";\nimport PropTypes from \"prop-types\";\nimport { Constants } from \"../lib/constants.ts\";\nimport { Gradient } from \"../lib/gradient\";\n\nexport default function OptimizerTab(props) {\n  console.log('OptimizerTab', props)\n  const optimizerGrid = useRef();\n  window.optimizerGrid = optimizerGrid;\n\n  const [optimizerBuild, setOptimizerBuild] = useState();\n  window.setOptimizerBuild = setOptimizerBuild;\n\n  const cellClickedListener = useCallback(event => {\n    OptimizerTabController.cellClicked(event)\n  }, []);\n\n  const DIGITS_4 = 50;\n  const DIGITS_5 = 60;\n\n  const statDisplay = window.store(s => s.statDisplay)\n\n  let baseColumnDefs = [\n    { field: 'relicSetIndex', cellRenderer: Renderer.relicSet, width: 70, headerName: 'Set' },\n    { field: 'ornamentSetIndex', cellRenderer: Renderer.ornamentSet, width: 50, headerName: 'Set' },\n\n    { field: Constants.Stats.ATK, valueFormatter: Renderer.floor, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.DEF, valueFormatter: Renderer.floor, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.HP, valueFormatter: Renderer.floor, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.SPD, valueFormatter: Renderer.tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.CR, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'CR', cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.CD, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'CD', cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.EHR, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'EHR', cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.RES, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'RES', cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.BE, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'BE', cellStyle: Gradient.getOptimizerColumnGradient },\n    { field: Constants.Stats.ERR, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'ERR' },\n    { field: Constants.Stats.OHB, valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'HEAL' },\n\n    { field: 'ED', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'ELEM' },\n    { field: 'CV', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'CV' },\n    { field: 'EHP', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'EHP' },\n    { field: 'WEIGHT', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'WEIGHT' },\n\n    { field: 'BASIC', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'BASIC' },\n    { field: 'SKILL', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'SKILL' },\n    { field: 'ULT', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'ULT' },\n    { field: 'FUA', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'FUA' },\n    { field: 'DOT', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'DOT' },\n  ]\n\n  let combatColumnDefs = [\n    { field: 'relicSetIndex', cellRenderer: Renderer.relicSet, width: 70, headerName: 'Set' },\n    { field: 'ornamentSetIndex', cellRenderer: Renderer.ornamentSet, width: 50, headerName: 'Set' },\n\n    { field: 'xATK', valueFormatter: Renderer.floor, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ ATK' },\n    { field: 'xDEF', valueFormatter: Renderer.floor, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ DEF' },\n    { field: 'xHP', valueFormatter: Renderer.floor, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ HP' },\n    { field: 'xSPD', valueFormatter: Renderer.tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ SPD' },\n    { field: 'xCR', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ CR' },\n    { field: 'xCD', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ CD' },\n    { field: 'xEHR', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ EHR' },\n    { field: 'xRES', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ RES' },\n    { field: 'xBE', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, cellStyle: Gradient.getOptimizerColumnGradient, headerName: 'Σ BE' },\n    { field: 'xERR', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'Σ ERR' },\n    { field: 'xOHB', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'Σ HEAL' },\n\n    { field: 'xELEMENTAL_DMG', valueFormatter: Renderer.x100Tenths, width: DIGITS_4, headerName: 'Σ ELEM' },\n    { field: 'CV', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'CV' },\n    { field: 'EHP', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'EHP' },\n    { field: 'WEIGHT', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'WEIGHT' },\n\n    { field: 'BASIC', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'BASIC' },\n    { field: 'SKILL', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'SKILL' },\n    { field: 'ULT', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'ULT' },\n    { field: 'FUA', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'FUA' },\n    { field: 'DOT', valueFormatter: Renderer.floor, width: DIGITS_5, headerName: 'DOT' },\n  ]\n\n  const columnDefs = useMemo(() => statDisplay == 'combat' ? combatColumnDefs : baseColumnDefs, [statDisplay]);\n\n  const datasource = useMemo(() => {\n    return OptimizerTabController.getDataSource();\n  }, []);\n\n  const gridOptions = useMemo(() => ({\n    rowHeight: 33,\n    pagination: true,\n    rowSelection: 'single',\n    rowModelType: 'infinite',\n    datasource: datasource,\n    paginationPageSize: 500,\n    paginationPageSizeSelector: [100, 500, 1000],\n    cacheBlockSize: 500,\n    suppressDragLeaveHidesColumns: true,\n    suppressScrollOnNewData: true,\n    suppressCellFocus: true\n  }), []);\n\n  const defaultColDef = useMemo(() => ({\n    cellStyle: Gradient.getOptimizerColumnGradient,\n    sortable: true,\n    sortingOrder: ['desc', 'asc']\n  }), []);\n\n  return (\n    <div style={{ display: props.active ? 'block' : 'none' }}>\n      <Flex style={{ marginBottom: 10 }}>\n        <Flex vertical gap={10}>\n          <OptimizerForm />\n\n          <Flex>\n            <div id=\"optimizerGridContainer\" className=\"ag-theme-balham-dark\" style={{ width: 1225, minHeight: 300, height: 600, resize: 'vertical', overflow: 'hidden' }}>\n              <AgGridReact\n                ref={optimizerGrid}\n\n                gridOptions={gridOptions}\n\n                columnDefs={columnDefs}\n                defaultColDef={defaultColDef}\n\n                animateRows={false}\n                rowSelection='single'\n                headerHeight={24}\n\n                onCellClicked={cellClickedListener}\n              />\n            </div>\n          </Flex>\n\n          <OptimizerBuildPreview build={optimizerBuild} />\n        </Flex>\n\n        <Sidebar />\n      </Flex>\n    </div>\n  );\n}\nOptimizerTab.propTypes = {\n  active: PropTypes.bool,\n}\n","import stringSimilarity from 'string-similarity';\nimport { Parts, Sets, Stats } from './constants.ts';\nimport { RelicAugmenter } from './relicAugmenter';\n\nexport const OcrParserFribbels1 = {\n  parse: (json) => {\n    let relics = json.relics;\n\n    let parsedRelics = []\n    for (let relic of relics) {\n      // console.log(relic)\n      let result = readRelic(relic);\n      let output = RelicAugmenter.augment(result)\n\n      // Temporarily skip broken imports\n      if (output) {\n        parsedRelics.push(result);\n      }\n      // console.log(result);\n    }\n\n    return parsedRelics\n  }\n}\n\nfunction readRelic(relic) {\n  let partMatches = stringSimilarity.findBestMatch(relic.part, Object.values(Parts));\n  // console.log('partMatches', partMatches);\n  let part = partMatches.bestMatch.target\n\n  let setMatches = stringSimilarity.findBestMatch(lowerAlphaNumeric(relic.set), relicSetList.map(x => x[1]))\n  // console.log('setMatches', setMatches, setMatches.bestMatchIndex);\n  let set = relicSetList[setMatches.bestMatchIndex][2];\n  // console.log('set', set);\n\n  let enhance = Math.min(Math.max(parseInt(relic.enhance), 0), 15);\n  let grade = Math.min(Math.max(parseInt(relic.grade), 2), 5);\n\n  let parsedStats = readStats(relic);\n  // console.log(parsedStats);\n\n  return {\n    part: part,\n    set: set,\n    enhance: enhance,\n    grade: grade,\n    main: parsedStats.main,\n    substats: parsedStats.substats\n  }\n}\n\nfunction readStats(relic) {\n  let stats = relic.stats\n  let main\n  let substats = []\n  for (let stat of stats) {\n    let rest = stat.substring(0, stat.lastIndexOf(' ') + 1).trim();\n    let last = stat.substring(stat.lastIndexOf(' ') + 1, stat.length).trim();\n\n    let percent = last.includes('%');\n    let value = parseFloat(last);\n\n    let statMatches = stringSimilarity.findBestMatch(lowerAlphaNumeric(rest), statList.map(x => lowerAlphaNumericPercent(x[1])))\n    let statResult = statList[statMatches.bestMatchIndex][1];\n\n    if (statResult == Stats.ATK_P && !percent) statResult = Stats.ATK;\n    if (statResult == Stats.ATK && percent) statResult = Stats.ATK_P;\n\n    if (statResult == Stats.HP_P && !percent) statResult = Stats.HP;\n    if (statResult == Stats.HP && percent) statResult = Stats.HP_P;\n\n    if (statResult == Stats.DEF_P && !percent) statResult = Stats.DEF;\n    if (statResult == Stats.DEF && percent) statResult = Stats.DEF_P;\n\n    let parsedStat = {\n      stat: statResult,\n      value: value\n    }\n\n    // TODO not sure if accurate anymore - check on its decimals\n    if (!main) {\n      main = fixMainStat(parsedStat, relic)\n    } else {\n      substats.push(parsedStat);\n    }\n  }\n  return {\n    main,\n    substats\n  }\n}\n\nlet relicSetList = Object.entries(Sets)\nfor (let set of relicSetList) {\n  set[2] = set[1]\n  set[1] = lowerAlphaNumeric(set[1])\n}\n\n\nlet statList = Object.entries(Stats)\n\nfunction lowerAlphaNumeric(str) {\n  return str.toLowerCase().replace(/[^a-zA-Z0-9]/g, '')\n}\nfunction lowerAlphaNumericPercent(str) {\n  return str.toLowerCase().replace(/[^a-zA-Z0-9%]/g, '')\n}\n\nfunction fixMainStat(parsedStat) {\n  return parsedStat\n}\n\n\n\n// TODO these don't account for 4th decimal scaling\n// function generateMainStatsByLevelAndRank() {\n//   return {\n//     [Constants.Stats.SPD]: generateFromBaseLevel([1.613,2.419,3.226,4.032], [1.000,1.000,1.100,1.400]),\n//     [Constants.Stats.HP]: generateFromBaseLevel([45.158,67.738,90.317,112.896], [15.805,23.708,31.611,39.514]),\n//     [Constants.Stats.ATK]: generateFromBaseLevel([22.579,33.869,45.158,56.448], [7.903,11.854,15.805,19.757]),\n//     [Constants.Stats.HP_P]: generateFromBaseLevel([2.765,4.147,5.530,6.912], [0.968,1.451,1.935,2.419]),\n//     [Constants.Stats.ATK_P]: generateFromBaseLevel([2.765,4.147,5.530,6.912], [0.968,1.451,1.935,2.419]),\n//     [Constants.Stats.DEF_P]: generateFromBaseLevel([3.456,5.184,6.912,8.640], [1.210,1.814,2.419,3.024]),\n//     [Constants.Stats.CR]: generateFromBaseLevel([2.074,3.110,4.147,5.184], [0.726,1.089,1.451,1.814]),\n//     [Constants.Stats.CD]: generateFromBaseLevel([4.147,6.221,8.294,10.368], [1.451,2.177,2.903,3.629]),\n//     [Constants.Stats.OHB]: generateFromBaseLevel([2.212,3.318,4.424,5.530], [0.774,1.161,1.548,1.935]),\n//     [Constants.Stats.EHR]: generateFromBaseLevel([2.765,4.147,5.530,6.912], [0.968,1.451,1.935,2.419]),\n//     [Constants.Stats.BE]: generateFromBaseLevel([4.147,6.221,8.294,10.368], [1.451,2.177,2.903,3.629]),\n//     [Constants.Stats.ERR]: generateFromBaseLevel([1.244,1.866,2.488,3.110], [0.436,0.653,0.871,1.089]),\n//     [Constants.Stats.Physical_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//     [Constants.Stats.Fire_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//     [Constants.Stats.Ice_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//     [Constants.Stats.Lightning_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//     [Constants.Stats.Wind_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//     [Constants.Stats.Quantum_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//     [Constants.Stats.Imaginary_DMG]: generateFromBaseLevel([2.488,3.732,4.977,6.221], [0.871,1.306,1.742,2.177]),\n//   }\n// }\n\n// function generateFromBaseLevel(bases, levels) {\n//   let valuesByGrade = {}\n//   for (let i = 2; i <= 5; i++) {\n//     valuesByGrade[i] = []\n//     for (let j = 0; j <= 15; j++) {\n//       valuesByGrade[i][j] = bases[i-2] + levels[i-2] * j\n//     }\n//   }\n//   return valuesByGrade\n// }","import stringSimilarity from 'string-similarity';\nimport { Constants, Parts, Sets } from './constants.ts';\nimport { RelicAugmenter } from './relicAugmenter';\n\nimport characters from '../data/characters.json';\nimport lightCones from '../data/light_cones.json';\nimport DB from \"./db\";\nimport { Utils } from \"./utils\";\nimport { Message } from \"./message\";\n\nlet substatMapping;\nlet mainstatMapping;\nlet partMapping;\nlet affixMapping;\nlet metadata\n\nconst formTemplate = {\n  \"characterId\": \"1204\",\n  \"characterLevel\": 80,\n  \"characterEidolon\": 0,\n  \"lightCone\": \"23010\",\n  \"lightConeLevel\": 80,\n  \"lightConeSuperimposition\": 1,\n}\n\nexport const OcrParserKelz3 = {\n  parse: (json) => {\n    OcrParserKelz3.initialize()\n    let relics = json.relics;\n\n    let parsedRelics = []\n    for (let relic of relics) {\n      let result = readRelic(relic);\n      let output = RelicAugmenter.augment(result)\n\n      // Temporarily skip broken imports\n      if (output) {\n        parsedRelics.push(result);\n      }\n      // console.log(result);\n    }\n\n    return parsedRelics\n  },\n\n  parseCharacters: (json) => {\n    OcrParserKelz3.initialize()\n    let characters = json.characters;\n    if (!characters) {\n      return []\n    }\n\n    let parsedCharacters = []\n    for (let character of characters) {\n      let lightCone = undefined\n      if (json.light_cones) {\n        // Find their light cone\n        lightCone = json.light_cones.find(x => x.location == character.key)\n      }\n\n      try {\n        let result = readCharacter(character, lightCone);\n        parsedCharacters.push(result);\n      } catch (e) {\n        Message.warning(`Error reading a character [${character?.key}], try running the scanner again with a dark background to improve scan accuracy`, 10)\n      }\n    }\n\n    return parsedCharacters\n  },\n\n  initialize: () => {\n    if (!substatMapping) {\n      metadata = DB.getMetadata().relics\n      substatMapping = {\n        'ATK': Constants.Stats.ATK,\n        'HP': Constants.Stats.HP,\n        'DEF': Constants.Stats.DEF,\n        'ATK_': Constants.Stats.ATK_P,\n        'HP_': Constants.Stats.HP_P,\n        'DEF_': Constants.Stats.DEF_P,\n        'SPD': Constants.Stats.SPD,\n        'CRIT Rate_': Constants.Stats.CR,\n        'CRIT DMG_': Constants.Stats.CD,\n        'Effect Hit Rate_': Constants.Stats.EHR,\n        'Effect RES_': Constants.Stats.RES,\n        'Break Effect_': Constants.Stats.BE,\n      }\n\n      mainstatMapping = {\n        'ATK': Constants.Stats.ATK_P,\n        'HP': Constants.Stats.HP_P,\n        'DEF': Constants.Stats.DEF_P,\n        'SPD': Constants.Stats.SPD,\n        'CRIT Rate': Constants.Stats.CR,\n        'CRIT DMG': Constants.Stats.CD,\n        'Effect Hit Rate': Constants.Stats.EHR,\n        'Break Effect': Constants.Stats.BE,\n        'Energy Regeneration Rate': Constants.Stats.ERR,\n        'Outgoing Healing Boost': Constants.Stats.OHB,\n        'Physical DMG Boost': Constants.Stats.Physical_DMG,\n        'Fire DMG Boost': Constants.Stats.Fire_DMG,\n        'Ice DMG Boost': Constants.Stats.Ice_DMG,\n        'Lightning DMG Boost': Constants.Stats.Lightning_DMG,\n        'Wind DMG Boost': Constants.Stats.Wind_DMG,\n        'Quantum DMG Boost': Constants.Stats.Quantum_DMG,\n        'Imaginary DMG Boost': Constants.Stats.Imaginary_DMG,\n      }\n\n      partMapping = {\n        [Constants.Parts.Head]: 1,\n        [Constants.Parts.Hands]: 2,\n        [Constants.Parts.Body]: 3,\n        [Constants.Parts.Feet]: 4,\n        [Constants.Parts.PlanarSphere]: 5,\n        [Constants.Parts.LinkRope]: 6,\n      }\n\n      affixMapping = {\n        [Constants.Stats.HP_P]: 'HPAddedRatio',\n        [Constants.Stats.ATK_P]: 'AttackAddedRatio',\n        [Constants.Stats.DEF_P]: 'DefenceAddedRatio',\n        [Constants.Stats.HP]: 'HPDelta',\n        [Constants.Stats.ATK]: 'AttackDelta',\n        [Constants.Stats.DEF]: 'DefenceDelta',\n        [Constants.Stats.SPD]: 'SpeedDelta',\n        [Constants.Stats.CD]: 'CriticalDamageBase',\n        [Constants.Stats.CR]: 'CriticalChanceBase',\n        [Constants.Stats.EHR]: 'StatusProbabilityBase',\n        [Constants.Stats.RES]: 'StatusResistanceBase',\n        [Constants.Stats.BE]: 'BreakDamageAddedRatioBase',\n        [Constants.Stats.ERR]: 'SPRatioBase',\n        [Constants.Stats.OHB]: 'HealRatioBase',\n        [Constants.Stats.Physical_DMG]: 'PhysicalAddedRatio',\n        [Constants.Stats.Fire_DMG]: 'FireAddedRatio',\n        [Constants.Stats.Ice_DMG]: 'IceAddedRatio',\n        [Constants.Stats.Lightning_DMG]: 'ThunderAddedRatio',\n        [Constants.Stats.Wind_DMG]: 'WindAddedRatio',\n        [Constants.Stats.Quantum_DMG]: 'QuantumAddedRatio',\n        [Constants.Stats.Imaginary_DMG]: 'ImaginaryAddedRatio',\n      }\n    }\n  }\n}\n\nconst characterList = Object.values(characters)\nconst lightConeList = Object.values(lightCones)\n\nfunction readCharacter(character, lightCone) {\n  const newCharacter = { ...formTemplate }\n  lightCone = lightCone || undefined\n\n  // Lookup character & light cone ids\n  let characterId\n  if (character.key.startsWith(\"Trailblazer\")) {\n    if (character.key == \"TrailblazerPreservation\") {\n      characterId = characterList.find(x => x.tag == \"playergirl2\").id\n    } else {\n      characterId = characterList.find(x => x.tag == \"playergirl\").id\n    }\n  } else {\n    characterId = characterList.find(x => x.name == character.key).id\n  }\n\n  let lcKey = lightCone?.key\n  const lightConeId = lightConeList.find(x => x.name == lcKey)?.id\n\n  // Set information\n  newCharacter.characterId = characterId\n  newCharacter.characterLevel = character.level\n  newCharacter.characterEidolon = character.eidolon\n  newCharacter.lightCone = lightConeId\n  newCharacter.lightConeLevel = lightCone?.level || 0\n  newCharacter.lightConeSuperimposition = lightCone?.superimposition || 0\n\n  return newCharacter\n}\n\nfunction readRelic(relic) {\n  let partMatches = stringSimilarity.findBestMatch(relic.slot, Object.values(Parts));\n  // console.log('partMatches', partMatches);\n  let part = partMatches.bestMatch.target\n\n  let setMatches = stringSimilarity.findBestMatch(lowerAlphaNumeric(relic.set), relicSetList.map(x => x[1]))\n  let set = relicSetList[setMatches.bestMatchIndex][2];\n\n  let enhance = Math.min(Math.max(parseInt(relic.level), 0), 15);\n  let grade = Math.min(Math.max(parseInt(relic.rarity), 2), 5);\n\n  let parsedStats = readStats(relic, part, grade, enhance);\n\n  let id\n  if (characterList.find(x => x.name == relic.location)) {\n    id = characterList.find(x => x.name == relic.location).id\n  } else {\n    if (relic.location == 'TrailblazerPreservation' && window.store.getState().charactersById[8003]) {\n      id = 8003\n    } else {\n      id = 8004\n    }\n\n    if (relic.location == 'TrailblazerDestruction' && window.store.getState().charactersById[8001]) {\n      id = 8001\n    } else {\n      id = 8002\n    }\n  }\n\n  return {\n    part: part,\n    set: set,\n    enhance: enhance,\n    grade: grade,\n    main: parsedStats.main,\n    substats: parsedStats.substats,\n    equippedBy: relic.location === \"\" ? undefined : id,\n  }\n}\n\nfunction readStats(relic, part, grade, enhance) {\n  let rawSubstats = relic.substats\n  let parsedSubstats = []\n\n  for (let substat of rawSubstats) {\n    let mappedStat = substatMapping[substat.key]\n    let value = substat.value\n\n    parsedSubstats.push({\n      stat: mappedStat,\n      value: value\n    })\n  }\n\n  let rawMainstat = relic.mainstat\n  let parsedMainStat\n  let main\n\n  // console.log(relic, parsedSubstats, rawMainstat);\n\n  if (part == 'Hands') {\n    parsedMainStat = Constants.Stats.ATK\n  } else if (part == 'Head') {\n    parsedMainStat = Constants.Stats.HP\n  } else {\n    parsedMainStat = mainstatMapping[rawMainstat]\n  }\n\n  let partId = partMapping[part]\n  let mainId = affixMapping[parsedMainStat]\n  let query = `${grade}${partId}`\n  let affixMetadata = metadata.relicMainAffixes[query]\n  let mainData = Object.values(affixMetadata.affixes).find(x => x.property == mainId)\n  let mainBase = mainData.base\n  let mainStep = mainData.step\n  let mainValue = mainBase + mainStep * enhance\n  main = {\n    stat: parsedMainStat,\n    value: Utils.truncate10000ths(mainValue * (Utils.isFlat(parsedMainStat) ? 1 : 100))\n  }\n\n  return {\n    main,\n    substats: parsedSubstats\n  }\n}\n\nlet relicSetList = Object.entries(Sets)\nfor (let set of relicSetList) {\n  set[2] = set[1]\n  set[1] = lowerAlphaNumeric(set[1])\n}\n\n\nfunction lowerAlphaNumeric(str) {\n  return str.toLowerCase().replace(/[^a-zA-Z0-9]/g, '')\n}","import React, { useState } from 'react';\nimport { DownloadOutlined, UploadOutlined } from '@ant-design/icons';\nimport { Button, Divider, Flex, Popconfirm, Steps, Tabs, Typography, Upload } from 'antd';\nimport { OcrParserFribbels1 } from '../lib/ocrParserFribbels1';\nimport { OcrParserKelz3 } from '../lib/ocrParserKelz3';\nimport { Message } from '../lib/message';\nimport { DB } from '../lib/db';\nimport { SaveState } from \"../lib/saveState\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nconst spinnerMs = 500\n\n// https://web.dev/patterns/files/save-a-file\nconst saveFile = async (blob, suggestedName) => {\n  // Feature detection. The API needs to be supported\n  // and the app not run in an iframe.\n  const supportsFileSystemAccess =\n    'showSaveFilePicker' in window &&\n    (() => {\n      try {\n        return window.self === window.top;\n      } catch {\n        return false;\n      }\n    })();\n  // If the File System Access API is supported…\n  if (supportsFileSystemAccess) {\n    try {\n      // Show the file save dialog.\n      const handle = await window.showSaveFilePicker({\n        suggestedName,\n        types: [{\n          description: 'JSON',\n          accept: { 'text/json': ['.json'] },\n        }],\n      });\n      // Write the blob to the file.\n      const writable = await handle.createWritable();\n      await writable.write(blob);\n      await writable.close();\n\n    } catch (err) {\n      console.warn(err.name, err.message);\n\n    }\n  } else {\n    // Fallback if the File System Access API is not supported…\n    // Create the blob URL.\n    const blobURL = URL.createObjectURL(blob);\n    // Create the `<a download>` element and append it invisibly.\n    const a = document.createElement('a');\n    a.href = blobURL;\n    a.download = suggestedName;\n    a.style.display = 'none';\n    document.body.append(a);\n    // Programmatically click the element.\n    a.click();\n    // Revoke the blob URL and remove the element.\n    setTimeout(() => {\n      URL.revokeObjectURL(blobURL);\n      a.remove();\n    }, 1000);\n  }\n};\n\nfunction saveDataTab() {\n  async function saveClicked() {\n    try {\n      let stateString = SaveState.save()\n  \n      const blob = new Blob(\n        [ stateString ], \n        { type: 'text/json;charset=utf-8' }\n      )\n  \n      await saveFile(blob, 'fribbels-optimizer-save.json')\n      \n      Message.success('Saved data')\n    } catch (e) {\n      console.warn(e)\n    }\n  }\n\n  return (\n    <Flex vertical gap={5}>\n      <Text>\n        Save your optimizer data to a file.\n      </Text>\n      <Button type=\"primary\" onClick={saveClicked} icon={<DownloadOutlined />} style={{width: 200}}>\n        Save data\n      </Button>\n    </Flex>\n  )\n}\n\nfunction clearDataTab() {\n  const [loading, setLoading] = useState(false);\n\n  function clearDataClicked() {\n    console.log('Clear data')\n    setLoading(true)\n    setTimeout(() => {\n      setLoading(false)\n      DB.resetStore()\n\n      Message.success('Cleared data')\n    }, spinnerMs);\n  }\n  \n  return (\n    <Flex vertical gap={5}>\n      <Text>\n        Clear all optimizer data.\n      </Text>\n      <Popconfirm\n        title=\"Erase all data\"\n        description=\"Are you sure you want to clear all relics and characters?\"\n        onConfirm={clearDataClicked}\n        placement=\"bottom\"\n        okText=\"Yes\"\n        cancelText=\"Cancel\"\n      >\n        <Button type=\"primary\" loading={loading} style={{width: 200}}>\n          Clear data\n        </Button>\n      </Popconfirm>\n    </Flex>\n  )\n}\n\nfunction loadDataTab() {\n  const [current, setCurrent] = useState(0);\n  const [currentSave, setCurrentSave] = useState([]);\n  const [loading1, setLoading1] = useState(false);\n  const [loading2, setLoading2] = useState(false);\n  \n  const onStepChange = (value) => {\n    console.log('onStepChange:', value);\n    setCurrent(value);\n  };\n\n  function beforeUpload(file) {\n    return new Promise(() => {\n      const reader = new FileReader();\n      reader.readAsText(file);\n      reader.onload = () => {\n        let fileUploadText = reader.result;\n        console.log('Uploaded file', fileUploadText);\n\n\n        let json = JSON.parse(fileUploadText)\n        console.log('Parsed json', json);\n\n\n        if (json.fileType || json.source) {\n          setLoading1(true)\n\n          setTimeout(() => {\n            setLoading1(false)\n            setCurrentSave(undefined)\n            onStepChange(1)\n          }, spinnerMs);\n          return\n        }\n\n        setLoading1(true)\n        \n        setTimeout(() => {\n          setLoading1(false)\n          setCurrentSave(json)\n          onStepChange(1)\n        }, spinnerMs);\n      };\n      return false;\n    });\n  }\n\n  function onUploadClick() {\n    onStepChange(0)\n  }\n\n  function loadConfirmed() {\n    setLoading2(true)\n    setTimeout(() => {\n      setLoading2(false)\n      DB.setStore(currentSave)\n      onStepChange(2)\n    }, spinnerMs);\n  }\n\n  function loadDataContentUploadFile() {\n    return (\n      <Flex style={{minHeight: 100}}>\n        <Flex vertical gap={10}>\n          <Text>\n            Load your optimizer data from a file.\n          </Text>\n          <Upload\n            accept=\".json\"\n            name= 'file'\n            onClick={onUploadClick}\n            beforeUpload={beforeUpload}>\n            <Button style={{width: 200}} icon={<UploadOutlined />} loading={loading1}>\n              Load save data\n            </Button>\n          </Upload>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  function confirmLoadData() {\n    if (!currentSave || !currentSave.relics || !currentSave.characters) {\n      return (\n        <Flex style={{minHeight: 100}}>\n          <Flex vertical gap={10} style={{display: current >= 1 ? 'flex' : 'none'}}>\n            Invalid save file, please try a different file. Did you mean to use Relic Importer tab?\n          </Flex>\n        </Flex>\n      )\n    }\n    return (\n      <Flex style={{minHeight: 100}}>\n        <Flex vertical gap={10} style={{display: current >= 1 ? 'flex' : 'none'}}>\n          <Text>\n            File contains {currentSave.relics.length} relics and {currentSave.characters.length} characters. Replace your current data with the uploaded data?\n          </Text>\n          <Button style={{width: 200}} type=\"primary\" onClick={loadConfirmed} loading={loading2}>\n            Use Uploaded Data\n          </Button>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  function loadCompleted() {\n    return (\n      <Flex style={{minHeight: 100}}>\n        <Flex vertical gap={10} style={{display: current >= 2 ? 'flex' : 'none'}}>\n          <Text>\n            Done!\n          </Text>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex gap={5}>\n      <Steps\n        direction=\"vertical\"\n        current={current}\n        items={[\n          {\n            title: '',\n            description: loadDataContentUploadFile(),\n          },\n          {\n            title: '',\n            description: confirmLoadData(),\n          },\n          {\n            title: '',\n            description: loadCompleted(),\n          },\n        ]}\n      />\n    </Flex>\n  )\n}\n\nfunction kelZImporterTab() {\n  const [current, setCurrent] = useState(0);\n  const [currentRelics, setCurrentRelics] = useState([]);\n  const [currentCharacters, setCurrentCharacters] = useState([]);\n  const [loading1, setLoading1] = useState(false);\n  const [loading2, setLoading2] = useState(false);\n\n  const onStepChange = (value) => {\n    console.log('onStepChange:', value);\n    setCurrent(value);\n  };\n\n  function beforeUpload(file) {\n    return new Promise(() => {\n      const reader = new FileReader();\n      reader.readAsText(file);\n      reader.onload = () => {\n        try {\n          let fileUploadText = reader.result;\n\n          let json = JSON.parse(fileUploadText);\n          console.log('JSON', json);\n\n          setLoading1(true)\n\n          if (!json) {\n            setTimeout(() => {\n              setLoading1(false)\n              setCurrentRelics(undefined)\n              setCurrentCharacters(undefined)\n              onStepChange(1)\n            }, spinnerMs);\n            return\n          }\n\n          let relics = [], characters = []\n          if (json.source == 'HSR-Scanner' && json.version == 3) {\n            relics = OcrParserKelz3.parse(json);\n            characters = OcrParserKelz3.parseCharacters(json);\n            characters = characters.sort((a, b) => b.characterLevel - a.characterLevel)\n          } else {\n            setTimeout(() => {\n              setLoading1(false)\n              setCurrentRelics(undefined)\n              setCurrentCharacters(undefined)\n              onStepChange(1)\n            }, spinnerMs);\n            return\n          }\n\n          setTimeout(() => {\n            setLoading1(false)\n            setCurrentRelics(relics)\n            setCurrentCharacters(characters)\n            onStepChange(1)\n          }, spinnerMs);\n\n        } catch (e) {\n          Message.error(e.message, 10)\n          Message.error('Error occurred while importing file, try running the scanner again with a dark background to improve scan accuracy', 10)\n        }\n      };\n      return false;\n    });\n  }\n\n  function onUploadClick() {\n    onStepChange(0)\n  }\n\n  function mergeRelicsConfirmed() {\n    setLoading2(true)\n    setTimeout(() => {\n      setLoading2(false)\n      DB.mergeRelicsWithState(currentRelics)\n      SaveState.save()\n      onStepChange(2)\n    }, spinnerMs);\n  }\n\n  function mergeCharactersConfirmed() {\n    setLoading2(true)\n    setTimeout(() => {\n      setLoading2(false)\n      DB.mergeRelicsWithState(currentRelics, currentCharacters)\n      SaveState.save()\n      onStepChange(2)\n    }, spinnerMs);\n  }\n\n  function kelZImporterContentUploadFile() {\n    return (\n      <Flex style={{minHeight: 100, marginBottom: 30}}>\n        <Flex vertical gap={10}>\n          <Text>\n            Install and run Kel-Z HSR Scanner (<Typography.Link target=\"_blank\" href='https://github.com/kel-z/HSR-Scanner/releases/latest'>Github</Typography.Link>).\n          </Text>\n          <Text>\n            It supports character and light cones imports and all 16:9 resolutions.\n          </Text>\n          <Text>\n            Upload the json file generated by Kel-Z HSR Scanner:\n          </Text>\n          <Upload\n            accept=\".json\"\n            name= 'file'\n            onClick={onUploadClick}\n            beforeUpload={beforeUpload}>\n            <Button style={{width: 210}} icon={<UploadOutlined />} loading={loading1}>\n              Upload HSRScanData file\n            </Button>\n          </Upload>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  function confirmRelicMerge() {\n    if (!currentRelics || !currentRelics.length) {\n      return (\n        <Flex style={{minHeight: 100}}>\n          <Flex vertical gap={10} style={{display: current >= 1 ? 'flex' : 'none'}}>\n            Invalid HSRScanData file, please try a different file\n          </Flex>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex style={{minHeight: 250}}>\n        <Flex vertical gap={10} style={{display: current >= 1 ? 'flex' : 'none'}}>\n          <Text>\n            File contains {currentRelics.length} relics and {currentCharacters?.length || 0} characters.\n          </Text>\n\n          <Text>Import relics only. Updates the optimizer with newly obtained relics.</Text>\n\n          <Button style={{width: 200}} type=\"primary\" onClick={mergeRelicsConfirmed} loading={loading2}>\n            Import relics\n          </Button>\n\n          <Divider/>\n          <Text>\n            Import relics and characters.\n          </Text>\n\n          <Popconfirm\n            title=\"Overwrite optimizer builds\"\n            description=\"Are you sure you want to overwrite your optimizer builds with ingame builds?\"\n            onConfirm={mergeCharactersConfirmed}\n            placement=\"bottom\"\n            okText=\"Yes\"\n            cancelText=\"Cancel\"\n          >\n            <Button style={{width: 200}} type=\"primary\" loading={loading2}>\n              Import relics & characters\n            </Button>\n          </Popconfirm>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  function mergeCompleted() {\n    return (\n      <Flex style={{minHeight: 100}}>\n        <Flex vertical gap={10} style={{display: current >= 2 ? 'flex' : 'none'}}>\n          <Text>\n            Done!\n          </Text>\n          <Text>\n            The Relic scorer can be used to import accurate speed substats\n          </Text>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex gap={5}>\n      <Steps\n        direction=\"vertical\"\n        current={current}\n        items={[\n          {\n            title: '',\n            description: kelZImporterContentUploadFile(),\n          },\n          {\n            title: '',\n            description: confirmRelicMerge(),\n          },\n          {\n            title: '',\n            description: mergeCompleted(),\n          },\n        ]}\n      />\n    </Flex>\n  )\n}\n\nfunction fribbelsImporterTab() {\n  const [current, setCurrent] = useState(0);\n  const [currentRelics, setCurrentRelics] = useState([]);\n  const [currentCharacters, setCurrentCharacters] = useState([]);\n  const [loading1, setLoading1] = useState(false);\n  const [loading2, setLoading2] = useState(false);\n\n  const onStepChange = (value) => {\n    console.log('onStepChange:', value);\n    setCurrent(value);\n  };\n\n  function beforeUpload(file) {\n    return new Promise(() => {\n      const reader = new FileReader();\n      reader.readAsText(file);\n      reader.onload = () => {\n        try {\n          let fileUploadText = reader.result;\n          // console.log('Uploaded text relicImporterTab', fileUploadText);\n\n          let json = JSON.parse(fileUploadText);\n          console.log('JSON', json);\n\n          setLoading1(true)\n\n          if (!json) {\n            setTimeout(() => {\n              setLoading1(false)\n              setCurrentRelics(undefined)\n              setCurrentCharacters(undefined)\n              onStepChange(1)\n            }, spinnerMs);\n            return\n          }\n\n          let relics = [], characters = []\n          if (json.fileType == 'Fribbels HSR Scanner' && json.fileVersion == 'v1.0.0') {\n            relics = OcrParserFribbels1.parse(json);\n          } else {\n            setTimeout(() => {\n              setLoading1(false)\n              setCurrentRelics(undefined)\n              setCurrentCharacters(undefined)\n              onStepChange(1)\n            }, spinnerMs);\n            return\n          }\n\n          setTimeout(() => {\n            setLoading1(false)\n            setCurrentRelics(relics)\n            setCurrentCharacters(characters)\n            onStepChange(1)\n          }, spinnerMs);\n\n        } catch (e) {\n          Message.error(e.message, 10)\n          Message.error('Error occurred while importing file, try running the scanner again with a dark background to improve scan accuracy', 10)\n        }\n      };\n      return false;\n    });\n  }\n\n  function onUploadClick() {\n    onStepChange(0)\n  }\n\n  function mergeRelicsConfirmed() {\n    setLoading2(true)\n    setTimeout(() => {\n      setLoading2(false)\n      DB.mergeRelicsWithState(currentRelics)\n      SaveState.save()\n      onStepChange(2)\n    }, spinnerMs);\n  }\n\n  function fribbelsImporterContentUploadFile() {\n    return (\n      <Flex style={{minHeight: 100, marginBottom: 30}}>\n        <Flex vertical gap={10}>\n          <Text>\n            Install and run Fribbels HSR Scanner (<Typography.Link target=\"_blank\" href='https://github.com/fribbels/Fribbels-Honkai-Star-Rail-Scanner/releases/latest'>Github</Typography.Link>).\n          </Text>\n          <Text>\n            The Kel-Z importer is recommended for scanning speed & character imports. This importer can be used as a backup if that doesn't work.\n          </Text>\n          <Text>\n            Upload the json file generated by the scanner:\n          </Text>\n          <Upload\n            accept=\".json\"\n            name= 'file'\n            onClick={onUploadClick}\n            beforeUpload={beforeUpload}>\n            <Button style={{width: 200}} icon={<UploadOutlined />} loading={loading1}>\n              Upload relics file\n            </Button>\n          </Upload>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  function confirmRelicMerge() {\n    if (!currentRelics || !currentRelics.length) {\n      return (\n        <Flex style={{minHeight: 100}}>\n          <Flex vertical gap={10} style={{display: current >= 1 ? 'flex' : 'none'}}>\n            Invalid relics file, please try a different file\n          </Flex>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex style={{minHeight: 250}}>\n        <Flex vertical gap={10} style={{display: current >= 1 ? 'flex' : 'none'}}>\n          <Text>\n            File contains {currentRelics.length} relics and {currentCharacters?.length || 0} characters.\n          </Text>\n\n          <Text>Import relics only. Updates the optimizer with newly obtained relics.</Text>\n\n          <Button style={{width: 200}} type=\"primary\" onClick={mergeRelicsConfirmed} loading={loading2}>\n            Import relics\n          </Button>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  function mergeCompleted() {\n    return (\n      <Flex style={{minHeight: 100}}>\n        <Flex vertical gap={10} style={{display: current >= 2 ? 'flex' : 'none'}}>\n          <Text>\n            Done!\n          </Text>\n          <Text>\n            The Relic scorer can be used to import accurate speed substats\n          </Text>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex gap={5}>\n      <Steps\n        direction=\"vertical\"\n        current={current}\n        items={[\n          {\n            title: '',\n            description: fribbelsImporterContentUploadFile(),\n          },\n          {\n            title: '',\n            description: confirmRelicMerge(),\n          },\n          {\n            title: '',\n            description: mergeCompleted(),\n          },\n        ]}\n      />\n    </Flex>\n  )\n}\n\nexport default function ImportTab(props) {\n  // Test\n  let tabSize = 'large'\n\n  return (\n    <div style={{display: props.active ? 'block' : 'none'}}>\n      <Flex vertical gap={5} style={{marginLeft: 20, width: 1200}}>\n        <Tabs\n          defaultActiveKey=\"1\"\n          size={tabSize}\n          style={{\n            marginBottom: 32,\n          }}\n          items={[\n            {\n              label: 'Kel-Z scanner importer (Recommended)',\n              key: 0,\n              children: kelZImporterTab(),\n            },\n            {\n              label: 'Fribbels scanner importer',\n              key: 1,\n              children: fribbelsImporterTab(),\n            },\n            {\n              label: 'Save optimizer data',\n              key: 2,\n              children: saveDataTab(),\n            },\n            {\n              label: 'Load optimizer data',\n              key: 3,\n              children: loadDataTab(),\n            },\n            {\n              label: 'Clear optimizer data',\n              key: 4,\n              children: clearDataTab(),\n            },\n          ]}\n        />\n      </Flex>\n    </div>\n  );\n}\nImportTab.propTypes = {\n  active: PropTypes.bool,\n}\n","import styled from 'styled-components';\nimport { Button, Flex, Form, Image, InputNumber, Modal, Radio, Select } from 'antd';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Constants } from '../lib/constants.ts';\nimport { HeaderText } from './HeaderText';\nimport { RelicAugmenter } from '../lib/relicAugmenter';\nimport { Message } from '../lib/message';\nimport PropTypes from \"prop-types\";\nimport { Utils } from \"../lib/utils\";\nimport DB from \"../lib/db\";\nimport { Assets } from \"../lib/assets\";\n\nfunction RadioIcon(props) {\n  return (\n    <Radio.Button value={props.value} style={{ height: 35, width: 50, paddingLeft: 10 }}>\n      <Image\n        preview={false}\n        width={30}\n        src={props.src}\n      />\n    </Radio.Button>\n  )\n}\nRadioIcon.propTypes = {\n  value: PropTypes.string,\n  src: PropTypes.string,\n}\n\nconst InputNumberStyled = styled(InputNumber)`\n  width: 90px\n`\n\nfunction renderMainStat(relic) {\n  let mainStat = relic.main?.stat\n  let mainValue = relic.main?.value\n\n  if (!mainStat) return {}\n\n  return renderStat(mainStat, mainValue)\n}\n\nfunction renderSubstat(relic, index) {\n  let substat = relic.substats[index]\n  if (!substat || !substat.stat) return {}\n\n  let stat = substat.stat\n  let value = substat.value\n\n  return renderStat(stat, value)\n}\n\nfunction renderStat(stat, value) {\n  if (Utils.isFlat(stat) && stat != Constants.Stats.SPD) {\n    return {\n      stat: stat,\n      value: Math.floor(value)\n    }\n  } else {\n    return {\n      stat: stat,\n      value: Utils.precisionRound(Math.floor(value * 10) / 10)\n    }\n  }\n}\n\n// selectedRelic, onOk, setOpen, open, type\nexport default function RelicModal(props) {\n  const [relicForm] = Form.useForm();\n  const [mainStatOptions, setMainStatOptions] = useState([]);\n\n  const characterOptions = useMemo(() => {\n    let characters = DB.getCharacters()\n    let characterData = DB.getMetadata().characters;\n\n    let options = characters.map((character) => {\n      return {\n        value: character.id,\n        label: characterData[character.id].displayName\n      }\n    })\n\n    options = options.sort((a, b) => a.label.localeCompare(b.label))\n    options = [{\n      value: 'None',\n      label: 'Nobody'\n    }, ...options]\n\n    return options\n  }, [props.selectedRelic, props.open]);\n\n  useEffect(() => {\n    let defaultValues = {\n      grade: 5,\n      enhance: 15,\n      part: Constants.Parts.Head,\n      mainStatType: Constants.Stats.HP,\n      mainStatValue: Math.floor(Constants.MainStatsValues[Constants.Stats.HP][5]['base'] + Constants.MainStatsValues[Constants.Stats.HP][5]['increment'] * 15),\n    }\n\n    let relic = props.selectedRelic\n    if (!relic || props.type != 'edit') {\n      // Ignore\n    } else {\n      defaultValues = {\n        equippedBy: relic.equippedBy == undefined ? 'None' : relic.equippedBy,\n        grade: relic.grade,\n        enhance: relic.enhance,\n        set: relic.set,\n        part: relic.part,\n        mainStatType: renderMainStat(relic).stat,\n        mainStatValue: renderMainStat(relic).value,\n        substatType0: renderSubstat(relic, 0).stat,\n        substatValue0: renderSubstat(relic, 0).value,\n        substatType1: renderSubstat(relic, 1).stat,\n        substatValue1: renderSubstat(relic, 1).value,\n        substatType2: renderSubstat(relic, 2).stat,\n        substatValue2: renderSubstat(relic, 2).value,\n        substatType3: renderSubstat(relic, 3).stat,\n        substatValue3: renderSubstat(relic, 3).value,\n      }\n    }\n    relicForm.setFieldsValue(defaultValues)\n  }, [props.selectedRelic, props.open])\n\n  useEffect(() => {\n    let mainStatOptions = [];\n    if (props.selectedRelic?.part) {\n      mainStatOptions = Object.entries(Constants.PartsMainStats[props.selectedRelic?.part]).map(entry => ({\n        label: entry[1],\n        value: entry[1]\n      }));\n    }\n    setMainStatOptions(mainStatOptions || []);\n    relicForm.setFieldValue('mainStatType', props.selectedRelic?.main?.stat);\n  }, [props.selectedRelic?.part, props.selectedRelic?.main?.stat]);\n\n  useEffect(() => {\n    if (mainStatOptions.length > 0) {\n      const mainStatValues = mainStatOptions.map(item => item.value);\n      if (mainStatValues.includes(props.selectedRelic?.main?.stat)) {\n        relicForm.setFieldValue('mainStatType', props.selectedRelic?.main?.stat);\n      }\n      else {\n        relicForm.setFieldValue('mainStatType', mainStatOptions[0].value);\n      }\n    }\n  }, [relicForm, mainStatOptions, props.selectedRelic?.main?.stat]);\n\n  const onFinish = (x) => {\n    console.log('Form finished', x);\n    if (!x.part) {\n      return Message.error('Part field is missing')\n    }\n    if (!x.mainStatType) {\n      return Message.error('Main stat is missing')\n    }\n    if (!x.mainStatValue) {\n      return Message.error('Main stat is missing')\n    }\n    if (!x.set) {\n      return Message.error('Set field is missing')\n    }\n    if (x.enhance == undefined) {\n      return Message.error('Enhance field is missing')\n    }\n    if (x.grade == undefined) {\n      return Message.error('Grade field is missing')\n    }\n    if (x.grade > 5 || x.grade < 2) {\n      return Message.error('Grade value is invalid')\n    }\n    if (x.enhance > 15 || x.enhance < 0) {\n      return Message.error('Enhance value is invalid')\n    }\n    if (!Constants.SetsRelicsNames.includes(x.set) && !Constants.SetsOrnamentsNames.includes(x.set)) {\n      return Message.error('Set value is invalid')\n    }\n    if (Constants.SetsRelicsNames.includes(x.set) && (x.part == Constants.Parts.PlanarSphere || x.part == Constants.Parts.LinkRope)) {\n      return Message.error('The selected set is not an ornament set')\n    }\n    if (Constants.SetsOrnamentsNames.includes(x.set) && (x.part == Constants.Parts.Head ||\n      x.part == Constants.Parts.Hands ||\n      x.part == Constants.Parts.Body ||\n      x.part == Constants.Parts.Feet)) {\n      return Message.error('The selected set is not a relic set')\n    }\n    if (x.substatType0 != undefined && x.substatValue0 == undefined || x.substatType0 == undefined && x.substatValue0 != undefined) {\n      return Message.error('Substat 1 is invalid')\n    }\n    if (x.substatType1 != undefined && x.substatValue1 == undefined || x.substatType1 == undefined && x.substatValue1 != undefined) {\n      return Message.error('Substat 2 is invalid')\n    }\n    if (x.substatType2 != undefined && x.substatValue2 == undefined || x.substatType2 == undefined && x.substatValue2 != undefined) {\n      return Message.error('Substat 3 is invalid')\n    }\n    if (x.substatType3 != undefined && x.substatValue3 == undefined || x.substatType3 == undefined && x.substatValue3 != undefined) {\n      return Message.error('Substat 4 is invalid')\n    }\n\n    if (x.substatType3 != undefined && (x.substatType0 == undefined || x.substatType1 == undefined || x.substatType2 == undefined)) {\n      return Message.error('Substats are out of order')\n    }\n    if (x.substatType2 != undefined && (x.substatType0 == undefined || x.substatType1 == undefined)) {\n      return Message.error('Substats are out of order')\n    }\n    if (x.substatType1 != undefined && (x.substatType0 == undefined)) {\n      return Message.error('Substats are out of order')\n    }\n\n    let substatTypes = [x.substatType0, x.substatType1, x.substatType2, x.substatType3].filter(x => x != undefined)\n    if (new Set(substatTypes).size !== substatTypes.length) {\n      return Message.error('Duplicate substats, only one of each type is allowed')\n    }\n    if (substatTypes.includes(x.mainStatType)) {\n      return Message.error('Substat type is the same as the main stat')\n    }\n\n    if (x.substatValue0 >= 1000 || x.substatValue1 >= 1000 || x.substatValue2 >= 1000 || x.substatValue3 >= 1000) {\n      return Message.error('Substat value is too big')\n    }\n    if (x.mainStatValue >= 1000) {\n      return Message.error('Main stat value is too big')\n    }\n    if (x.substatValue0 <= 0 || x.substatValue1 <= 0 || x.substatValue2 <= 0 || x.substatValue3 <= 0) {\n      return Message.error('Substat values should be positive')\n    }\n    if (x.mainStatValue <= 0) {\n      return Message.error('Main stat values should be positive')\n    }\n\n    let relic = {\n      equippedBy: x.equippedBy == 'None' ? undefined : x.equippedBy,\n      enhance: x.enhance,\n      grade: x.grade,\n      part: x.part,\n      set: x.set,\n      main: {\n        stat: x.mainStatType,\n        value: x.mainStatValue\n      }\n    }\n    let substats = []\n    if (x.substatType0 != undefined && x.substatValue0 != undefined) {\n      substats.push({\n        stat: x.substatType0,\n        value: x.substatValue0\n      })\n    }\n    if (x.substatType1 != undefined && x.substatValue1 != undefined) {\n      substats.push({\n        stat: x.substatType1,\n        value: x.substatValue1\n      })\n    }\n    if (x.substatType2 != undefined && x.substatValue2 != undefined) {\n      substats.push({\n        stat: x.substatType2,\n        value: x.substatValue2\n      })\n    }\n    if (x.substatType3 != undefined && x.substatValue3 != undefined) {\n      substats.push({\n        stat: x.substatType3,\n        value: x.substatValue3\n      })\n    }\n    relic.substats = substats\n    RelicAugmenter.augment(relic)\n\n    console.log('Completed relic', relic)\n\n    props.onOk(relic)\n    props.setOpen(false)\n  };\n  const onFinishFailed = () => {\n    Message.error('Submit failed!');\n    props.setOpen(false)\n  };\n  const onValuesChange = (x) => {\n    let mainStatOptions = [];\n    if (x.part) {\n      mainStatOptions = Object.entries(Constants.PartsMainStats[x.part]).map(entry => ({\n        label: entry[1],\n        value: entry[1]\n      }));\n      setMainStatOptions(mainStatOptions);\n      relicForm.setFieldValue('mainStatType', mainStatOptions[0]?.value);\n    }\n\n    let mainStatType = mainStatOptions[0]?.value || relicForm.getFieldValue('mainStatType');\n    let enhance = relicForm.getFieldValue('enhance');\n    let grade = relicForm.getFieldValue('grade');\n\n    if (mainStatType != undefined && enhance != undefined && grade != undefined) {\n      const specialStats = [Constants.Stats.OHB, Constants.Stats.Physical_DMG, Constants.Stats.Physical_DMG, Constants.Stats.Fire_DMG, Constants.Stats.Ice_DMG, Constants.Stats.Lightning_DMG, Constants.Stats.Wind_DMG, Constants.Stats.Quantum_DMG, Constants.Stats.Imaginary_DMG];\n      const floorStats = [Constants.Stats.HP, Constants.Stats.ATK, Constants.Stats.SPD];\n\n      let mainStatValue = Constants.MainStatsValues[mainStatType][grade]['base'] + Constants.MainStatsValues[mainStatType][grade]['increment'] * enhance;\n\n      if (specialStats.includes(mainStatType)) { // Outgoing Healing Boost and elemental damage bonuses has a weird rounding with one decimal place\n        mainStatValue = Utils.truncate10ths(mainStatValue);\n      } else if (floorStats.includes(mainStatType)) {\n        mainStatValue = Math.floor(mainStatValue);\n      } else {\n        mainStatValue = mainStatValue.toFixed(1);\n      }\n      relicForm.setFieldValue('mainStatValue', mainStatValue);\n    }\n  };\n\n  const handleCancel = () => {\n    props.setOpen(false)\n  };\n  const handleOk = () => {\n    relicForm.submit()\n  };\n\n  let enhanceOptions = []\n  for (let i = 15; i >= 0; i--) {\n    enhanceOptions.push({ value: i, label: '+' + i })\n  }\n\n  let setOptions = []\n  for (let entry of Object.entries(Constants.SetsRelics)) {\n    setOptions.push({\n      label: entry[1],\n      value: entry[1]\n    })\n  }\n  for (let entry of Object.entries(Constants.SetsOrnaments)) {\n    setOptions.push({\n      label: entry[1],\n      value: entry[1]\n    })\n  }\n  let substatOptions = []\n  for (let entry of Object.entries(Constants.SubStats)) {\n    substatOptions.push({\n      label: entry[1],\n      value: entry[1]\n    })\n  }\n\n  const filterOption = (input, option) =>\n    (option?.label ?? '').toLowerCase().includes(input.toLowerCase());\n\n  return (\n    <Form\n      form={relicForm}\n      layout=\"vertical\"\n      preserve={false}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      onValuesChange={onValuesChange}\n    >\n      <Modal\n        width={350}\n        centered\n        destroyOnClose\n        open={props.open} //\n        onCancel={() => props.setOpen(false)}\n        footer={[\n          <Button key=\"back\" onClick={handleCancel}>\n            Cancel\n          </Button>,\n          <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\n            Submit\n          </Button>,\n        ]}\n      >\n        <Flex vertical gap={5}>\n\n          <HeaderText>Equipped by</HeaderText>\n          <Form.Item size=\"default\" name='equippedBy'>\n            <Select\n              showSearch\n              filterOption={filterOption}\n              style={{ width: 300 }}\n              options={characterOptions}\n            />\n          </Form.Item>\n\n          <HeaderText>Part</HeaderText>\n\n          <Form.Item size=\"default\" name='part'>\n            <Radio.Group buttonStyle=\"solid\">\n              <RadioIcon value={Constants.Parts.Head} src={Assets.getPart(Constants.Parts.Head)} />\n              <RadioIcon value={Constants.Parts.Hands} src={Assets.getPart(Constants.Parts.Hands)} />\n              <RadioIcon value={Constants.Parts.Body} src={Assets.getPart(Constants.Parts.Body)} />\n              <RadioIcon value={Constants.Parts.Feet} src={Assets.getPart(Constants.Parts.Feet)} />\n              <RadioIcon value={Constants.Parts.PlanarSphere} src={Assets.getPart(Constants.Parts.PlanarSphere)} />\n              <RadioIcon value={Constants.Parts.LinkRope} src={Assets.getPart(Constants.Parts.LinkRope)} />\n            </Radio.Group>\n          </Form.Item>\n\n          <HeaderText>Set</HeaderText>\n          <Form.Item size=\"default\" name='set'>\n            <Select\n              showSearch\n              allowClear\n              style={{\n                width: 300,\n              }}\n              placeholder=\"Sets\"\n              options={setOptions}\n              maxTagCount='responsive'>\n            </Select>\n          </Form.Item>\n\n          <HeaderText>Enhance / Grade</HeaderText>\n\n          <Flex gap={10}>\n            <Form.Item size=\"default\" name='enhance'>\n              <Select\n                showSearch\n                style={{ width: 145 }}\n                options={enhanceOptions}\n              />\n            </Form.Item>\n            <Form.Item size=\"default\" name='grade'>\n              <Select\n                showSearch\n                style={{ width: 145 }}\n                options={[\n                  { value: 2, label: '2 star' },\n                  { value: 3, label: '3 star' },\n                  { value: 4, label: '4 star' },\n                  { value: 5, label: '5 star' },\n                ]}\n              />\n            </Form.Item>\n          </Flex>\n\n          <HeaderText>Main stat</HeaderText>\n\n          <Flex gap={10}>\n            <Form.Item size=\"default\" name='mainStatType'>\n              <Select\n                showSearch\n                style={{\n                  width: 200,\n                }}\n                placeholder=\"Main Stat\"\n                maxTagCount='responsive'\n                options={mainStatOptions}\n                disabled={mainStatOptions.length <= 1} />\n            </Form.Item>\n\n            <Form.Item size=\"default\" name='mainStatValue'>\n              <InputNumberStyled controls={false} disabled />\n            </Form.Item>\n          </Flex>\n\n          <HeaderText>Substats</HeaderText>\n\n          <Flex gap={10}>\n            <Form.Item size=\"default\" name='substatType0'>\n              <Select\n                showSearch\n                allowClear\n                style={{\n                  width: 200,\n                }}\n                placeholder=\"Substat\"\n                maxTagCount='responsive'\n                options={substatOptions} />\n            </Form.Item>\n\n\n            <Form.Item size=\"default\" name='substatValue0'>\n              <InputNumberStyled controls={false} />\n            </Form.Item>\n          </Flex>\n\n          <Flex gap={10}>\n            <Form.Item size=\"default\" name='substatType1'>\n              <Select\n                showSearch\n                allowClear\n                style={{\n                  width: 200,\n                }}\n                placeholder=\"Substat\"\n                maxTagCount='responsive'\n                options={substatOptions} />\n            </Form.Item>\n\n            <Form.Item size=\"default\" name='substatValue1'>\n              <InputNumberStyled controls={false} />\n            </Form.Item>\n          </Flex>\n\n          <Flex gap={10}>\n            <Form.Item size=\"default\" name='substatType2'>\n              <Select\n                showSearch\n                allowClear\n                style={{\n                  width: 200,\n                }}\n                placeholder=\"Substat\"\n                maxTagCount='responsive'\n                options={substatOptions} />\n            </Form.Item>\n\n            <Form.Item size=\"default\" name='substatValue2'>\n              <InputNumberStyled controls={false} />\n            </Form.Item>\n          </Flex>\n\n          <Flex gap={10}>\n            <Form.Item size=\"default\" name='substatType3'>\n              <Select\n                showSearch\n                allowClear\n                style={{\n                  width: 200,\n                }}\n                placeholder=\"Substat\"\n                maxTagCount='responsive'\n                options={substatOptions} />\n            </Form.Item>\n\n            <Form.Item size=\"default\" name='substatValue3'>\n              <InputNumberStyled controls={false} />\n            </Form.Item>\n          </Flex>\n        </Flex>\n      </Modal>\n    </Form>\n  )\n}\nRelicModal.propTypes = {\n  selectedRelic: PropTypes.object,\n  type: PropTypes.string,\n  onOk: PropTypes.func,\n  setOpen: PropTypes.func,\n  open: PropTypes.bool,\n}\n","import { Button, Flex, Select, Tooltip, Typography } from \"antd\";\nimport React, { useMemo, useState } from \"react\";\nimport { RelicScorer } from \"../lib/relicScorer.ts\";\nimport CheckableTag from \"antd/lib/tag/CheckableTag\";\nimport { HeaderText } from \"./HeaderText\";\nimport DB from \"../lib/db\";\nimport { Utils } from \"../lib/utils\";\nimport { Constants } from \"../lib/constants.ts\";\nimport { Assets } from \"../lib/assets\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nconst tagHeight = 34\nconst imgWidth = 34\n\nexport default function RelicFilterBar() {\n  let setRelicTabFilters = window.store(s => s.setRelicTabFilters);\n  let setSelectedScoringCharacter = window.store(s => s.setSelectedScoringCharacter);\n\n  let [currentlySelectedCharacterId, setCurrentlySelectedCharacterId] = useState()\n\n  const characterOptions = useMemo(() => {\n    return Utils.generateCharacterOptions();\n  }, []);\n\n  function generateImageTags(arr, srcFn, tooltip) {\n    return arr.map(x => {\n      return {\n        key: x,\n        display:\n          tooltip ?\n            (\n              <Tooltip title={x} mouseEnterDelay={0.4}>\n                <img style={{ width: imgWidth }} src={srcFn(x)} />\n              </Tooltip>\n            )\n            :\n            (\n              <img style={{ width: imgWidth }} src={srcFn(x)} />\n            )\n      }\n    })\n  }\n  function generateTextTags(arr, width) { // arr contains [key, value]\n    return arr.map(x => {\n      return {\n        key: x[0],\n        display: (\n          <Flex style={{ width: width, height: tagHeight }} justify='space-around' align='center'>\n            <Text style={{ fontSize: 18 }}>\n              {x[1]}\n            </Text>\n          </Flex>\n        )\n      }\n    })\n  }\n\n  let setsData = generateImageTags(Object.values(Constants.SetsRelics).concat(Object.values(Constants.SetsOrnaments)), (x) => Assets.getSetImage(x, Constants.Parts.PlanarSphere), true)\n  let partsData = generateImageTags(Object.values(Constants.Parts), (x) => Assets.getPart(x), false)\n  let mainStatsData = generateImageTags(Constants.MainStats, (x) => Assets.getStatIcon(x, true), true)\n  let subStatsData = generateImageTags(Constants.SubStats, (x) => Assets.getStatIcon(x, true), true)\n  let enhanceData = generateTextTags([[0, '+0'], [3, '+3'], [6, '+6'], [9, '+9'], [12, '+12'], [15, '+15']])\n\n  function characterSelectorChange(id) {\n    if (!id) return\n\n    let relics = Object.values(window.store.getState().relicsById)\n    console.log('idChange', id)\n\n    setSelectedScoringCharacter(id)\n    setCurrentlySelectedCharacterId(id)\n\n    let scoringMetadata = Utils.clone(DB.getScoringMetadata(id))\n    let possibleSubstats = Object.assign(...Constants.SubStats.map(x => ({ [x]: true })));\n    let level80Stats = DB.getMetadata().characters[id].promotions[80]\n    scoringMetadata.stats[Constants.Stats.HP] = scoringMetadata.stats[Constants.Stats.HP_P] * 38 / (level80Stats[Constants.Stats.HP] * 2 * 0.03888)\n    scoringMetadata.stats[Constants.Stats.ATK] = scoringMetadata.stats[Constants.Stats.ATK_P] * 19 / (level80Stats[Constants.Stats.ATK] * 2 * 0.03888)\n    scoringMetadata.stats[Constants.Stats.DEF] = scoringMetadata.stats[Constants.Stats.DEF_P] * 19 / (level80Stats[Constants.Stats.DEF] * 2 * 0.04860)\n\n    for (let relic of relics) {\n      let scoringResult = RelicScorer.score(relic, id)\n      let subScore = parseFloat(scoringResult.score)\n      let mainScore = 0\n      if (Utils.hasMainStat([relic.part])) {\n        if (scoringMetadata.parts[relic.part].includes(relic.main.stat)) {\n          mainScore = 64.8\n        } else {\n          mainScore = scoringMetadata.stats[relic.main.stat] * 64.8\n        }\n      } else {\n        mainScore = 64.8\n      }\n\n      // Predict substat scores\n      let substats = relic.substats\n      let substatScoreEntries = Object.entries(scoringMetadata.stats)\n        .filter(x => possibleSubstats[x[0]])\n        .filter(x => !substats.map(x => x.stat).includes(x[0])) // Exclude already existing substats\n        .sort((a, b) => b[1] - a[1])\n\n      let bestUnobtainedSubstat = substatScoreEntries[0]\n      let finalSubstats = [...substats.map(x => x.stat), bestUnobtainedSubstat[0]]\n      let finalSubstatWeights = finalSubstats.map(x => scoringMetadata.stats[x])\n      let bestOverallSubstatWeight = finalSubstatWeights.sort((a, b) => b - a)[0]\n      let avgWeight = (finalSubstatWeights.reduce((a, b) => a + b, 0) - bestUnobtainedSubstat[1] / 2) / 4\n\n      let extraRolls = 0\n\n      let missingSubstats = (4 - substats.length)\n      let missingRolls = Math.ceil(((15 - (5 - relic.grade) * 3) - relic.enhance) / 3) - missingSubstats\n\n      for (let i = 0; i < missingSubstats; i++) {\n        extraRolls += 1 * bestUnobtainedSubstat[1]\n      }\n\n      for (let i = 0; i < missingRolls; i++) {\n        extraRolls += bestOverallSubstatWeight\n      }\n\n\n      relic.relicsTabWeight = Utils.precisionRound(subScore + mainScore)\n      relic.bestCaseWeight = relic.relicsTabWeight + extraRolls * 6.48\n      relic.averageCaseWeight = relic.relicsTabWeight + extraRolls * 6.48 * avgWeight\n    }\n\n    DB.setRelics(relics)\n\n    window.relicsGrid.current.api.applyColumnState({\n      defaultState: { sort: null },\n    });\n\n    window.relicsGrid.current.api.applyColumnState({\n      state: [{ colId: 'relicsTabWeight', sort: 'desc' }],\n      defaultState: { sort: null },\n    });\n\n    window.relicsGrid.current.api.redrawRows()\n  }\n\n  function clearClicked() {\n    setRelicTabFilters({\n      set: [],\n      part: [],\n      enhance: [],\n      mainStats: [],\n      subStats: [],\n    })\n  }\n\n  function scoringClicked() {\n    window.setIsScoringModalOpen(true)\n  }\n\n  function rescoreClicked() {\n    characterSelectorChange(currentlySelectedCharacterId)\n  }\n\n  return (\n    <Flex vertical gap={2}>\n      <Flex gap={10}>\n        <Flex vertical flex={1}>\n          <HeaderText>Relic recommendation character</HeaderText>\n          <Flex gap={10}>\n            <Select\n              showSearch\n              filterOption={Utils.characterNameFilterOption}\n              onChange={characterSelectorChange}\n              options={characterOptions}\n              style={{ flex: 1 }}\n            />\n            <Button\n              onClick={rescoreClicked}\n              style={{ flex: 1, padding: '0px' }}\n            >\n              Reapply scores\n            </Button>\n            <Button\n              onClick={scoringClicked}\n              style={{ flex: 1, padding: '0px' }}\n            >\n              Scoring algorithm\n            </Button>\n          </Flex>\n        </Flex>\n        <Flex vertical style={{ height: '100%' }} flex={1}>\n          <HeaderText>Filter actions</HeaderText>\n          <Button onClick={clearClicked}>\n            Clear filters\n          </Button>\n        </Flex>\n      </Flex>\n\n      <Flex gap={10}>\n        <Flex vertical flex={1}>\n          <HeaderText>Part</HeaderText>\n          <FilterRow name='part' tags={partsData} flexBasis='15%' />\n        </Flex>\n        <Flex vertical style={{ height: '100%' }} flex={1}>\n          <HeaderText>Enhance</HeaderText>\n          <FilterRow name='enhance' tags={enhanceData} flexBasis='15%' />\n        </Flex>\n      </Flex>\n\n      <Flex vertical>\n        <HeaderText>Set</HeaderText>\n        <FilterRow name='set' tags={setsData} flexBasis='6.25%' />\n      </Flex>\n\n      <Flex vertical>\n        <HeaderText>Main stats</HeaderText>\n        <FilterRow name='mainStats' tags={mainStatsData} />\n      </Flex>\n\n      <Flex vertical>\n        <HeaderText>Substats</HeaderText>\n        <FilterRow name='subStats' tags={subStatsData} />\n      </Flex>\n    </Flex>\n  )\n}\n\nfunction FilterRow(props) {\n  let relicTabFilters = window.store(s => s.relicTabFilters);\n  let setRelicTabFilters = window.store(s => s.setRelicTabFilters);\n\n  let selectedTags = relicTabFilters[props.name]\n\n  const handleChange = (tag, checked) => {\n    const nextSelectedTags = checked\n      ? [...selectedTags, tag]\n      : selectedTags.filter((t) => t != tag);\n\n    let clonedFilters = Utils.clone(relicTabFilters)\n    clonedFilters[props.name] = nextSelectedTags\n    console.log('Relic tab filters', props.name, clonedFilters);\n\n    setRelicTabFilters(clonedFilters)\n  };\n\n  return (\n    <Flex\n      style={{\n        flexWrap: 'wrap',\n        flexGrow: 1,\n        backgroundColor: '#243356',\n        boxShadow: '0px 0px 0px 1px #3F5A96 inset',\n        borderRadius: 6,\n        overflow: 'hidden'\n      }}\n    >\n      {props.tags.map((tag) => (\n        <CheckableTag\n          key={tag.key}\n          checked={selectedTags.includes(tag.key)}\n          onChange={(checked) => handleChange(tag.key, checked)}\n          style={{\n            flex: 1,\n            flexBasis: props.flexBasis,\n            boxShadow: '1px 1px 0px 0px #3F5A96'\n          }}\n        >\n          <Flex align='center' justify='space-around' style={{ height: '100%' }}>\n            {tag.display}\n          </Flex>\n        </CheckableTag>\n      ))}\n    </Flex>\n  )\n}\nFilterRow.propTypes = {\n  name: PropTypes.string,\n  tags: PropTypes.array,\n  flexBasis: PropTypes.string,\n}\n\n\n","import { Button, Flex, Popconfirm } from 'antd';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\n\nimport RelicPreview from './RelicPreview';\nimport { Constants } from '../lib/constants.ts';\nimport RelicModal from './RelicModal';\nimport { Gradient } from '../lib/gradient';\nimport { Message } from '../lib/message';\nimport { TooltipImage } from './TooltipImage';\nimport RelicFilterBar from \"./RelicFilterBar\";\nimport DB from \"../lib/db\";\nimport { Renderer } from \"../lib/renderer\";\nimport { SaveState } from \"../lib/saveState\";\nimport { Hint } from \"../lib/hint\";\nimport PropTypes from \"prop-types\";\n\nexport default function RelicsTab(props) {\n  const gridRef = useRef();\n  window.relicsGrid = gridRef;\n\n  const [relicRows, setRelicRows] = useState(DB.getRelics());\n  window.setRelicRows = setRelicRows\n\n  const [selectedRelic, setSelectedRelic] = useState();\n\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [addModalOpen, setAddModalOpen] = useState(false);\n  window.setEditModalOpen = setEditModalOpen\n  window.setSelectedRelic = setSelectedRelic\n\n  let relicTabFilters = window.store(s => s.relicTabFilters);\n  useEffect(() => {\n    if (!window.relicsGrid?.current?.api) return\n    console.log('RelicTabFilters', relicTabFilters)\n\n    if (Object.values(relicTabFilters).filter(x => x.length > 0).length == 0) {\n      window.relicsGrid.current.api.setFilterModel(null)\n      return;\n    }\n\n    // Calculate filter conditions\n    let filterModel = {}\n\n    filterModel.set = {\n      conditions: relicTabFilters.set.map(x => ({\n        filterType: 'text',\n        type: 'equals',\n        filter: x\n      })),\n      operator: 'OR'\n    }\n\n    filterModel.part = {\n      conditions: relicTabFilters.part.map(x => ({\n        filterType: 'text',\n        type: 'equals',\n        filter: x\n      })),\n      operator: 'OR'\n    }\n\n\n    filterModel['main.stat'] = {\n      conditions: relicTabFilters.mainStats.map(x => ({\n        filterType: 'text',\n        type: 'equals',\n        filter: x\n      })),\n      operator: 'OR'\n    }\n\n    // Substats have to filter augmented stats individually\n    for (let substatFilter of relicTabFilters.subStats) {\n      filterModel[`augmentedStats.${substatFilter}`] = {\n        filterType: 'number',\n        type: 'greaterThan',\n        filter: 0\n      }\n    }\n\n    // Enhance includes a range from x to x + 2\n    filterModel.enhance = {\n      conditions: relicTabFilters.enhance.flatMap(x => [\n        {\n          filterType: 'number',\n          type: 'equals',\n          filter: x\n        },\n        {\n          filterType: 'number',\n          type: 'equals',\n          filter: x + 1\n        },\n        {\n          filterType: 'number',\n          type: 'equals',\n          filter: x + 2\n        }\n      ]),\n      operator: 'OR'\n    }\n\n    console.log('FilterModel', filterModel)\n\n    // Apply to grid\n    window.relicsGrid.current.api.setFilterModel(filterModel);\n  }, [relicTabFilters])\n\n  const columnDefs = useMemo(() => [\n    { field: 'equippedBy', headerName: 'Owner', cellRenderer: Renderer.characterIcon },\n    { field: 'set', cellRenderer: Renderer.anySet, width: 50, headerName: 'Set', filter: 'agTextColumnFilter' },\n    { field: 'grade', width: 60, cellRenderer: Renderer.renderGradeCell, filter: 'agNumberColumnFilter' },\n    { field: 'part', valueFormatter: Renderer.readablePart, width: 80, filter: 'agTextColumnFilter' },\n    { field: 'enhance', width: 60, filter: 'agNumberColumnFilter' },\n    { field: 'main.stat', valueFormatter: Renderer.readableStat, headerName: 'Main', width: 100, filter: 'agTextColumnFilter' },\n    { field: 'main.value', headerName: 'Value', valueFormatter: Renderer.mainValueRenderer, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.HP_P}`, headerName: 'HP %', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.ATK_P}`, headerName: 'ATK %', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.DEF_P}`, headerName: 'DEF %', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.HP}`, headerName: 'HP', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesFloor, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.ATK}`, headerName: 'ATK', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesFloor, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.DEF}`, headerName: 'DEF', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesFloor, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.SPD}`, headerName: 'SPD', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroes10ths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.CR}`, headerName: 'CR', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.CD}`, headerName: 'CD', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.EHR}`, headerName: 'EHR', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.RES}`, headerName: 'RES', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    { field: `augmentedStats.${Constants.Stats.BE}`, headerName: 'BE', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideZeroesX100Tenths, filter: 'agNumberColumnFilter' },\n    // {field: `cs`, headerName: 'CScore', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.scoreRenderer, filter: 'agNumberColumnFilter'},\n    // {field: `ss`, headerName: 'SScore', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.scoreRenderer, filter: 'agNumberColumnFilter'},\n    // {field: `ds`, headerName: 'DScore', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.scoreRenderer, filter: 'agNumberColumnFilter'},\n    { field: `relicsTabWeight`, headerName: 'WEIGHT', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideNaNAndRound, filter: 'agNumberColumnFilter', width: 70 },\n    { field: `averageCaseWeight`, headerName: 'AVGCASE', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideNaNAndRound, filter: 'agNumberColumnFilter', width: 70 },\n    { field: `bestCaseWeight`, headerName: 'BESTCASE', cellStyle: Gradient.getRelicGradient, valueFormatter: Renderer.hideNaNAndRound, filter: 'agNumberColumnFilter', width: 70 },\n  ], []);\n\n  const gridOptions = useMemo(() => ({\n    rowHeight: 33,\n    rowSelection: 'single',\n    // suppressDragLeaveHidesColumns: true,\n    suppressScrollOnNewData: true,\n    suppressCellFocus: true\n  }), []);\n\n  const defaultColDef = useMemo(() => ({\n    sortable: true,\n    width: 45,\n    headerClass: 'relicsTableHeader',\n    sortingOrder: ['desc', 'asc'],\n    filterParams: { maxNumConditions: 100 }\n  }), []);\n\n  const cellClickedListener = useCallback(event => {\n    console.log('cellClicked', event);\n    setSelectedRelic(event.data)\n  }, []);\n\n  const onCellDoubleClickedListener = useCallback(e => {\n    console.log('cellDblClicked', e);\n    setSelectedRelic(e.data);\n    setEditModalOpen(true);\n  }, []);\n\n  function onAddOk(relic) {\n    DB.setRelic(relic)\n    setRelicRows(DB.getRelics())\n    SaveState.save()\n\n    setSelectedRelic(relic)\n\n    Message.success('Successfully added relic')\n    console.log('onAddOk', relic)\n  }\n\n  function onEditOk(relic) {\n    relic.id = selectedRelic.id\n\n    const updatedRelic = { ...selectedRelic, ...relic }\n\n    if (updatedRelic.equippedBy) {\n      DB.equipRelic(updatedRelic, updatedRelic.equippedBy)\n    } else {\n      DB.unequipRelicById(updatedRelic.id);\n    }\n\n    DB.setRelic(updatedRelic)\n    setRelicRows(DB.getRelics())\n    SaveState.save()\n\n    setSelectedRelic(updatedRelic)\n\n    window.forceOptimizerBuildPreviewUpdate()\n    window.forceCharacterTabUpdate()\n\n    Message.success('Successfully edited relic')\n    console.log('onEditOk', updatedRelic)\n  }\n\n  function editClicked() {\n    console.log('edit clicked');\n    setEditModalOpen(true)\n  }\n\n  function addClicked() {\n    console.log('add clicked');\n    setAddModalOpen(true)\n  }\n\n  function deleteClicked() {\n    console.log('delete clicked');\n\n    if (!selectedRelic) return Message.error('No relic selected')\n\n    DB.deleteRelic(selectedRelic.id)\n    setRelicRows(DB.getRelics())\n    setSelectedRelic(undefined)\n    SaveState.save()\n\n    Message.success('Successfully deleted relic')\n  }\n\n\n  return (\n    <Flex style={{ display: props.active ? 'block' : 'none', width: 1250 }}>\n      <RelicModal selectedRelic={selectedRelic} type='add' onOk={onAddOk} setOpen={setAddModalOpen} open={addModalOpen} />\n      <RelicModal selectedRelic={selectedRelic} type='edit' onOk={onEditOk} setOpen={setEditModalOpen} open={editModalOpen} />\n      <Flex vertical gap={10}>\n\n        <RelicFilterBar />\n\n        <div id=\"relicGrid\" className=\"ag-theme-balham-dark\" style={{ width: 1250, height: 500, resize: 'vertical', overflow: 'hidden' }}>\n\n          <AgGridReact\n            ref={gridRef} // Ref for accessing Grid's API\n\n            rowData={relicRows} // Row Data for Rows\n            gridOptions={gridOptions}\n\n            columnDefs={columnDefs} // Column Defs for Columns\n            defaultColDef={defaultColDef} // Default Column Properties\n\n            animateRows={true} // Optional - set to 'true' to have rows animate when sorted\n            headerHeight={24}\n            rowSelection='multiple' // Options - allows click selection of rows\n\n            onCellClicked={cellClickedListener} // Optional - registering for Grid Event\n            onCellDoubleClicked={onCellDoubleClickedListener}\n          />\n        </div>\n        <Flex gap={10}>\n          <Button type=\"primary\" onClick={editClicked} style={{ width: '150px' }} >\n            Edit Relic\n          </Button>\n          <Button type=\"primary\" onClick={addClicked} style={{ width: '150px' }} >\n            Add New Relic\n          </Button>\n          <Popconfirm\n            title=\"Confirm\"\n            description=\"Delete this relic?\"\n            onConfirm={deleteClicked}\n            placement=\"bottom\"\n            okText=\"Yes\"\n            cancelText=\"Cancel\"\n          >\n            <Button type=\"primary\" style={{ width: '150px' }} >\n              Delete Relic\n            </Button>\n          </Popconfirm>\n        </Flex>\n        <Flex gap={10}>\n          <RelicPreview relic={selectedRelic} />\n          <Flex style={{ display: 'block' }}>\n            <TooltipImage type={Hint.relics()} />\n          </Flex>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\nRelicsTab.propTypes = {\n  active: PropTypes.bool,\n}\n","import React from 'react';\nimport { Divider, Flex, Image, Typography } from 'antd';\nimport RelicPreview from './RelicPreview';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { RelicScorer } from '../lib/relicScorer.ts';\nimport { StatCalculator } from '../lib/statCalculator';\nimport { DB } from '../lib/db';\nimport { Assets } from '../lib/assets';\nimport { Utils } from '../lib/utils';\nimport { Constants } from '../lib/constants.ts';\n\nconst { Text } = Typography;\n\nconst StatText = styled(Text)`\n  font-family: Segoe UI,Frutiger,Frutiger Linotype,Dejavu Sans,Helvetica Neue,Arial,sans-serif;\n  font-size: 17px;\n  font-weight: 400;\n`\n\nlet defaultGap = 8;\nlet parentH = 280 * 3 + defaultGap * 2;\nlet parentW = 150 + 200 + defaultGap;\nlet innerW = 1024;\nlet lcParentH = 280;\nlet lcParentW = 240;\nlet lcInnerW = 250;\nlet lcInnerH = 1260 / 902 * lcInnerW;\nlet middleColumnWidth = 240;\n\nexport function CharacterPreview(props) {\n  console.log('CharacterPreview', props)\n\n  const { source, character } = props;\n\n  let relicsById = window.store(s => s.relicsById)\n  let characterTabBlur = window.store(s => s.characterTabBlur);\n  let setCharacterTabBlur = window.store(s => s.setCharacterTabBlur);\n  let isScorer = source == 'scorer'\n\n  if (!character) {\n    return (\n      <Flex style={{ display: 'flex', height: parentH }} gap={defaultGap}>\n        <div style={{ width: parentW, overflow: 'hidden', outline: '2px solid #243356', height: '100%', borderRadius: '10px' }}>\n        </div>\n\n        <Flex gap={defaultGap}>\n          <Flex vertical gap={defaultGap} align='center' style={{ outline: '2px solid #243356', width: '100%', height: '100%', borderRadius: '10px' }}>\n            <Flex vertical style={{ width: middleColumnWidth, height: 280 * 2 + defaultGap }} justify='space-between'>\n              <Flex></Flex>\n            </Flex>\n          </Flex>\n\n          <Flex vertical gap={defaultGap}>\n            <RelicPreview />\n            <RelicPreview />\n            <RelicPreview />\n          </Flex>\n\n          <Flex vertical gap={defaultGap}>\n            <RelicPreview />\n            <RelicPreview />\n            <RelicPreview />\n          </Flex>\n        </Flex>\n      </Flex>\n    )\n  }\n\n  let displayRelics\n  let scoringResults\n  let finalStats\n  if (isScorer) {\n    let relicsArray = Object.values(character.equipped)\n    scoringResults = RelicScorer.scoreCharacterWithRelics(character, relicsArray);\n    displayRelics = character.equipped\n    finalStats = StatCalculator.calculateCharacterWithRelics(character, Object.values(character.equipped));\n  } else {\n    scoringResults = RelicScorer.scoreCharacter(character);\n    displayRelics = {\n      Head: relicsById[character.equipped?.Head],\n      Hands: relicsById[character.equipped?.Hands],\n      Body: relicsById[character.equipped?.Body],\n      Feet: relicsById[character.equipped?.Feet],\n      PlanarSphere: relicsById[character.equipped?.PlanarSphere],\n      LinkRope: relicsById[character.equipped?.LinkRope],\n    }\n    finalStats = StatCalculator.calculate(character);\n  }\n  let scoredRelics = scoringResults.relics || []\n\n  console.log('SCORING RESULTS', scoringResults)\n\n  console.log({ finalStats })\n  console.log({ character })\n\n  let lightConeId = character.form.lightCone\n  let lightConeLevel = character.form.lightConeLevel\n  let lightConeSuperimposition = character.form.lightConeSuperimposition\n  let lightConeMetadata = DB.getMetadata().lightCones[lightConeId]\n  let lightConeName = lightConeMetadata?.name || ''\n  let lightConeSrc = Assets.getLightConePortrait(lightConeMetadata)\n\n  let characterId = character.form.characterId\n  let characterLevel = character.form.characterLevel\n  let characterEidolon = character.form.characterEidolon\n  let characterMetadata = DB.getMetadata().characters[characterId]\n  let characterName = characterMetadata.displayName\n  let characterPath = characterMetadata.path\n  let characterElement = characterMetadata.element\n\n  console.log('Level ' + characterLevel + ' E' + characterEidolon)\n  console.log('Level ' + lightConeLevel + ' S' + lightConeSuperimposition)\n\n  let elementToDmgValueMapping = {\n    Physical: Constants.Stats.Physical_DMG,\n    Fire: Constants.Stats.Fire_DMG,\n    Ice: Constants.Stats.Ice_DMG,\n    Thunder: Constants.Stats.Lightning_DMG,\n    Wind: Constants.Stats.Wind_DMG,\n    Quantum: Constants.Stats.Quantum_DMG,\n    Imaginary: Constants.Stats.Imaginary_DMG,\n  }\n  let elementalDmgValue = elementToDmgValueMapping[characterElement]\n  // let cv = character.cv\n\n  console.log({\n    lightConeMetadata,\n    characterMetadata\n  })\n\n  let iconSize = 25\n\n  function StatRow(props) {\n    const { stat } = props\n    let readableStat = stat.replace('DMG Boost', 'DMG')\n    let value = finalStats[stat]\n\n    if (stat == 'CV') {\n      value = Utils.truncate10ths(value).toFixed(1)\n    } else if (stat == Constants.Stats.SPD) {\n      value = Utils.truncate10ths(value).toFixed(1)\n    } else if (Utils.isFlat(stat)) {\n      value = Math.floor(value)\n    } else {\n      value = Utils.truncate10ths(value * 100).toFixed(1)\n    }\n\n    if (!finalStats) return console.log('No final stats');\n    return (\n      <Flex justify='space-between' align='center'>\n        <img src={Assets.getStatIcon(stat)} style={{ width: iconSize, height: iconSize, marginRight: 3 }} />\n        <StatText>{readableStat}</StatText>\n        <Divider style={{ margin: 'auto 10px', flexGrow: 1, width: 'unset', minWidth: 'unset' }} dashed />\n        <StatText>{`${value}${Utils.isFlat(stat) || stat == 'CV' ? '' : '%'}`}</StatText>\n      </Flex>\n    )\n  }\n  StatRow.propTypes = {\n    stat: PropTypes.string,\n  };\n\n  function Rarity() {\n    let children = []\n    for (let i = 0; i < characterMetadata.rarity; i++) {\n      children.push(\n        <img src={Assets.getStar()} key={i} style={{ width: 20, height: 20 }} />\n      )\n    }\n    return (\n      <Flex gap={0} align='center'>\n        {children}\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex style={{ display: character ? 'flex' : 'none', height: parentH }} gap={defaultGap}>\n      <div style={{ width: `${parentW}px`, height: `${parentH}px`, overflow: 'hidden', borderRadius: '10px' }}>\n        <div\n          style={{\n            position: 'relative',\n          }}\n        >\n          <img\n            src={Assets.getCharacterPortraitById(character.id)}\n            style={{\n              position: 'absolute',\n              left: -DB.getMetadata().characters[character.id].imageCenter.x / 2 + parentW / 2,\n              top: -DB.getMetadata().characters[character.id].imageCenter.y / 2 + parentH / 2,\n              width: innerW,\n              filter: (characterTabBlur && !isScorer) ? 'blur(20px)' : ''\n            }}\n            onLoad={() => setTimeout(() => setCharacterTabBlur(false), 100)}\n          />\n        </div>\n      </div>\n\n      <Flex gap={defaultGap}>\n        <Flex vertical gap={defaultGap} align='center'>\n          <Flex vertical style={{ width: middleColumnWidth, height: 280 * 2 + defaultGap }} justify='space-between'>\n            <Flex vertical gap={defaultGap}>\n              <Flex justify='space-between' style={{ height: 50 }}>\n                <Image\n                  preview={false}\n                  width={50}\n                  src={Assets.getElement(characterElement)}\n                />\n                <Rarity />\n                <Image\n                  preview={false}\n                  width={50}\n                  src={Assets.getPathFromClass(characterPath)}\n                />\n              </Flex>\n              <Flex vertical>\n                <StatText style={{ fontSize: 24, fontWeight: 400, textAlign: 'center' }}>\n                  {characterName}\n                </StatText>\n                <StatText style={{ fontSize: 18, fontWeight: 400, textAlign: 'center' }}>\n                  {`Lv${characterLevel} E${characterEidolon}`}\n                </StatText>\n              </Flex>\n            </Flex>\n\n            <Flex vertical style={{ width: middleColumnWidth, paddingLeft: 8, paddingRight: 12 }} gap={4}>\n              <StatRow stat={Constants.Stats.HP} source={props.source} />\n              <StatRow stat={Constants.Stats.ATK} source={props.source} />\n              <StatRow stat={Constants.Stats.DEF} source={props.source} />\n              <StatRow stat={Constants.Stats.SPD} source={props.source} />\n              <StatRow stat={Constants.Stats.CR} source={props.source} />\n              <StatRow stat={Constants.Stats.CD} source={props.source} />\n              <StatRow stat={Constants.Stats.EHR} source={props.source} />\n              <StatRow stat={Constants.Stats.RES} source={props.source} />\n              <StatRow stat={Constants.Stats.BE} source={props.source} />\n              <StatRow stat={elementalDmgValue} source={props.source} />\n              <StatRow stat={'CV'} source={props.source} />\n            </Flex>\n\n            <Flex vertical>\n              <StatText style={{ fontSize: 17, fontWeight: 600, textAlign: 'center', color: '#e1a564' }} ellipsis={false}>\n                {`Character score: ${scoringResults.totalScore.toFixed(0)} ${scoringResults.totalScore == 0 ? '' : '(' + scoringResults.totalRating + ')'}`}\n              </StatText>\n            </Flex>\n\n            <Flex vertical>\n              <StatText style={{ fontSize: 18, fontWeight: 400, textAlign: 'center' }} ellipsis={true}>\n                {`${lightConeName}`}&nbsp;\n              </StatText>\n              <StatText style={{ fontSize: 18, fontWeight: 400, textAlign: 'center' }}>\n                {`Lv${lightConeLevel} S${lightConeSuperimposition}`}\n              </StatText>\n            </Flex>\n          </Flex>\n          <div style={{ width: `${lcParentW}px`, height: `${lcParentH}px`, overflow: 'hidden', borderRadius: '10px' }}>\n            <img\n              src={lightConeSrc}\n              style={{\n                width: lcInnerW,\n                transform: `translate(${(lcInnerW - lcParentW) / 2 / lcInnerW * -100}%, ${(lcInnerH - lcParentH) / 2 / lcInnerH * -100 + 8}%)`, // Magic # 8 to fit certain LCs\n                filter: (characterTabBlur && !isScorer) ? 'blur(20px)' : ''\n              }}\n            />\n          </div>\n        </Flex>\n\n        <Flex vertical gap={defaultGap}>\n          <RelicPreview relic={displayRelics.Head} source={props.source} characterId={characterId} score={scoredRelics.find(x => x.part == Constants.Parts.Head)} />\n          <RelicPreview relic={displayRelics.Body} source={props.source} characterId={characterId} score={scoredRelics.find(x => x.part == Constants.Parts.Body)} />\n          <RelicPreview relic={displayRelics.PlanarSphere} source={props.source} characterId={characterId} score={scoredRelics.find(x => x.part == Constants.Parts.PlanarSphere)} />\n        </Flex>\n\n        <Flex vertical gap={defaultGap}>\n          <RelicPreview relic={displayRelics.Hands} source={props.source} characterId={characterId} score={scoredRelics.find(x => x.part == Constants.Parts.Hands)} />\n          <RelicPreview relic={displayRelics.Feet} source={props.source} characterId={characterId} score={scoredRelics.find(x => x.part == Constants.Parts.Feet)} />\n          <RelicPreview relic={displayRelics.LinkRope} source={props.source} characterId={characterId} score={scoredRelics.find(x => x.part == Constants.Parts.LinkRope)} />\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\nCharacterPreview.propTypes = {\n  source: PropTypes.string,\n  character: PropTypes.object\n};","import React, { useCallback, useMemo, useRef } from 'react';\n\nimport { Button, Flex, Image, Popconfirm, Typography } from 'antd';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/styles/ag-grid.css';\nimport \"ag-grid-community/styles/ag-theme-balham.css\";\nimport \"../style/style.css\";\nimport DB from '../lib/db';\nimport { CharacterPreview } from './CharacterPreview';\nimport { Assets } from \"../lib/assets\";\nimport { SaveState } from \"../lib/saveState\";\nimport { Message } from \"../lib/message\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nfunction cellImageRenderer(params) {\n  let data = params.data\n  let characterIconSrc = Assets.getCharacterAvatarById(data.id)\n\n  // console.log('CellRenderer', data, characterMetadata)\n\n  return (\n    <Image\n      preview={false}\n      width={50}\n      src={characterIconSrc}\n      style={{ flex: '0 0 auto', maxWidth: '100%', minWidth: 50 }}\n    />\n  )\n}\n\nfunction cellRankRenderer(params) {\n  let data = params.data\n  let character = DB.getCharacters().find(x => x.id == data.id)\n\n  // console.log('CellRenderer', data, characterMetadata)\n  return (\n    <Text style={{ height: '100%' }}>\n      {character.rank + 1}\n    </Text>\n  )\n}\n\nfunction cellNameRenderer(params) {\n  let data = params.data\n  let characterMetadata = DB.getMetadata().characters[data.id]\n  let characterName = characterMetadata.displayName\n\n  let equippedNumber = data.equipped ? Object.values(data.equipped).filter(x => x != undefined).length : 0\n  // console.log('CellRenderer', equippedNumber, data, characterMetadata)\n  let color = '#81d47e'\n  if (equippedNumber < 6) color = '#eae084'\n  if (equippedNumber < 1) color = '#d72f2f'\n\n  return (\n    <Flex align='center' justify='flex-start' style={{ height: '100%', width: '100%' }}>\n      <Text style={{ margin: 'auto', textAlign: 'center', overflow: 'hidden', textOverflow: 'ellipsis', textWrap: 'wrap', fontSize: 14, width: '100%', lineHeight: '18px' }}>\n        {characterName}\n      </Text>\n      <Flex style={{ display: 'block', width: 3, height: '100%', backgroundColor: color }}>\n\n      </Flex>\n    </Flex>\n  )\n}\n\n\nexport default function CharacterTab(props) {\n  console.log('CharacterTab')\n  const characterGrid = useRef(); // Optional - for accessing Grid's API\n  window.characterGrid = characterGrid;\n\n  const [characterRows, setCharacterRows] = React.useState(DB.getCharacters());\n  window.setCharacterRows = setCharacterRows;\n\n  const setSelectedScoringCharacter = window.store(s => s.setSelectedScoringCharacter);\n\n  const characterTabSelectedId = window.store(s => s.characterTabSelectedId)\n  const setCharacterTabSelectedId = window.store(s => s.setCharacterTabSelectedId)\n  const charactersById = window.store(s => s.charactersById)\n  const selectedCharacter = charactersById[characterTabSelectedId]\n\n  const [, forceUpdate] = React.useReducer(o => !o);\n  window.forceCharacterTabUpdate = () => {\n    forceUpdate()\n    characterGrid.current.api.redrawRows()\n  }\n\n  const columnDefs = useMemo(() => [\n    { field: '', headerName: 'Icon', cellRenderer: cellImageRenderer, width: 52 },\n    { field: '', headerName: 'Rank', cellRenderer: cellRankRenderer, width: 50, rowDrag: true },\n    { field: '', headerName: 'Character', flex: 1, cellRenderer: cellNameRenderer },\n  ], []);\n\n  const gridOptions = useMemo(() => ({\n    rowHeight: 50,\n    rowSelection: 'single',\n    rowDragManaged: true,\n    animateRows: true,\n    suppressDragLeaveHidesColumns: true,\n    suppressScrollOnNewData: true,\n    suppressCellFocus: true\n  }), []);\n\n  const defaultColDef = useMemo(() => ({\n    sortable: false,\n    cellStyle: { display: 'flex' }\n  }), []);\n\n  const cellClickedListener = useCallback(event => {\n    console.log('cellClicked', event);\n    let data = event.data\n\n    window.store.getState().setCharacterTabBlur(window.store.getState().characterTabSelectedId != data.id) // Only blur if different character\n    setCharacterTabSelectedId(data.id)\n  }, []);\n\n  // TODO: implement routing to handle this\n  const setActiveKey = window.store(s => s.setActiveKey);\n  const setSelectedOptimizerCharacter = window.store(s => s.setSelectedOptimizerCharacter);\n  const cellDoubleClickedListener = useCallback(e => {\n    // setSelectedChar\n    setSelectedOptimizerCharacter(charactersById[e.data.id]);\n\n    // set view\n    setActiveKey('optimizer');\n  }, []);\n\n  function drag(event, index) {\n    const dragged = event.node.data;\n    DB.insertCharacter(dragged.id, index);\n    SaveState.save()\n    characterGrid.current.api.redrawRows()\n  }\n\n  const onRowDragEnd = useCallback(event => {\n    drag(event, event.overIndex)\n  }, []);\n\n  const onRowDragLeave = useCallback(event => {\n    if (event.overIndex == 0) {\n      drag(event, 0)\n    } else if (event.overIndex == -1 && event.vDirection == 'down') {\n      drag(event, DB.getCharacters().length)\n    } else if (event.overIndex == -1 && event.vDirection == 'up') {\n      drag(event, 0)\n    } else {\n      drag(event, event.overIndex)\n    }\n  }, []);\n\n  function removeClicked() {\n    let selectedNodes = characterGrid.current.api.getSelectedNodes()\n    if (!selectedNodes || selectedNodes.length == 0) {\n      return\n    }\n\n    let row = selectedNodes[0].data\n    let id = row.id\n\n    DB.removeCharacter(id)\n    setCharacterRows(DB.getCharacters())\n    setCharacterTabSelectedId(undefined)\n    if (window.relicsGrid?.current?.api) {\n      window.relicsGrid.current.api.redrawRows()\n    }\n\n    SaveState.save()\n\n    Message.success('Successfully removed character')\n  }\n\n  function unequipClicked() {\n    console.log('unequipClicked', DB.getCharacterById(characterTabSelectedId))\n\n    let selectedNodes = characterGrid.current.api.getSelectedNodes()\n    if (!selectedNodes || selectedNodes.length == 0) {\n      return\n    }\n    let row = selectedNodes[0].data\n    let id = row.id\n\n    DB.unequipCharacter(id);\n\n    characterGrid.current.api.redrawRows()\n    window.forceCharacterTabUpdate()\n    Message.success('Successfully unequipped character')\n    window.relicsGrid.current.api.redrawRows()\n\n    SaveState.save()\n  }\n\n  function scoringAlgorithmClicked() {\n    console.log('Scoring algorithm clicked', characterTabSelectedId)\n    setSelectedScoringCharacter(characterTabSelectedId)\n    window.setIsScoringModalOpen(true)\n  }\n\n  let defaultGap = 8;\n\n  let parentH = 280 * 3 + defaultGap * 2;\n\n  return (\n    <div style={{\n      ...{ display: props.active ? 'block' : 'none' },\n      ...{\n        height: '100%'\n      }\n    }}>\n      <Flex style={{ height: '100%' }} gap={8}>\n        <Flex vertical gap={10}>\n          <div id=\"characterGrid\" className=\"ag-theme-balham-dark\" style={{ display: 'block', width: 230, height: parentH - 85 }}>\n            <AgGridReact\n              ref={characterGrid} // Ref for accessing Grid's API\n\n              rowData={characterRows} // Row Data for Rows\n              gridOptions={gridOptions}\n              getRowNodeId={data => data.id}\n\n              columnDefs={columnDefs} // Column Defs for Columns\n              defaultColDef={defaultColDef} // Default Column Properties\n              deltaRowDataMode={true}\n\n              headerHeight={24}\n\n              onCellClicked={cellClickedListener} // Optional - registering for Grid Event\n              onCellDoubleClicked={cellDoubleClickedListener}\n              onRowDragEnd={onRowDragEnd}\n              onRowDragLeave={onRowDragLeave}\n            />\n          </div>\n          <Flex vertical gap={10}>\n            <Flex justify='space-between'>\n\n              <Popconfirm\n                title=\"Confirm\"\n                description=\"Remove this character?\"\n                onConfirm={removeClicked}\n                placement=\"bottom\"\n                okText=\"Yes\"\n                cancelText=\"Cancel\"\n              >\n                <Button style={{ width: 110 }}>\n                  Remove\n                </Button>\n              </Popconfirm>\n              <Popconfirm\n                title=\"Confirm\"\n                description=\"Unequip this character?\"\n                onConfirm={unequipClicked}\n                placement=\"bottom\"\n                okText=\"Yes\"\n                cancelText=\"Cancel\"\n              >\n                <Button style={{ width: 110 }}>\n                  Unequip\n                </Button>\n              </Popconfirm>\n            </Flex>\n            <Button style={{}} onClick={scoringAlgorithmClicked}>\n              Scoring algorithm\n            </Button>\n          </Flex>\n        </Flex>\n        <CharacterPreview character={selectedCharacter} />\n      </Flex>\n    </div>\n  );\n}\nCharacterTab.propTypes = {\n  active: PropTypes.bool,\n};","import React from 'react';\nimport { Flex, Typography, } from 'antd';\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nexport default function ComingSoonTab(props) {\n  return (\n    <div style={{ display: props.active ? 'block' : 'none' }}>\n      <Flex style={{ margin: 20 }}>\n        <Text>\n          More Star Rail tools coming soon! Drop by the <Typography.Link target=\"_blank\" href=\"https://discord.gg/rDmB4Un7qg\">Discord server</Typography.Link> for updates, to share ideas, or just hang out.\n        </Text>\n      </Flex>\n    </div>\n  );\n}\nComingSoonTab.propTypes = {\n  active: PropTypes.bool,\n};","import React, { useEffect, useState } from 'react';\nimport { Button, Flex, Form, Input, Segmented, Typography, } from 'antd';\nimport { CharacterPreview } from './CharacterPreview';\nimport { SaveState } from '../lib/saveState';\nimport { Message } from \"../lib/message\";\nimport { CharacterConverter } from \"../lib/characterConverter\";\nimport { Assets } from \"../lib/assets\";\nimport PropTypes from \"prop-types\";\nimport DB from \"../lib/db\";\n\nconst { Text } = Typography;\n\nexport default function RelicScorerTab(props) {\n  console.log('RelicScorerTab')\n\n  const [loading, setLoading] = useState(false);\n  const [availableCharacters, setAvailableCharacters] = useState([])\n\n  let scorerId = window.store(s => s.scorerId);\n  let setScorerId = window.store(s => s.setScorerId);\n\n  const [scorerForm] = Form.useForm();\n  window.scorerForm = scorerForm\n\n  function buttonClick() {\n    setLoading(true)\n  }\n\n  function onFinish(x) {\n    console.log('finish', x)\n    // let data = CharacterStats.getTestData()\n\n    const options = {\n      method: 'POST',\n      body: x.scorerId,\n    };\n\n    setScorerId(x.scorerId);\n    SaveState.save()\n\n    // fetch('http://127.0.0.1:5000/getAccount', options) // Local testing\n    fetch('https://08hm0krwt2.execute-api.us-west-2.amazonaws.com/dev/getAccount', options)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log(data);\n        if (!data.status || data.status != 'SUCCESS') {\n          setLoading(false)\n          Message.error('Error loading ID')\n          return 'ERROR'\n        }\n        data = data.data\n        let characters = [\n          data.detailInfo.avatarDetailList[3],\n          data.detailInfo.avatarDetailList[0],\n          data.detailInfo.avatarDetailList[1],\n          data.detailInfo.avatarDetailList[2],\n        ]\n          .filter(x => !!x)\n          .filter((item, index, array) => {\n            return array.findIndex((i) => i.avatarId === item.avatarId) === index;\n          });\n\n        console.log('characters', characters)\n\n        let converted = characters.map(x => CharacterConverter.convert(x))\n        setAvailableCharacters(converted)\n        setLoading(false)\n        console.log(converted)\n      })\n      .catch(error => {\n        console.error('Fetch error:', error);\n        setLoading(false)\n      });\n  }\n\n  function scoringClicked() {\n    window.setIsScoringModalOpen(true)\n  }\n\n  function CharacterPreviewSelection(props) {\n    const [selectedCharacter, setSelectedCharacter] = useState(availableCharacters[0]);\n    let setSelectedScoringCharacter = window.store(s => s.setSelectedScoringCharacter);\n\n    // TODO: Revisit if force updates are necessary\n    const [, forceUpdate] = React.useReducer(o => !o, true);\n    window.forceRelicScorerTabUpdate = forceUpdate\n\n    console.log('CharacterPreviewSelection', props)\n\n    useEffect(() => {\n      setSelectedScoringCharacter(selectedCharacter?.id)\n    }, [selectedCharacter])\n\n    let options = []\n    for (let i = 0; i < props.availableCharacters.length; i++) {\n      let availableCharacter = props.availableCharacters[i]\n      options.push({\n        label: (\n          <Flex align='center'>\n            <img style={{ width: 100 }} src={Assets.getCharacterAvatarById(availableCharacter.id)}></img>\n          </Flex>\n        ),\n        value: availableCharacter.id,\n      })\n    }\n\n    function selectionChange(selected) {\n      console.log('selectionChange', selected)\n      setSelectedCharacter(availableCharacters.find(x => x.id == selected))\n      setSelectedScoringCharacter(selected)\n    }\n\n    async function importClicked() {\n      let newRelics = availableCharacters\n        .flatMap(x => Object.values(x.equipped))\n        .filter(x => !!x)\n\n      console.log('importClicked', availableCharacters, newRelics)\n      DB.mergeVerifiedRelicsWithState(newRelics)\n      SaveState.save()\n    }\n\n    return (\n      <Flex vertical align='center' gap={5} style={{ marginBottom: 100 }}>\n        <Flex gap={30} style={{ display: (availableCharacters.length > 0) ? 'block' : 'none' }}>\n          <Button onClick={importClicked}>\n            Import relics into optimizer\n          </Button>\n        </Flex>\n\n        <Flex vertical align='center'>\n          <Segmented options={options} onChange={selectionChange} />\n        </Flex>\n        <div id='previewWrapper' style={{ padding: '5px', backgroundColor: '#182239' }}>\n          <CharacterPreview class='relicScorerCharacterPreview' character={selectedCharacter} source='scorer' />\n        </div>\n      </Flex>\n    )\n  }\n  CharacterPreviewSelection.propTypes = {\n    availableCharacters: PropTypes.array,\n  }\n\n\n  let initialId = undefined\n  let savedId = scorerId\n  if (savedId) {\n    try {\n      let parsed = parseInt(savedId)\n      initialId = isNaN(parsed) ? undefined : parsed\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  return (\n    <div style={{ display: props.active ? 'block' : 'none' }}>\n      <Flex vertical gap={0} align='center'>\n        <Flex gap={10} vertical align='center'>\n          <Text>Input your account ID to score your support characters. The scorer will display the character's stats at level 80 with maxed traces</Text>\n        </Flex>\n        <Form\n          form={scorerForm}\n          onFinish={onFinish}\n          initialValues={{ scorerId: initialId }}\n        >\n          <Flex style={{ margin: 20, width: 1000 }} justify=\"center\" align=\"center\" gap={10}>\n            <Text style={{ width: 'fit-content' }}>Account ID:</Text>\n            <Form.Item size=\"default\" name='scorerId'>\n              <Input style={{ width: 150 }} />\n            </Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading} onClick={buttonClick}>\n              Submit\n            </Button>\n            <Button\n              style={{ width: 200 }}\n              onClick={scoringClicked}\n            >\n              Scoring algorithm\n            </Button>\n          </Flex>\n        </Form>\n        <CharacterPreviewSelection availableCharacters={availableCharacters} />\n      </Flex>\n    </div>\n  );\n}\nRelicScorerTab.propTypes = {\n  active: PropTypes.bool,\n}\n","import React from 'react';\nimport { Button, Divider, Flex, Popconfirm, Typography } from 'antd';\nimport { Message } from '../lib/message';\n\nimport sampleSave from '../data/sample-save.json';\nimport DB from \"../lib/db\";\nimport PropTypes from \"prop-types\";\nimport { Assets } from \"../lib/assets\";\n\nconst { Text } = Typography;\n\nexport default function GettingStartedTab(props) {\n  console.log('GettingStartedTab ')\n\n  function tryItOutClicked() {\n    DB.setStore(JSON.parse(JSON.stringify(sampleSave)))\n\n    Message.success('Successfully loaded data')\n  }\n\n  let screenshotStyle = {border: '2px solid #243356'};\n  let dividerStyle = {marginTop: 40};\n  let titleStyle = {textDecoration: 'underline'}\n  return (\n    <div style={{display: props.active ? 'block' : 'none'}}>\n    <Text>\n      <Flex vertical gap={5} style={{marginLeft: 20, marginBottom: 50, width: 1000}}>\n          <h2>\n            Try it out!\n          </h2>\n\n          <p>\n            If you would like to give the optimizer a try before doing any relic importing, use this to load a sample save file and check out the features.\n          </p>\n          \n          <Popconfirm\n            title=\"Confirm\"\n            description=\"Load a sample save file?\"\n            onConfirm={tryItOutClicked}\n            placement=\"bottom\"\n            okText=\"Yes\"\n            cancelText=\"Cancel\"\n          >\n            <Button type=\"primary\" style={{width: 200}}>\n              Try it out!\n            </Button>\n          </Popconfirm>\n\n\n          <Divider style={dividerStyle}></Divider>\n          {/* ======================================================================================================================= */}\n\n          <h2>\n            Importing\n          </h2>\n\n          <p>\n            The optimizer needs a database of relics to run against.\n            Currently there are 2 supported OCR relic scanners:\n          </p>\n\n          <ul>\n            <li>\n              Recommended: Kel-Z HSR Scanner (<Typography.Link target=\"_blank\" href='https://github.com/kel-z/HSR-Scanner/releases/latest'>Github</Typography.Link>)\n              <ul>\n                <li>Supports all 16:9 resolutions</li>\n                <li>Supports character and light cone imports</li>\n              </ul>\n            </li>\n            <li>\n              Fribbels HSR Scanner (<Typography.Link target=\"_blank\" href='https://github.com/fribbels/Fribbels-Honkai-Star-Rail-Scanner/releases/latest'>Github</Typography.Link>)\n            </li>\n          </ul>\n\n          <Divider style={dividerStyle}></Divider>\n          {/* ======================================================================================================================= */}\n          \n          <h2>\n            Optimizer tab\n          </h2>\n\n          <img src={Assets.getGuideImage('filters')} style={screenshotStyle}></img>\n\n          <h4 style={titleStyle}>\n            Character / Light cone\n          </h4>\n          <p>\n            This section is where the character and light cone options are selected. \n            Both of the level options affect the base stats for the optimization search.\n            Character eidolon effects are selectable from the Character passives section.\n          </p>\n\n          <h4 style={titleStyle}>\n            Main Stats\n          </h4>\n\n          <p>\n            The main stat filters restrict the input for the optimizer to the preferred body, feet, planar sphere, and link rope stats. Multiple options can be chosen for each slot.\n            In most cases, these main stats should be filled in to find best results and exclude unwanted builds.\n          </p>\n\n          <h4 style={titleStyle}>\n            Set filters\n          </h4>\n\n          <img src={Assets.getGuideImage('sets')} style={screenshotStyle}></img>\n\n          <p>\n            The relic set filter allows for a combination of 2-piece sets, 4-piece sets, or can be left empty.\n            When multiple options are chosen, the search results will only show builds with least one of the selected filters active.\n            Conditional set effects can be customized from the menu.\n          </p>\n\n          <h4 style={titleStyle}>\n            Stat filters\n          </h4>\n\n          <p>\n            This section defines the minimum / maximum stats to filter the results by. \n            Left side is minimum and right side is maximum, both inclusive. In this above example, only results with &ge; 134 speed AND &ge; 35% Crit Rate  are shown.\n            Stat abbreviations are ATK / HP / DEF / SPD / Crit Rate / Crit Damage / Effect Hit Rate / Effect RES / Break Effect.\n          </p>\n          \n          <p>\n            Important note: relics typed in manually or imported with the OCR tool may be affected by hidden decimal points for speed that aren't shown by ingame stats.\n            For example, 5 star relics can have speed substats of values between 2.0 - 2.6, which would all show ingame as 2. \n            This means that speed results should be treated as minimum values, as the real value may be slightly higher ingame.\n            This also means that maximum filters on speed should be used carefully since they may be too restrictive.\n          </p>\n\n          <h4 style={titleStyle}>\n            Combat buffs\n          </h4>\n          \n          <p>\n            This section defines buffs to the character to be used in the optimization calculations.\n            These buffs can come from teammate abilities/light cones etc.\n            Only team buffs should be entered here since the selected character's own passives should already be accounted for.\n          </p>\n\n          <h4 style={titleStyle}>\n            Optimizer options\n          </h4>\n\n          <p>\n            This section defines some general additional options for the optimizer and control actions. \n          </p>\n          \n          <ul>\n            <li>Rank filter - Rank characters by dragging them on the character page, and when enabled, characters may only take relics from lower ranked characters. This is useful for cases where multiple characters use the same set, but one character should be prioritized over the other.</li>\n            <li>Maxed main stat - Assume the main stat for relics are maxed for their respective grades</li>\n            <li>Keep current relics - The character must keep its currently equipped relics, and the optimizer will try to fill in empty slots</li>\n            <li>Enhance / grade - Select the minimum enhance to search for and minimum stars for relics to include. If using non +15 relics, the 'Maxed main stat' filter might be good to enable to show maxed potential stats.\n            Be careful selecting +0 relics because this increases search time if you imported all relics.</li>\n          </ul>\n\n          <Divider style={dividerStyle}></Divider>\n          {/* ======================================================================================================================= */}\n\n          <h2>\n            Results\n          </h2>\n\n          <img src={Assets.getGuideImage('results')} style={screenshotStyle}></img>\n\n          <h4 style={titleStyle}>\n            Result rows\n          </h4>\n\n          <p>\n            This section displays all the results found that match the filters.\n            Every row represents one build that was found.\n            The pinned top row shows the character's currently equipped build.\n            Clicking on each row will show the relics used in the selected build.\n            There may be multiple pages of results, so clicking a column header to sort the results by a stat or rating can make it easier to find desired builds.\n          </p>\n\n          <h4 style={titleStyle}>\n            Permutations\n          </h4>\n\n          <p>\n            This section shows the number of permutations the optimizer has to search and details on the number of matching relics per slot. \n            If any of the numbers are zero, that indicates that no relics were found that would satisfy the constraints.\n          </p>\n\n          <ul>\n            <li>Perms - Number of permutations that need to be searched. Stricter filters will reduce permutations and search time</li>\n            <li>Searched - Number of permutations completed in an in-progress search</li>\n            <li>Results - Number of displayed results that satisfy the stat filters</li>\n          </ul>\n\n          <h4 style={titleStyle}>\n            Selected build\n          </h4>\n          <p>\n            This section displays the selected build from the grid, and which relics are used & who they are currently equipped on. \n            Pressing the 'Equip' button will assign the relics to the selected character in the optimizer, though the ingame character build is not affected.\n          </p>\n\n          <Divider style={dividerStyle}></Divider>\n          {/* ======================================================================================================================= */}\n\n          <h2>\n            Character tab\n          </h2>\n\n          <img src={Assets.getGuideImage('characterTab')} style={screenshotStyle}></img>\n\n          <h4 style={titleStyle}>\n            Character ranking\n          </h4>\n\n          <p>\n            This section displays all the optimized characters and their ranking order. \n            Characters are added to this list from the Optimizer tab, when their filters are applied and 'Start' is pressed.\n          </p>\n\n          <p>\n            The ranking is important when used with the 'Rank filter' on the Optimizer tab. \n            When enabled, characters may only take relics from lower ranked characters.\n            For example, the rank 2 character may take relics from rank 3, but cannot take from rank 2. Rank 1 can take from any other character.\n            Rows can be dragged to re-order characters.\n          </p>\n\n          <p>\n            The colored highlight on the right of the grid shows the equipped item status of the character. \n            In the above example, Jingliu's green indicator means she has all 6 relics equipped, Bronya's yellow indicator means she is missing at least one relic from her build, and Natasha's red indicator means she has no relics equipped.\n          </p>\n\n          <h4 style={titleStyle}>\n            Stats summary\n          </h4>\n\n          <p>\n            This section displays the character's stats with their base stats / light cone / maxed traces / and relics equipped in the optimizer. \n            Note that similar to the optimizer results, the actual values ingame may be slightly higher than displayed here due to hidden decimal values on relic stats.\n          </p>\n\n\n          <Divider style={dividerStyle}></Divider>\n          {/* ======================================================================================================================= */}\n\n          <h2>\n            Relics tab\n          </h2>\n\n          <img src={Assets.getGuideImage('relicsTab')} style={screenshotStyle}></img>\n\n          <h4 style={titleStyle}>\n            Relics grid\n          </h4>\n\n          <p>\n            This section displays all the relics that were added / imported into the optimizer. \n            Relics should be updated occasionally with the importer to add in newly acquired relics.\n            Clicking columns will sort the relics grid.\n          </p>\n        </Flex>\n      </Text>\n    </div>\n  );\n}\nGettingStartedTab.propTypes = {\n  active: PropTypes.bool,\n};\n","import React from 'react';\nimport { Button, Flex } from \"antd\";\nimport PropTypes from \"prop-types\"\n\nexport default function BetaTab(props) {\n  const { active } = props\n\n  console.log('Beta Tab')\n\n  const showModal = () => {\n    window.setIsScoringModalOpen(true);\n  };\n\n  return (\n    <div style={{ display: active ? 'block' : 'none' }}>\n      <Flex vertical gap={20} align='center'>\n        <Button type=\"primary\" onClick={showModal}>\n          Open Modal\n        </Button>\n      </Flex>\n    </div>\n  );\n}\n\nBetaTab.propTypes = {\n  active: PropTypes.bool\n};","import React, { useEffect, useMemo, useState } from 'react';\nimport { Button, Collapse, Divider, Flex, Form, InputNumber, Modal, Select, Typography, } from 'antd';\nimport styled from 'styled-components';\n\nimport { Assets } from '../lib/assets';\nimport { Utils } from \"../lib/utils\";\nimport DB from \"../lib/db\";\nimport { Constants } from \"../lib/constants.ts\";\nimport PropTypes from \"prop-types\";\n\nconst { Text } = Typography;\n\nconst TitleDivider = styled(Divider)`\n  margin-top: 10px !important;\n  margin-bottom: 10px !important;\n`\nconst InputNumberStyled = styled(InputNumber)`\n  width: 62px\n`\nconst PStyled = styled.p`\n`\n\nexport default function ScoringModal() {\n  const [scoringAlgorithmForm] = Form.useForm();\n  window.scoringAlgorithmForm = scoringAlgorithmForm\n\n  let selectedScoringCharacter = window.store(s => s.selectedScoringCharacter);\n  let setSelectedScoringCharacter = window.store(s => s.setSelectedScoringCharacter);\n\n  const [isScoringModalOpen, setIsScoringModalOpen] = useState(false);\n  window.setIsScoringModalOpen = setIsScoringModalOpen\n\n  function characterSelectorChange(id) {\n    setSelectedScoringCharacter(id)\n  }\n\n  // Cleans up 0's to not show up on the form\n  function getScoringValuesForDisplay(scoringMetadata) {\n    for (let x of Object.entries(scoringMetadata.stats)) {\n      if (x[1] == 0) {\n        scoringMetadata.stats[x[0]] = null\n      }\n    }\n\n    return scoringMetadata\n  }\n\n  useEffect(() => {\n    let id = selectedScoringCharacter\n    if (id) {\n      let scoringMetadata = Utils.clone(DB.getScoringMetadata(id))\n      scoringMetadata = getScoringValuesForDisplay(scoringMetadata)\n      scoringAlgorithmForm.setFieldsValue(scoringMetadata)\n\n      console.log('Scoring modal opening set as:', scoringMetadata)\n    }\n  }, [selectedScoringCharacter, isScoringModalOpen])\n\n  const panelWidth = 225\n  const defaultGap = 5\n  const selectWidth = 360\n\n  const characterOptions = useMemo(() => {\n    return Utils.generateCharacterOptions()\n  }, []);\n\n  function StatValueRow(props) {\n    return (\n      <Flex justify=\"flex-start\" style={{ width: panelWidth }} align='center' gap={5}>\n        <Form.Item size=\"default\" name={['stats', props.stat]}>\n          <InputNumberStyled controls={false} size=\"small\" />\n        </Form.Item>\n        <Flex>\n          <img src={Assets.getStatIcon(props.stat)} style={{ width: 25, height: 25, marginRight: 3 }}></img>\n          <Text style={{ lineHeight: 1.8 }}>{Constants.StatsToReadable[props.stat]}</Text>\n        </Flex>\n      </Flex>\n    )\n  }\n  StatValueRow.propTypes = {\n    stat: PropTypes.string,\n  }\n\n\n  function onModalOk() {\n    console.log('Modal OK');\n    scoringAlgorithmForm.submit()\n    setIsScoringModalOpen(false)\n\n    // TODO revisit force renders\n    setTimeout(() => window.forceRelicScorerTabUpdate(), 100)\n    setTimeout(() => window.forceCharacterTabUpdate(), 100)\n  }\n\n  const onFinish = (x) => {\n    if (!selectedScoringCharacter) return;\n\n    console.log('Form finished', x);\n    x.stats[Constants.Stats.ATK_P] = x.stats[Constants.Stats.ATK]\n    x.stats[Constants.Stats.DEF_P] = x.stats[Constants.Stats.DEF]\n    x.stats[Constants.Stats.HP_P] = x.stats[Constants.Stats.HP]\n\n    let defaultScoringMetadata = DB.getMetadata().characters[selectedScoringCharacter].scoringMetadata\n\n    function nullUndefinedToZero(x) {\n      if (x == null) return 0\n      return x\n    }\n\n    x.modified = false\n    for (let stat of Object.values(Constants.Stats)) {\n      if (nullUndefinedToZero(x.stats[stat]) != nullUndefinedToZero(defaultScoringMetadata.stats[stat])) {\n        x.modified = true\n      }\n    }\n\n    DB.updateCharacterScoreOverrides(selectedScoringCharacter, x)\n  };\n\n  const handleResetDefault = () => {\n    if (!selectedScoringCharacter) return;\n\n    let defaultScoringMetadata = DB.getMetadata().characters[selectedScoringCharacter].scoringMetadata\n    let displayScoringMetadata = getScoringValuesForDisplay(defaultScoringMetadata)\n\n    DB.updateCharacterScoreOverrides(selectedScoringCharacter, defaultScoringMetadata)\n    scoringAlgorithmForm.setFieldsValue(displayScoringMetadata)\n  };\n\n  const handleCancel = () => {\n    setIsScoringModalOpen(false);\n  };\n\n  const filterOption = (input, option) =>\n    (option?.label ?? '').toLowerCase().includes(input.toLowerCase());\n\n  let previewSrc = (selectedScoringCharacter) ? Assets.getCharacterPreviewById(selectedScoringCharacter) : Assets.getBlank()\n\n  let methodologyCollapse = (\n    <Text>\n      <PStyled>\n        Substat scoring is calculated by <code>Score = weight * normalization * value</code>.\n        The weight of each stat is defined above, on a scale of 0 to 1.\n        The normalization of each stat is calculated based on the ratio of their main stat values to Crit DMG with max value <code>64.8</code>:\n      </PStyled>\n      <Flex justify='space-between' style={{ marginRight: 120 }}>\n        <ul>\n          <li><code>CD BE = 64.8 / 64.8 == 1.0</code></li>\n          <li><code>DEF% = 64.8 / 54.0 == 1.2</code></li>\n          <li><code>HP% ATK% EHR = 64.8 / 43.2 == 1.5</code></li>\n          <li><code>CR = 64.8 / 32.4 == 2</code></li>\n        </ul>\n        <ul>\n          <li><code>SPD = 64.8 / 25.032 == 2.59</code></li>\n          <li><code>OHB = 64.8 / 34.561 == 1.87</code></li>\n          <li><code>ERR = 64.8 / 19.439 == 3.33</code></li>\n          <li><code>ELEMENTAL DMG = 64.8 / 38.88 == 1.67</code></li>\n        </ul>\n      </Flex>\n      <PStyled style={{ margin: '7px 0px' }}>\n        Flat ATK/HP/DEF have a separate calculation: <code>1 / (2 * character base * 0.01) * (64.8 / (% main stat value))</code>.\n        This converts the flat stat value to a percent equivalent by base stats, then normalizes it.\n        Double the character base is used instead of character + light cone base due to the variable nature of light cone stats.\n      </PStyled>\n\n      <PStyled style={{ margin: '7px 0px' }}>\n        A letter grade is assigned based on the number of normalized min rolls of each substat.\n        The score for each min roll in theory should be equivalent to <code>5.184</code>, but is rounded down to <code>5.1</code> due to the game not displaying extra decimals.\n        The general scale for grade by rolls is <code>F=1, D=2, C=3, B=4, A=5, S=6, SS=7, SSS=8, WTF=9</code> with a <code>+</code> assigned for an additional half roll.\n      </PStyled>\n\n      <PStyled style={{ margin: '7px 0px' }}>\n        Character scores are calculated by <code>Score = sum(relic substat scores) + sum(main stat scores)</code>.\n        Only the head/body/sphere/rope relics have main stat scores.\n        The main stat score for a 5 star maxed relic is <code>64.8</code> if the main stat is optimal, otherwise scaled down by the stat weight.\n        Non 5 star relic scores are also scaled down by their maximum enhance.\n        Characters are expected to have 3 full sets, so 3 rolls worth of score is deducted for each missing set.\n      </PStyled>\n\n      <PStyled style={{ margin: '7px 0px' }}>\n        Body/feet/sphere/rope relics are granted extra rolls to compensate for the difficulty of obtaining optimal main stats with desired substats.\n        These numbers were calculated by a simulation of relic rolls accounting for main stat drop rate and expected substat value.\n        These rolls are multiplied by the min roll value of <code>5.1</code> for the bonus score value.\n      </PStyled>\n\n      <Flex justify='space-between' style={{ marginRight: 30 }}>\n        <ul>\n          <li><code>Body HP_P 1.280</code></li>\n          <li><code>Body ATK_P 1.278</code></li>\n          <li><code>Body DEF_P 1.305</code></li>\n          <li><code>Body CR 1.647</code></li>\n          <li><code>Body CD 1.643</code></li>\n        </ul>\n        <ul>\n          <li><code>Body OHB 1.713</code></li>\n          <li><code>Body EHR 1.653</code></li>\n          <li><code>Feet HP_P 1.045</code></li>\n          <li><code>Feet ATK_P 1.000</code></li>\n          <li><code>Feet DEF_P 1.002</code></li>\n        </ul>\n        <ul>\n          <li><code>Feet SPD 1.573</code></li>\n          <li><code>PlanarSphere HP_P 1.583</code></li>\n          <li><code>PlanarSphere ATK_P 1.545</code></li>\n          <li><code>PlanarSphere DEF_P 1.595</code></li>\n          <li><code>PlanarSphere ELEM 1.747</code></li>\n        </ul>\n        <ul>\n          <li><code>LinkRope HP_P 1.056</code></li>\n          <li><code>LinkRope ATK_P 1.016</code></li>\n          <li><code>LinkRope DEF_P 1.161</code></li>\n          <li><code>LinkRope BE 1.417</code></li>\n          <li><code>LinkRope ERR 2.000</code></li>\n        </ul>\n      </Flex>\n\n      <PStyled style={{ margin: '7px 0px' }}>\n        This scoring method is still experimental and subject to change, please come by the discord server to share any feedback!\n      </PStyled>\n    </Text>\n  )\n\n  return (\n    <Modal\n      open={isScoringModalOpen}\n      width={900}\n      destroyOnClose\n      centered\n      onOk={onModalOk}\n      onCancel={handleCancel}\n      forceRender\n      footer={[\n        <Button key=\"back\" onClick={handleCancel}>\n          Cancel\n        </Button>,\n        <Button key=\"default\" onClick={handleResetDefault}>\n          Reset to default\n        </Button>,\n        <Button key=\"submit\" type=\"primary\" onClick={onModalOk}>\n          Save changes\n        </Button>,\n      ]}\n    >\n      <Form\n        form={scoringAlgorithmForm}\n        preserve={false}\n        layout=\"vertical\"\n        onFinish={onFinish}\n      >\n\n        <TitleDivider>Stat weights</TitleDivider>\n\n        <Flex gap={10} vertical>\n          <Flex gap={20} justify='space-between'>\n            <Flex vertical gap={5}>\n              <Form.Item size=\"default\" name='characterId'>\n                <Select\n                  showSearch\n                  filterOption={filterOption}\n                  style={{ width: panelWidth }}\n                  onChange={characterSelectorChange}\n                  options={characterOptions}\n                />\n              </Form.Item>\n              <div style={{ height: 230, width: panelWidth, overflow: 'hidden' }}>\n                <img src={previewSrc} style={{ width: panelWidth }} />\n              </div>\n            </Flex>\n            <Flex vertical gap={3}>\n              <StatValueRow stat={Constants.Stats.ATK} />\n              <StatValueRow stat={Constants.Stats.HP} />\n              <StatValueRow stat={Constants.Stats.DEF} />\n              <StatValueRow stat={Constants.Stats.SPD} />\n              <StatValueRow stat={Constants.Stats.CR} />\n              <StatValueRow stat={Constants.Stats.CD} />\n              <StatValueRow stat={Constants.Stats.EHR} />\n              <StatValueRow stat={Constants.Stats.RES} />\n              <StatValueRow stat={Constants.Stats.BE} />\n            </Flex>\n            <Flex vertical gap={3}>\n              <StatValueRow stat={Constants.Stats.ERR} />\n              <StatValueRow stat={Constants.Stats.OHB} />\n              <StatValueRow stat={Constants.Stats.Physical_DMG} />\n              <StatValueRow stat={Constants.Stats.Fire_DMG} />\n              <StatValueRow stat={Constants.Stats.Ice_DMG} />\n              <StatValueRow stat={Constants.Stats.Lightning_DMG} />\n              <StatValueRow stat={Constants.Stats.Wind_DMG} />\n              <StatValueRow stat={Constants.Stats.Quantum_DMG} />\n              <StatValueRow stat={Constants.Stats.Imaginary_DMG} />\n            </Flex>\n          </Flex>\n        </Flex>\n\n        <TitleDivider>Optimal main stats</TitleDivider>\n\n        <Flex justify='space-between'>\n          <Flex vertical gap={defaultGap * 2}>\n            <Flex vertical gap={1} justify='flex-start'>\n              <Text style={{ marginLeft: 5 }}>\n                Body\n              </Text>\n              <Form.Item size=\"default\" name={['parts', Constants.Parts.Body]}>\n                <Select\n                  mode=\"multiple\"\n                  allowClear\n                  style={{\n                    width: selectWidth,\n                  }}\n                  placeholder=\"Body\"\n                  maxTagCount='responsive'>\n                  <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                  <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                  <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                  <Select.Option value={Constants.Stats.CR}>CRIT Rate</Select.Option>\n                  <Select.Option value={Constants.Stats.CD}>CRIT DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.OHB}>Outgoing Healing</Select.Option>\n                  <Select.Option value={Constants.Stats.EHR}>Effect HIT Rate</Select.Option>\n                </Select>\n              </Form.Item>\n            </Flex>\n\n            <Flex vertical gap={1} justify='flex-start'>\n              <Text style={{ marginLeft: 5 }}>\n                Feet\n              </Text>\n              <Form.Item size=\"default\" name={['parts', Constants.Parts.Feet]}>\n                <Select\n                  mode=\"multiple\"\n                  allowClear\n                  style={{\n                    width: selectWidth,\n                  }}\n                  placeholder=\"Feet\"\n                  maxTagCount='responsive'>\n                  <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                  <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                  <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                  <Select.Option value={Constants.Stats.SPD}>Speed</Select.Option>\n                </Select>\n              </Form.Item>\n            </Flex>\n          </Flex>\n          <Flex vertical gap={defaultGap * 2}>\n            <Flex vertical gap={1} justify='flex-start'>\n              <Text style={{ marginLeft: 5 }}>\n                Planar Sphere\n              </Text>\n              <Form.Item size=\"default\" name={['parts', Constants.Parts.PlanarSphere]}>\n                <Select\n                  mode=\"multiple\"\n                  allowClear\n                  style={{\n                    width: selectWidth,\n                  }}\n                  placeholder=\"Planar Sphere\"\n                  listHeight={400}\n                  maxTagCount='responsive'>\n                  <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                  <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                  <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                  <Select.Option value={Constants.Stats.Physical_DMG}>Physical DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.Fire_DMG}>Fire DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.Ice_DMG}>Ice DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.Lightning_DMG}>Lightning DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.Wind_DMG}>Wind DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.Quantum_DMG}>Quantum DMG</Select.Option>\n                  <Select.Option value={Constants.Stats.Imaginary_DMG}>Imaginary DMG</Select.Option>\n                </Select>\n              </Form.Item>\n            </Flex>\n\n            <Flex vertical gap={1} justify='flex-start'>\n              <Text style={{ marginLeft: 5 }}>\n                Link rope\n              </Text>\n\n              <Form.Item size=\"default\" name={['parts', Constants.Parts.LinkRope]}>\n                <Select\n                  mode=\"multiple\"\n                  allowClear\n                  style={{\n                    width: selectWidth,\n                  }}\n                  placeholder=\"Link Rope\"\n                  maxTagCount='responsive'>\n                  <Select.Option value={Constants.Stats.HP_P}>HP%</Select.Option>\n                  <Select.Option value={Constants.Stats.ATK_P}>ATK%</Select.Option>\n                  <Select.Option value={Constants.Stats.DEF_P}>DEF%</Select.Option>\n                  <Select.Option value={Constants.Stats.BE}>Break Effect</Select.Option>\n                  <Select.Option value={Constants.Stats.ERR}>Energy Regeneration Rate</Select.Option>\n                </Select>\n              </Form.Item>\n            </Flex>\n          </Flex>\n        </Flex>\n\n        <TitleDivider>Calculations</TitleDivider>\n\n        <Collapse ghost items={[{\n          key: '1',\n          label: 'Click to show details',\n          children: methodologyCollapse\n        }]}>\n        </Collapse>\n      </Form>\n    </Modal>\n  );\n}\n","import React, {useMemo} from 'react';\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport OptimizerTab from './OptimizerTab'\nimport ImportTab from './ImportTab'\nimport RelicsTab from './RelicsTab'\nimport CharacterTab from './CharacterTab';\nimport ComingSoonTab from './ComingSoonTab';\nimport RelicScorerTab from './RelicScorerTab';\nimport GettingStartedTab from './GettingStartedTab';\nimport BetaTab from './BetaTab';\nimport ScoringModal from './ScoringModal';\nimport { Typography } from 'antd';\n\nlet defaultError = () => {\n  return (\n    <Typography>Something went wrong</Typography>\n  )\n}\nconst Tabs = () => {\n  const activeKey = window.store(s => s.activeKey)\n\n  let optimizerActive = activeKey == 'optimizer'\n  let charactersActive = activeKey == 'characters'\n  let relicsActive = activeKey == 'relics'\n  let importActive = activeKey == 'import'\n  let gettingStartedActive = activeKey == '#getting-started'\n  let scorerActive = activeKey == '#scorer'\n  let comingSoonActive = activeKey == 'coming-soon'\n  let betaActive = activeKey == '#beta'\n\n  let optimizerDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <OptimizerTab active={optimizerActive}/>\n      </ErrorBoundary>\n    )\n  }, [optimizerActive])\n\n  let charactersDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <CharacterTab active={charactersActive}/>\n      </ErrorBoundary>\n    )\n  }, [charactersActive])\n\n  let relicsDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <RelicsTab active={relicsActive}/>\n      </ErrorBoundary>\n    )\n  }, [relicsActive])\n\n  let importDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <ImportTab active={importActive}/>\n      </ErrorBoundary>\n    )\n  }, [importActive])\n\n  let gettingStartedDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <GettingStartedTab active={gettingStartedActive}/>\n      </ErrorBoundary>\n    )\n  }, [gettingStartedActive])\n\n  let scorerDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <RelicScorerTab active={scorerActive}/>\n      </ErrorBoundary>\n    )\n  }, [scorerActive])\n\n  let comingSoonDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <ComingSoonTab active={comingSoonActive}/>\n      </ErrorBoundary>\n    )\n  }, [comingSoonActive])\n\n  let betaDisplay = useMemo(() => {\n    return (\n      <ErrorBoundary fallback={defaultError()}>\n        <BetaTab active={betaActive}/>\n      </ErrorBoundary>\n    )\n  }, [betaActive])\n\n  return (\n    <>\n      {optimizerDisplay}\n      {charactersDisplay}\n      {relicsDisplay}\n      {importDisplay}\n      {gettingStartedDisplay}\n      {scorerDisplay}\n      {comingSoonDisplay}\n      {betaDisplay}\n\n      <ErrorBoundary fallback={defaultError()}>\n        <ScoringModal />\n      </ErrorBoundary >\n    </>\n  )\n}\n\nexport default Tabs;\n","import React, { useEffect } from \"react\"\nimport { ConfigProvider, Flex, Layout, message, notification, theme, Typography } from 'antd';\nimport MenuDrawer from './components/MenuDrawer'\nimport Tabs from './components/Tabs'\nimport { Assets } from \"./lib/assets\";\n\nconst { Header, Sider, Content } = Layout;\n\nlet hashes = [\n  '#scorer',\n  '#getting-started',\n  '#beta'\n]\n\nconst App = () => {\n  const [notificationApi, notificationContextHolder] = notification.useNotification();\n  const [messageApi, messageContextHolder] = message.useMessage();\n\n  window.notificationApi = notificationApi\n  window.messageApi = messageApi\n\n  useEffect(() => {\n  }, [])\n\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorBgBase: '#182239'\n        },\n        components: {\n          Slider: {\n            handleColor: '#1668DC',\n            handleActiveColor: '#1668DC',\n            trackBg: '#1668DC',\n            trackHoverBg: '#1668DC',\n            dotBorderColor: '#1668DC',\n            railHoverBg: '#ffffff80',\n            railBg: '#ffffff12',\n            handleLineWidth: 0,\n            handleLineWidthHover: 0,\n            handleSizeHover: 10\n          },\n          InputNumber: {\n            paddingInlineSM: 4,\n          },\n        },\n        algorithm: theme.darkAlgorithm,\n      }}\n    >      \n      {notificationContextHolder}\n      {messageContextHolder}\n        <Layout hasSider style={{ 'minHeight': '100%' }}>\n          <Sider\n            width={170}\n            style={{\n              overflow: 'auto',\n              height: '100vh',\n              position: 'sticky',\n              top: 0,\n            }}\n            // breakpoint=\"xxl\"\n            // collapsedWidth=\"50\"\n            // onBreakpoint={(broken) => {\n            // }}\n            // onCollapse={(collapsed, type) => {\n            // }}\n          >\n            <MenuDrawer hashes={hashes}/>\n          </Sider>\n          <Layout\n            style={{\n            }}\n          >\n\n            <Header\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                paddingLeft: '30px',\n                paddingRight: '0px',\n                height: 48,\n                width: '100%'\n              }}\n            >\n              <Flex align='center' justify='space-between' style={{width: '100%'}}>\n                <a href=\"/hsr-optimizer\">\n                  <Flex align='center'>\n                    <img src={Assets.getLogo()} style={{ width: 30, height: 30, marginRight: 25 }}></img>\n                    <Typography\n                      style={{ fontWeight: 600, fontSize: 22 }}\n                      color=\"inherit\"\n                    >\n                      Fribbels Honkai Star Rail Optimizer\n                    </Typography>\n                  </Flex>\n                </a>\n\n                <a href=\"https://discord.gg/rDmB4Un7qg\" target=\"_blank\" rel=\"noreferrer\">\n                  <Flex>\n                    <img src={Assets.getDiscord()} style={{ height: 36, marginRight: 5, borderRadius: 5 }}></img>\n                  </Flex>\n                </a>\n              </Flex>\n            </Header>\n            <Content\n              style={{\n                padding: 10,\n                margin: 0,\n                minHeight: 280,\n                minWidth: 1300,\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                overflow: 'initial',\n              }}\n            >\n              <Tabs hashes={hashes} />\n            </Content>\n          </Layout>\n      </Layout>\n    </ConfigProvider>\n  );\n};\n\nexport default App;","import characters from '../data/characters.json';\nimport characterPromotions from '../data/character_promotions.json';\nimport lightCones from '../data/light_cones.json';\nimport lightConePromotions from '../data/light_cone_promotions.json';\nimport relicMainAffixes from '../data/relic_main_affixes.json';\nimport relicSubAffixes from '../data/relic_sub_affixes.json';\nimport relicSets from '../data/relic_sets.json';\nimport { Constants } from \"./constants.ts\";\nimport DB from \"./db\";\n\nexport const DataParser = {\n  parse: () => {\n    for (const [id, characterData] of Object.entries(characters)) {\n      characterData.promotions = parseBaseStatsByLevel(characterPromotions[id]);\n\n      delete characterData.ranks\n      delete characterData.skills\n      delete characterData.skill_trees\n    }\n\n    const lightConeSuperimpositions = getSuperimpositions()\n    for (const [id, lcData] of Object.entries(lightCones)) {\n      if (lightConeSuperimpositions[id]) {\n        lcData.superimpositions = lightConeSuperimpositions[id]\n      } else {\n        lcData.superimpositions = {}\n      }\n      lcData.promotions = parseBaseLightConeStatsByLevel(lightConePromotions[id])\n    }\n\n    const characterTraces = getOverrideTraces();\n    const imageCenters = getOverrideImageCenter();\n    const scoringMetadata = getScoringMetadata()\n    for (const [id, traceData] of Object.entries(characterTraces)) {\n      let imageCenter = { x: 1024, y: 1024 }\n      if (imageCenters[id] != undefined) {\n        imageCenter = imageCenters[id]\n      }\n\n      characters[id].traces = traceData\n      characters[id].imageCenter = imageCenter\n      characters[id].displayName = getDisplayName(characters[id])\n      characters[id].scoringMetadata = scoringMetadata[id]\n      characters[id].scoringMetadata.characterId = id\n    }\n\n    const relics = {\n      relicMainAffixes,\n      relicSubAffixes,\n      relicSets\n    }\n\n    const data = {\n      characters: characters,\n      characterPromotions: characterPromotions,\n      nicknames: characterPromotions,\n      lightCones: lightCones,\n      relics: relics\n    }\n    DB.setMetadata(data);\n    console.log('Metadata: ', data)\n\n    return data;\n  }\n}\n\nconst displayNameMapping = {\n  \"8001\": \"Caelus (Destruction)\",\n  \"8002\": \"Stelle (Destruction)\",\n  \"8003\": \"Caelus (Preservation)\",\n  \"8004\": \"Stelle (Preservation)\",\n  \"1213\": \"Imbibitor Lunae\"\n}\nfunction getDisplayName(character) {\n  if (character.id in displayNameMapping) {\n    return displayNameMapping[character.id]\n  }\n  return character.name\n}\n\nfunction parseBaseLightConeStatsByLevel(promotions) {\n  let base = {}\n  for (let i = 1; i <= 80; i++) {\n    let valueIndex = (Math.floor((i - 1) / 10) - 1)\n    if (i <= 20) valueIndex = 0\n    if (i > 79) valueIndex = 6\n\n    let statScaling = promotions.values[valueIndex]\n\n    base[i] = {\n      [Constants.Stats.HP]: statScaling['hp'].base + statScaling['hp'].step * (i - 1),\n      [Constants.Stats.ATK]: statScaling['atk'].base + statScaling['atk'].step * (i - 1),\n      [Constants.Stats.DEF]: statScaling['def'].base + statScaling['def'].step * (i - 1),\n    }\n  }\n\n  return base;\n}\n\nfunction parseBaseStatsByLevel(promotions) {\n  let base = {}\n  for (let i = 1; i <= 80; i++) {\n    let valueIndex = (Math.floor((i - 1) / 10) - 1)\n    if (i <= 20) valueIndex = 0\n    if (i > 79) valueIndex = 6\n\n    let statScaling = promotions.values[valueIndex]\n\n    base[i] = {\n      [Constants.Stats.HP]: statScaling['hp'].base + statScaling['hp'].step * (i - 1),\n      [Constants.Stats.ATK]: statScaling['atk'].base + statScaling['atk'].step * (i - 1),\n      [Constants.Stats.CR]: statScaling['crit_rate'].base + statScaling['crit_rate'].step * (i - 1),\n      [Constants.Stats.CD]: statScaling['crit_dmg'].base + statScaling['crit_dmg'].step * (i - 1),\n      [Constants.Stats.DEF]: statScaling['def'].base + statScaling['def'].step * (i - 1),\n      [Constants.Stats.SPD]: statScaling['spd'].base + statScaling['spd'].step * (i - 1),\n    }\n  }\n\n  return base;\n}\n\nfunction getSuperimpositions() {\n  return {\n    \"20000\": {}, // Arrows\n    \"20001\": {},\n    \"20002\": {},\n    \"20003\": {\n      1: { [Constants.Stats.DEF_P]: 0.16 },\n      2: { [Constants.Stats.DEF_P]: 0.20 },\n      3: { [Constants.Stats.DEF_P]: 0.24 },\n      4: { [Constants.Stats.DEF_P]: 0.28 },\n      5: { [Constants.Stats.DEF_P]: 0.32 },\n    },\n    \"20004\": {},\n    \"20005\": {},\n    \"20006\": {},\n    \"20007\": {},\n    \"20008\": {},\n    \"20009\": {},\n    \"20010\": {},\n    \"20011\": {},\n    \"20012\": {},\n    \"20013\": {},\n    \"20014\": {},\n    \"20015\": {},\n    \"20016\": {},\n    \"20017\": {},\n    \"20018\": {},\n    \"20019\": {},\n    \"20020\": {},\n    \"21000\": {\n      1: { [Constants.Stats.ERR]: 0.08 },\n      2: { [Constants.Stats.ERR]: 0.10 },\n      3: { [Constants.Stats.ERR]: 0.12 },\n      4: { [Constants.Stats.ERR]: 0.14 },\n      5: { [Constants.Stats.ERR]: 0.16 },\n    },\n    \"21001\": {},\n    \"21002\": {\n      1: { [Constants.Stats.DEF_P]: 0.16 },\n      2: { [Constants.Stats.DEF_P]: 0.18 },\n      3: { [Constants.Stats.DEF_P]: 0.20 },\n      4: { [Constants.Stats.DEF_P]: 0.22 },\n      5: { [Constants.Stats.DEF_P]: 0.24 },\n    },\n    \"21003\": {\n      1: { [Constants.Stats.ATK_P]: 0.16 },\n      2: { [Constants.Stats.ATK_P]: 0.20 },\n      3: { [Constants.Stats.ATK_P]: 0.24 },\n      4: { [Constants.Stats.ATK_P]: 0.28 },\n      5: { [Constants.Stats.ATK_P]: 0.32 },\n    },\n    \"21004\": {\n      1: { [Constants.Stats.BE]: 0.28 },\n      2: { [Constants.Stats.BE]: 0.35 },\n      3: { [Constants.Stats.BE]: 0.42 },\n      4: { [Constants.Stats.BE]: 0.49 },\n      5: { [Constants.Stats.BE]: 0.56 },\n    },\n    \"21005\": {},\n    \"21006\": {},\n    \"21007\": {},\n    \"21008\": {\n      1: { [Constants.Stats.EHR]: 0.20 },\n      2: { [Constants.Stats.EHR]: 0.25 },\n      3: { [Constants.Stats.EHR]: 0.30 },\n      4: { [Constants.Stats.EHR]: 0.35 },\n      5: { [Constants.Stats.EHR]: 0.40 },\n    },\n    \"21009\": {},\n    \"21010\": {},\n    \"21011\": {},\n    \"21012\": {},\n    \"21013\": {},\n    \"21014\": {\n      1: { [Constants.Stats.RES]: 0.16 },\n      2: { [Constants.Stats.RES]: 0.20 },\n      3: { [Constants.Stats.RES]: 0.24 },\n      4: { [Constants.Stats.RES]: 0.28 },\n      5: { [Constants.Stats.RES]: 0.32 },\n    },\n    \"21015\": {},\n    \"21016\": {\n      1: { [Constants.Stats.DEF_P]: 0.16 },\n      2: { [Constants.Stats.DEF_P]: 0.20 },\n      3: { [Constants.Stats.DEF_P]: 0.24 },\n      4: { [Constants.Stats.DEF_P]: 0.28 },\n      5: { [Constants.Stats.DEF_P]: 0.32 },\n    },\n    \"21017\": {},\n    \"21018\": {},\n    \"21019\": {\n      1: { [Constants.Stats.ATK_P]: 0.16 },\n      2: { [Constants.Stats.ATK_P]: 0.20 },\n      3: { [Constants.Stats.ATK_P]: 0.24 },\n      4: { [Constants.Stats.ATK_P]: 0.28 },\n      5: { [Constants.Stats.ATK_P]: 0.32 },\n    },\n    \"21020\": {\n      1: { [Constants.Stats.ATK_P]: 0.16 },\n      2: { [Constants.Stats.ATK_P]: 0.20 },\n      3: { [Constants.Stats.ATK_P]: 0.24 },\n      4: { [Constants.Stats.ATK_P]: 0.28 },\n      5: { [Constants.Stats.ATK_P]: 0.32 },\n    },\n    \"21021\": {},\n    \"21022\": {\n      1: { [Constants.Stats.BE]: 0.16 },\n      2: { [Constants.Stats.BE]: 0.20 },\n      3: { [Constants.Stats.BE]: 0.24 },\n      4: { [Constants.Stats.BE]: 0.28 },\n      5: { [Constants.Stats.BE]: 0.32 },\n    },\n    \"21023\": {},\n    \"21024\": {},\n    \"21025\": {},\n    \"21026\": {\n      1: { [Constants.Stats.ATK_P]: 0.10 },\n      2: { [Constants.Stats.ATK_P]: 0.125 },\n      3: { [Constants.Stats.ATK_P]: 0.15 },\n      4: { [Constants.Stats.ATK_P]: 0.175 },\n      5: { [Constants.Stats.ATK_P]: 0.20 },\n    },\n    \"21027\": {},\n    \"21028\": {\n      1: { [Constants.Stats.HP_P]: 0.16 },\n      2: { [Constants.Stats.HP_P]: 0.20 },\n      3: { [Constants.Stats.HP_P]: 0.24 },\n      4: { [Constants.Stats.HP_P]: 0.28 },\n      5: { [Constants.Stats.HP_P]: 0.32 },\n    },\n    \"21029\": {},\n    \"21030\": {\n      1: { [Constants.Stats.DEF_P]: 0.16 },\n      2: { [Constants.Stats.DEF_P]: 0.20 },\n      3: { [Constants.Stats.DEF_P]: 0.24 },\n      4: { [Constants.Stats.DEF_P]: 0.28 },\n      5: { [Constants.Stats.DEF_P]: 0.32 },\n    },\n    \"21031\": {\n      1: { [Constants.Stats.CR]: 0.12 },\n      2: { [Constants.Stats.CR]: 0.15 },\n      3: { [Constants.Stats.CR]: 0.18 },\n      4: { [Constants.Stats.CR]: 0.21 },\n      5: { [Constants.Stats.CR]: 0.24 },\n    },\n    \"21032\": {},\n    \"21033\": {\n      1: { [Constants.Stats.ATK_P]: 0.24 },\n      2: { [Constants.Stats.ATK_P]: 0.30 },\n      3: { [Constants.Stats.ATK_P]: 0.36 },\n      4: { [Constants.Stats.ATK_P]: 0.42 },\n      5: { [Constants.Stats.ATK_P]: 0.48 },\n    },\n    \"21034\": {},\n    \"22000\": {\n      1: { [Constants.Stats.EHR]: 0.20 },\n      2: { [Constants.Stats.EHR]: 0.25 },\n      3: { [Constants.Stats.EHR]: 0.30 },\n      4: { [Constants.Stats.EHR]: 0.35 },\n      5: { [Constants.Stats.EHR]: 0.40 },\n    },\n    \"22001\": {\n      1: { [Constants.Stats.HP_P]: 0.08 },\n      2: { [Constants.Stats.HP_P]: 0.09 },\n      3: { [Constants.Stats.HP_P]: 0.10 },\n      4: { [Constants.Stats.HP_P]: 0.11 },\n      5: { [Constants.Stats.HP_P]: 0.12 },\n    },\n    \"23000\": {},\n    \"23001\": {\n      1: { [Constants.Stats.CR]: 0.18 },\n      2: { [Constants.Stats.CR]: 0.21 },\n      3: { [Constants.Stats.CR]: 0.24 },\n      4: { [Constants.Stats.CR]: 0.27 },\n      5: { [Constants.Stats.CR]: 0.30 },\n    },\n    \"23002\": {\n      1: { [Constants.Stats.ATK_P]: 0.24 },\n      2: { [Constants.Stats.ATK_P]: 0.28 },\n      3: { [Constants.Stats.ATK_P]: 0.32 },\n      4: { [Constants.Stats.ATK_P]: 0.36 },\n      5: { [Constants.Stats.ATK_P]: 0.40 },\n    },\n    \"23003\": {},\n    \"23004\": {},\n    \"23005\": {\n      1: { [Constants.Stats.DEF_P]: 0.24, [Constants.Stats.EHR]: 0.24 },\n      2: { [Constants.Stats.DEF_P]: 0.28, [Constants.Stats.EHR]: 0.28 },\n      3: { [Constants.Stats.DEF_P]: 0.32, [Constants.Stats.EHR]: 0.32 },\n      4: { [Constants.Stats.DEF_P]: 0.36, [Constants.Stats.EHR]: 0.36 },\n      5: { [Constants.Stats.DEF_P]: 0.40, [Constants.Stats.EHR]: 0.40 },\n    },\n    \"23006\": {},\n    \"23007\": {\n      1: { [Constants.Stats.EHR]: 0.24 },\n      2: { [Constants.Stats.EHR]: 0.28 },\n      3: { [Constants.Stats.EHR]: 0.32 },\n      4: { [Constants.Stats.EHR]: 0.36 },\n      5: { [Constants.Stats.EHR]: 0.40 },\n    },\n    \"23008\": {\n      1: { [Constants.Stats.ATK_P]: 0.24 },\n      2: { [Constants.Stats.ATK_P]: 0.28 },\n      3: { [Constants.Stats.ATK_P]: 0.32 },\n      4: { [Constants.Stats.ATK_P]: 0.36 },\n      5: { [Constants.Stats.ATK_P]: 0.40 },\n    },\n    \"23009\": {\n      1: { [Constants.Stats.CR]: 0.18, [Constants.Stats.HP_P]: 0.18, },\n      2: { [Constants.Stats.CR]: 0.21, [Constants.Stats.HP_P]: 0.21, },\n      3: { [Constants.Stats.CR]: 0.24, [Constants.Stats.HP_P]: 0.24, },\n      4: { [Constants.Stats.CR]: 0.27, [Constants.Stats.HP_P]: 0.27, },\n      5: { [Constants.Stats.CR]: 0.30, [Constants.Stats.HP_P]: 0.30, },\n    },\n    \"23010\": {\n      1: { [Constants.Stats.CD]: 0.36 },\n      2: { [Constants.Stats.CD]: 0.42 },\n      3: { [Constants.Stats.CD]: 0.48 },\n      4: { [Constants.Stats.CD]: 0.54 },\n      5: { [Constants.Stats.CD]: 0.60 },\n    },\n    \"23011\": {\n      1: { [Constants.Stats.HP_P]: 0.24, [Constants.Stats.ERR]: 0.12 },\n      2: { [Constants.Stats.HP_P]: 0.28, [Constants.Stats.ERR]: 0.14 },\n      3: { [Constants.Stats.HP_P]: 0.32, [Constants.Stats.ERR]: 0.16 },\n      4: { [Constants.Stats.HP_P]: 0.36, [Constants.Stats.ERR]: 0.18 },\n      5: { [Constants.Stats.HP_P]: 0.40, [Constants.Stats.ERR]: 0.20 },\n    },\n    \"23012\": {\n      1: { [Constants.Stats.CD]: 0.30 },\n      2: { [Constants.Stats.CD]: 0.35 },\n      3: { [Constants.Stats.CD]: 0.40 },\n      4: { [Constants.Stats.CD]: 0.45 },\n      5: { [Constants.Stats.CD]: 0.50 },\n    },\n    \"23013\": {\n      1: { [Constants.Stats.HP_P]: 0.18, [Constants.Stats.OHB]: 0.12 },\n      2: { [Constants.Stats.HP_P]: 0.21, [Constants.Stats.OHB]: 0.14 },\n      3: { [Constants.Stats.HP_P]: 0.24, [Constants.Stats.OHB]: 0.16 },\n      4: { [Constants.Stats.HP_P]: 0.27, [Constants.Stats.OHB]: 0.18 },\n      5: { [Constants.Stats.HP_P]: 0.30, [Constants.Stats.OHB]: 0.20 },\n    },\n    \"23014\": {\n      1: { [Constants.Stats.CD]: 0.20 },\n      2: { [Constants.Stats.CD]: 0.23 },\n      3: { [Constants.Stats.CD]: 0.26 },\n      4: { [Constants.Stats.CD]: 0.29 },\n      5: { [Constants.Stats.CD]: 0.32 },\n    },\n    \"23015\": {\n      1: { [Constants.Stats.CR]: 0.18 },\n      2: { [Constants.Stats.CR]: 0.21 },\n      3: { [Constants.Stats.CR]: 0.24 },\n      4: { [Constants.Stats.CR]: 0.27 },\n      5: { [Constants.Stats.CR]: 0.30 },\n    },\n    \"23016\": {\n      1: { [Constants.Stats.CR]: 0.18 },\n      2: { [Constants.Stats.CR]: 0.21 },\n      3: { [Constants.Stats.CR]: 0.24 },\n      4: { [Constants.Stats.CR]: 0.27 },\n      5: { [Constants.Stats.CR]: 0.30 },\n    },\n    \"23017\": {\n      1: { [Constants.Stats.ERR]: 0.12 },\n      2: { [Constants.Stats.ERR]: 0.14 },\n      3: { [Constants.Stats.ERR]: 0.16 },\n      4: { [Constants.Stats.ERR]: 0.18 },\n      5: { [Constants.Stats.ERR]: 0.20 },\n    },\n    \"23018\": {\n      1: { [Constants.Stats.CD]: 0.36 },\n      2: { [Constants.Stats.CD]: 0.42 },\n      3: { [Constants.Stats.CD]: 0.48 },\n      4: { [Constants.Stats.CD]: 0.54 },\n      5: { [Constants.Stats.CD]: 0.60 },\n    },\n    \"23019\": {\n      1: { [Constants.Stats.BE]: 0.60 },\n      2: { [Constants.Stats.BE]: 0.70 },\n      3: { [Constants.Stats.BE]: 0.80 },\n      4: { [Constants.Stats.BE]: 0.90 },\n      5: { [Constants.Stats.BE]: 1.00 },\n    },\n    \"23020\": {\n      1: { [Constants.Stats.CD]: 0.20 },\n      2: { [Constants.Stats.CD]: 0.23 },\n      3: { [Constants.Stats.CD]: 0.26 },\n      4: { [Constants.Stats.CD]: 0.29 },\n      5: { [Constants.Stats.CD]: 0.32 },\n    },\n    \"23021\": { // Earthly Escapade\n      1: { [Constants.Stats.CD]: 0.32 },\n      2: { [Constants.Stats.CD]: 0.39 },\n      3: { [Constants.Stats.CD]: 0.46 },\n      4: { [Constants.Stats.CD]: 0.53 },\n      5: { [Constants.Stats.CD]: 0.60 },\n    },\n    \"23022\": { // Reforged Remembrance\n      1: { [Constants.Stats.EHR]: 0.40 },\n      2: { [Constants.Stats.EHR]: 0.45 },\n      3: { [Constants.Stats.EHR]: 0.50 },\n      4: { [Constants.Stats.EHR]: 0.55 },\n      5: { [Constants.Stats.EHR]: 0.60 },\n    },\n    \"24000\": {},\n    \"24001\": {\n      1: { [Constants.Stats.CR]: 0.08 },\n      2: { [Constants.Stats.CR]: 0.10 },\n      3: { [Constants.Stats.CR]: 0.12 },\n      4: { [Constants.Stats.CR]: 0.14 },\n      5: { [Constants.Stats.CR]: 0.16 },\n    },\n    \"24002\": {\n      1: { [Constants.Stats.RES]: 0.08 },\n      2: { [Constants.Stats.RES]: 0.10 },\n      3: { [Constants.Stats.RES]: 0.12 },\n      4: { [Constants.Stats.RES]: 0.14 },\n      5: { [Constants.Stats.RES]: 0.16 },\n    },\n    \"24003\": {\n      1: { [Constants.Stats.BE]: 0.20 },\n      2: { [Constants.Stats.BE]: 0.25 },\n      3: { [Constants.Stats.BE]: 0.30 },\n      4: { [Constants.Stats.BE]: 0.35 },\n      5: { [Constants.Stats.BE]: 0.40 },\n    },\n  }\n}\n\nfunction getOverrideTraces() {\n  return {\n    \"1001\": { // March 7th\n      [Constants.Stats.Ice_DMG]: 0.224,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1002\": { // Dan Heng\n      [Constants.Stats.Wind_DMG]: 0.224,\n      [Constants.Stats.ATK_P]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1003\": { // Himeko\n      [Constants.Stats.Fire_DMG]: 0.224,\n      [Constants.Stats.ATK_P]: 0.18,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1004\": { // Welt\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.Imaginary_DMG]: 0.144,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1005\": { // Kafka\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.EHR]: 0.18,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1006\": { // Silver Wolf\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.EHR]: 0.18,\n      [Constants.Stats.Quantum_DMG]: 0.08,\n    },\n    \"1008\": { // Arlan\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.RES]: 0.12,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1009\": { // Asta\n      [Constants.Stats.Fire_DMG]: 0.224,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.CR]: 0.067,\n    },\n    \"1013\": { // Herta\n      [Constants.Stats.Ice_DMG]: 0.224,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.CR]: 0.067,\n    },\n    \"1101\": { // Bronya\n      [Constants.Stats.Wind_DMG]: 0.224,\n      [Constants.Stats.CD]: 0.24,\n      [Constants.Stats.RES]: 0.10,\n    },\n    \"1102\": { // Seele\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.CD]: 0.24,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1103\": { // Serval\n      [Constants.Stats.CR]: 0.187,\n      [Constants.Stats.EHR]: 0.18,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1104\": { // Gepard\n      [Constants.Stats.Ice_DMG]: 0.224,\n      [Constants.Stats.RES]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1105\": { // Natasha\n      [Constants.Stats.HP_P]: 0.28,\n      [Constants.Stats.DEF_P]: 0.125,\n      [Constants.Stats.RES]: 0.18,\n    },\n    \"1106\": { // Pela\n      [Constants.Stats.Ice_DMG]: 0.224,\n      [Constants.Stats.ATK_P]: 0.18,\n      [Constants.Stats.EHR]: 0.1,\n    },\n    \"1107\": { // Clara\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.Physical_DMG]: 0.144,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1108\": { // Sampo\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.EHR]: 0.18,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1109\": { // Hook\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.CD]: 0.133,\n    },\n    \"1110\": { // Lynx\n      [Constants.Stats.HP_P]: 0.28,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1111\": { // Luka\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.EHR]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1112\": { // Topaz and Numby\n      [Constants.Stats.Fire_DMG]: 0.224,\n      [Constants.Stats.CR]: 0.12,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1201\": { // Qingque\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.Quantum_DMG]: 0.144,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1202\": { // Tingyun\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.Lightning_DMG]: 0.08,\n    },\n    \"1203\": { // Luocha\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1204\": { // Jing Yuan\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.DEF_P]: 0.125,\n      [Constants.Stats.CR]: 0.12,\n    },\n    \"1205\": { // Blade\n      [Constants.Stats.HP_P]: 0.28,\n      [Constants.Stats.CR]: 0.12,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1206\": { // Sushang\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1207\": { // Yukong\n      [Constants.Stats.Imaginary_DMG]: 0.224,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.ATK_P]: 0.1,\n    },\n    \"1208\": { // Fu Xuan\n      [Constants.Stats.CR]: 0.187,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1209\": { // Yanqing\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.Ice_DMG]: 0.144,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1210\": { // Guinaifen\n      [Constants.Stats.Fire_DMG]: 0.224,\n      [Constants.Stats.EHR]: 0.1,\n      [Constants.Stats.BE]: 0.24,\n    },\n    \"1211\": { // Bailu\n      [Constants.Stats.HP_P]: 0.28,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.RES]: 0.1,\n    },\n    \"1212\": { // Jingliu\n      [Constants.Stats.HP_P]: 0.10,\n      [Constants.Stats.SPD]: 9,\n      [Constants.Stats.CD]: 0.373,\n    },\n    \"1213\": { // Dan Heng • Imbibitor Lunae\n      [Constants.Stats.Imaginary_DMG]: 0.224,\n      [Constants.Stats.CR]: 0.12,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1214\": { // Xueyi\n      [Constants.Stats.Quantum_DMG]: 0.08,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.BE]: 0.373,\n    },\n    \"1215\": { // Hanya\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.HP_P]: 0.1,\n      [Constants.Stats.SPD]: 9,\n    },\n    \"1217\": { // Huohuo\n      [Constants.Stats.HP_P]: 0.28,\n      [Constants.Stats.RES]: 0.18,\n      [Constants.Stats.SPD]: 5,\n    },\n    \"1302\": { // Argenti\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.Physical_DMG]: 0.144,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"1303\": { // Ruan Mei\n      [Constants.Stats.BE]: 0.373,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.SPD]: 5,\n    },\n    \"1305\": { // Dr Ratio\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.CR]: 0.12,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"1306\": { // Sparkle\n      [Constants.Stats.HP_P]: 0.28,\n      [Constants.Stats.CD]: 0.24,\n      [Constants.Stats.RES]: 0.10,\n    },\n    \"1307\": { // Black Swan\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.Wind_DMG]: 0.144,\n      [Constants.Stats.EHR]: 0.10,\n    },\n    \"1312\": { // Misha\n      [Constants.Stats.Ice_DMG]: 0.224,\n      [Constants.Stats.DEF_P]: 0.225,\n      [Constants.Stats.CR]: 0.067,\n    },\n    \"8001\": { // Physical Trailblazer\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"8002\": { // Physical Trailblazer\n      [Constants.Stats.ATK_P]: 0.28,\n      [Constants.Stats.HP_P]: 0.18,\n      [Constants.Stats.DEF_P]: 0.125,\n    },\n    \"8003\": { // Fire Trailblazer\n      [Constants.Stats.DEF_P]: 0.35,\n      [Constants.Stats.ATK_P]: 0.18,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n    \"8004\": { // Fire Trailblazer\n      [Constants.Stats.DEF_P]: 0.35,\n      [Constants.Stats.ATK_P]: 0.18,\n      [Constants.Stats.HP_P]: 0.1,\n    },\n  }\n}\n\n\nfunction getOverrideImageCenter() {\n  return {\n    \"1001\": { // March 7th\n      x: 1024,\n      y: 1100\n    },\n    \"1002\": { // Dan Heng\n      x: 1024,\n      y: 1000\n    },\n    \"1003\": { // Himeko\n      x: 1024,\n      y: 1100\n    },\n    \"1004\": { // Welt\n      x: 885,\n      y: 1000\n    },\n    \"1005\": { // Kafka\n      x: 980,\n      y: 1024\n    },\n    \"1006\": { // Silver Wolf\n      x: 1010,\n      y: 1024\n    },\n    \"1008\": { // Arlan\n      x: 1240,\n      y: 1024\n    },\n    \"1009\": { // Asta\n      x: 1024,\n      y: 1000\n    },\n    \"1013\": { // Herta\n      x: 970,\n      y: 1010\n    },\n    \"1101\": { // Bronya\n      x: 950,\n      y: 1180\n    },\n    \"1102\": { // Seele\n      x: 840,\n      y: 1060\n    },\n    \"1103\": { // Serval\n      x: 1050,\n      y: 1024\n    },\n    \"1104\": { // Gepard\n      x: 1110,\n      y: 1110\n    },\n    \"1105\": { // Natasha\n      x: 1040,\n      y: 1024\n    },\n    \"1106\": { // Pela\n      x: 780,\n      y: 1100\n    },\n    \"1107\": { // Clara\n      x: 940,\n      y: 980\n    },\n    \"1108\": { // Sampo\n      x: 1024,\n      y: 1024\n    },\n    \"1109\": { // Hook\n      x: 930,\n      y: 1024\n    },\n    \"1110\": { // Lynx\n      x: 1180,\n      y: 1000\n    },\n    \"1111\": { // Luka\n      x: 930,\n      y: 1024\n    },\n    \"1112\": { // Topaz and Numby\n      x: 1120,\n      y: 930\n    },\n    \"1201\": { // Qingque\n      x: 1000,\n      y: 1024\n    },\n    \"1202\": { // Tingyun\n      x: 1024,\n      y: 950\n    },\n    \"1203\": { // Luocha\n      x: 1024,\n      y: 1024\n    },\n    \"1204\": { // Jing Yuan\n      x: 1060,\n      y: 1024\n    },\n    \"1205\": { // Blade\n      x: 990,\n      y: 900\n    },\n    \"1206\": { // Sushang\n      x: 1100,\n      y: 1024\n    },\n    \"1207\": { // Yukong\n      x: 900,\n      y: 1050\n    },\n    \"1208\": { // Fu Xuan\n      x: 920,\n      y: 950\n    },\n    \"1209\": { // Yanqing\n      x: 1024,\n      y: 1024\n    },\n    \"1210\": { // Guinaifen\n      x: 1024,\n      y: 1024\n    },\n    \"1211\": { // Bailu\n      x: 1000,\n      y: 950\n    },\n    \"1212\": { // Jingliu\n      x: 1024,\n      y: 940\n    },\n    \"1213\": { // Dan Heng • Imbibitor Lunae\n      x: 1050,\n      y: 1024\n    },\n    \"1214\": { // Xueyi\n      x: 1000,\n      y: 1024\n    },\n    \"1215\": { // Hanya\n      x: 1000,\n      y: 1024\n    },\n    \"1217\": { // Huohuo\n      x: 1000,\n      y: 1024\n    },\n    \"1302\": { // Argenti\n      x: 680,\n      y: 1000\n    },\n    \"1303\": { // Ruan Mei\n      x: 1060,\n      y: 1050\n    },\n    \"1305\": { // Dr Ratio\n      x: 900,\n      y: 1000\n    },\n    \"1306\": { // Sparkle\n      x: 1024,\n      y: 1024\n    },\n    \"1307\": { // Black Swan\n      x: 1024,\n      y: 1024\n    },\n    \"1312\": { // Misha\n      x: 1024,\n      y: 1024\n    },\n    \"8001\": { // Physical Trailblazer M\n      x: 1024,\n      y: 1100\n    },\n    \"8002\": { // Physical Trailblazer F\n      x: 1024,\n      y: 1024\n    },\n    \"8003\": { // Fire Trailblazer M\n      x: 980,\n      y: 1024\n    },\n    \"8004\": { // Fire Trailblazer F\n      x: 1050,\n      y: 1024\n    },\n  }\n}\n\n\nfunction getScoringMetadata() {\n  return {\n    \"1001\": { // March 7th\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 1,\n        [Constants.Stats.DEF_P]: 1,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.EHR\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.DEF_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.KnightOfPurityPalace,\n        Constants.Sets.GuardOfWutheringSnow,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BelobogOfTheArchitects,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n    \"1002\": { // Dan Heng\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 1,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Wind_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.EagleOfTwilightLine,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1003\": { // Himeko\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 1,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n          Constants.Stats.CR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Fire_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.TheAshblazingGrandDuke,\n        Constants.Sets.FiresmithOfLavaForging,\n        Constants.Sets.GeniusOfBrilliantStars,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.FirmamentFrontlineGlamoth,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.SpaceSealingStation,\n      ]\n    },\n    \"1004\": { // Welt\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 1,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n          Constants.Stats.CR,\n          Constants.Stats.EHR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Imaginary_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.WastelanderOfBanditryDesert,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.PanCosmicCommercialEnterprise,\n        Constants.Sets.SpaceSealingStation,\n      ]\n    },\n    \"1005\": { // Kafka\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0.5,\n        [Constants.Stats.CD]: 0.5,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0.5,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 1,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n          Constants.Stats.CR,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Lightning_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.PrisonerInDeepConfinement,\n        Constants.Sets.BandOfSizzlingThunder,\n        Constants.Sets.GeniusOfBrilliantStars,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FirmamentFrontlineGlamoth,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.TaliaKingdomOfBanditry,\n      ]\n    },\n    \"1006\": { // Silver Wolf\n      stats: {\n        [Constants.Stats.ATK]: 0.5,\n        [Constants.Stats.ATK_P]: 0.5,\n        [Constants.Stats.DEF]: 0.5,\n        [Constants.Stats.DEF_P]: 0.5,\n        [Constants.Stats.HP]: 0.5,\n        [Constants.Stats.HP_P]: 0.5,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0.75,\n        [Constants.Stats.CD]: 0.75,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 1,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 1,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n          Constants.Stats.CR,\n          Constants.Stats.EHR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Quantum_DMG,\n          Constants.Stats.ATK_P,\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n          Constants.Stats.ATK_P,\n          Constants.Stats.BE,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.EagleOfTwilightLine,\n        Constants.Sets.ThiefOfShootingMeteor,\n        Constants.Sets.GeniusOfBrilliantStars,\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.TaliaKingdomOfBanditry,\n      ]\n    },\n    \"1008\": { // Arlan\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 1,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Lightning_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.BandOfSizzlingThunder,\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1009\": { // Asta\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0.5,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 1,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.Fire_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.ThiefOfShootingMeteor,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.PenaconyLandOfTheDreams,\n      ]\n    },\n    \"1013\": { // Herta\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 1,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Ice_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.HunterOfGlacialForest,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1101\": { // Bronya\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 1,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n          Constants.Stats.Wind_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.EagleOfTwilightLine,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.PenaconyLandOfTheDreams,\n      ]\n    },\n    \"1102\": { // Seele\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 1,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Quantum_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.GeniusOfBrilliantStars,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1103\": { // Serval\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 1,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n          Constants.Stats.CR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Lightning_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.BandOfSizzlingThunder,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.ThiefOfShootingMeteor,\n      ],\n      ornamentSets: [\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1104\": { // Gepard\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 1,\n        [Constants.Stats.DEF_P]: 1,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0.75,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.DEF_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.KnightOfPurityPalace,\n        Constants.Sets.GuardOfWutheringSnow,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BelobogOfTheArchitects,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n    \"1105\": { // Natasha\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 1,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.OHB,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.PasserbyOfWanderingCloud,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n    \"1106\": { // Pela\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 1,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.EHR,\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n          Constants.Stats.Ice_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.EagleOfTwilightLine,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.PanCosmicCommercialEnterprise,\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.PenaconyLandOfTheDreams,\n      ]\n    },\n    \"1107\": { // Clara\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 1,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Physical_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.ChampionOfStreetwiseBoxing,\n        Constants.Sets.TheAshblazingGrandDuke,\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1108\": { // Sampo\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 1,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 1,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.EHR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Wind_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n          Constants.Stats.ATK_P,\n          Constants.Stats.BE,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.ThiefOfShootingMeteor,\n        Constants.Sets.PrisonerInDeepConfinement,\n        Constants.Sets.EagleOfTwilightLine,\n      ],\n      ornamentSets: [\n        Constants.Sets.PanCosmicCommercialEnterprise,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.TaliaKingdomOfBanditry,\n      ]\n    },\n    \"1109\": { // Hook\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 1,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Fire_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.FiresmithOfLavaForging,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1110\": { // Lynx\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 1,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.OHB,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.PasserbyOfWanderingCloud,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n    \"1111\": { // Luka\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 1,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.EHR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Physical_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.BE,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.ThiefOfShootingMeteor,\n        Constants.Sets.PrisonerInDeepConfinement,\n      ],\n      ornamentSets: [\n        Constants.Sets.PanCosmicCommercialEnterprise,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.TaliaKingdomOfBanditry,\n      ]\n    },\n    \"1112\": { // Topaz and Numby\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 1,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Fire_DMG,\n          Constants.Stats.ATK_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.TheAshblazingGrandDuke,\n        Constants.Sets.FiresmithOfLavaForging,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1201\": { // Qingque\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 1,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Quantum_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.GeniusOfBrilliantStars,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1202\": { // Tingyun\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.KnightOfPurityPalace,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.PenaconyLandOfTheDreams,\n      ]\n    },\n    \"1203\": { // Luocha\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 1,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.OHB,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.PasserbyOfWanderingCloud,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.SpaceSealingStation,\n      ]\n    },\n    \"1204\": { // Jing Yuan\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 1,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Lightning_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.TheAshblazingGrandDuke,\n        Constants.Sets.BandOfSizzlingThunder,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1205\": { // Blade\n      stats: {\n        [Constants.Stats.ATK]: 0.5,\n        [Constants.Stats.ATK_P]: 0.5,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 1,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n          Constants.Stats.CR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Wind_DMG,\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.HP_P,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.EagleOfTwilightLine,\n        Constants.Sets.LongevousDisciple,\n      ],\n      ornamentSets: [\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.RutilantArena,\n      ]\n    },\n    \"1206\": { // Sushang\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 1,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Physical_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.ChampionOfStreetwiseBoxing,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1207\": { // Yukong\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 1,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Imaginary_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n          Constants.Stats.ATK_P,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.WastelanderOfBanditryDesert,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.PenaconyLandOfTheDreams,\n      ]\n    },\n    \"1208\": { // Fu Xuan\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.KnightOfPurityPalace,\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.GuardOfWutheringSnow,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n    \"1209\": { // Yanqing\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 1,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Ice_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.HunterOfGlacialForest,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1210\": { // Guinaifen\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0.75,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 1,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.EHR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Fire_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n          Constants.Stats.ATK_P,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.PrisonerInDeepConfinement,\n        Constants.Sets.FiresmithOfLavaForging,\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.FirmamentFrontlineGlamoth,\n        Constants.Sets.PanCosmicCommercialEnterprise,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FleetOfTheAgeless,\n      ]\n    },\n    \"1211\": { // Bailu\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 1,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.OHB,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.PasserbyOfWanderingCloud,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.SprightlyVonwacq,\n      ]\n    },\n    \"1212\": { // Jingliu\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 1,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Ice_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.GeniusOfBrilliantStars,\n        Constants.Sets.HunterOfGlacialForest,\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1213\": { // Dan Heng • Imbibitor Lunae\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 1,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Imaginary_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.WastelanderOfBanditryDesert,\n        Constants.Sets.MusketeerOfWildWheat,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.InertSalsotto,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"1214\": { // Xueyi\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 1,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0.75,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.BE\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1215\": { // Hanya\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.HP_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1217\": { // Huohuo\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 1,\n        [Constants.Stats.HP_P]: 1,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 1,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.OHB,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.LongevousDisciple,\n        Constants.Sets.PasserbyOfWanderingCloud,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BrokenKeel,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.PenaconyLandOfTheDreams,\n      ]\n    },\n    \"1302\": { // Argenti\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 1,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Physical_DMG,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1303\": { // Ruan Mei\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 1,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.HP_P\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n          Constants.Stats.BE\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1305\": { // Dr Ratio\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 1,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Imaginary_DMG,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1306\": { // Sparkle\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 0.75,\n        [Constants.Stats.DEF_P]: 0.75,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CD,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.HP_P,\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1307\": { // Black Swan\n      stats: {\n        [Constants.Stats.ATK]: 1,\n        [Constants.Stats.ATK_P]: 1,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 1,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0.5,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 1,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.EHR,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.SPD,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Wind_DMG,\n          Constants.Stats.ATK_P,\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P,\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"1312\": { // Misha\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 1,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Ice_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n      ],\n      ornamentSets: [\n      ]\n    },\n    \"8001\": { // Physical Trailblazer M\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 1,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Physical_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.ChampionOfStreetwiseBoxing,\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"8002\": { // Physical Trailblazer F\n      stats: {\n        [Constants.Stats.ATK]: 0.75,\n        [Constants.Stats.ATK_P]: 0.75,\n        [Constants.Stats.DEF]: 0,\n        [Constants.Stats.DEF_P]: 0,\n        [Constants.Stats.HP]: 0,\n        [Constants.Stats.HP_P]: 0,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 1,\n        [Constants.Stats.CD]: 1,\n        [Constants.Stats.EHR]: 0,\n        [Constants.Stats.RES]: 0,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 0,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 1,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.CR,\n          Constants.Stats.CD\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.ATK_P,\n          Constants.Stats.SPD\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.Physical_DMG\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.ATK_P\n        ],\n      },\n      relicSets: [\n        Constants.Sets.ChampionOfStreetwiseBoxing,\n        Constants.Sets.MessengerTraversingHackerspace,\n        Constants.Sets.MusketeerOfWildWheat,\n      ],\n      ornamentSets: [\n        Constants.Sets.RutilantArena,\n        Constants.Sets.SpaceSealingStation,\n        Constants.Sets.FirmamentFrontlineGlamoth,\n      ]\n    },\n    \"8003\": { // Fire Trailblazer M\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 1,\n        [Constants.Stats.DEF_P]: 1,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0.75,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.DEF_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.KnightOfPurityPalace,\n        Constants.Sets.GuardOfWutheringSnow,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BelobogOfTheArchitects,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n    \"8004\": { // Fire Trailblazer F\n      stats: {\n        [Constants.Stats.ATK]: 0,\n        [Constants.Stats.ATK_P]: 0,\n        [Constants.Stats.DEF]: 1,\n        [Constants.Stats.DEF_P]: 1,\n        [Constants.Stats.HP]: 0.75,\n        [Constants.Stats.HP_P]: 0.75,\n        [Constants.Stats.SPD]: 1,\n        [Constants.Stats.CR]: 0,\n        [Constants.Stats.CD]: 0,\n        [Constants.Stats.EHR]: 0.75,\n        [Constants.Stats.RES]: 0.75,\n        [Constants.Stats.BE]: 0,\n        [Constants.Stats.ERR]: 1,\n        [Constants.Stats.OHB]: 0,\n        [Constants.Stats.Physical_DMG]: 0,\n        [Constants.Stats.Fire_DMG]: 0,\n        [Constants.Stats.Ice_DMG]: 0,\n        [Constants.Stats.Lightning_DMG]: 0,\n        [Constants.Stats.Wind_DMG]: 0,\n        [Constants.Stats.Quantum_DMG]: 0,\n        [Constants.Stats.Imaginary_DMG]: 0,\n      },\n      parts: {\n        [Constants.Parts.Body]: [\n          Constants.Stats.DEF_P,\n        ],\n        [Constants.Parts.Feet]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.SPD,\n        ],\n        [Constants.Parts.PlanarSphere]: [\n          Constants.Stats.DEF_P\n        ],\n        [Constants.Parts.LinkRope]: [\n          Constants.Stats.DEF_P,\n          Constants.Stats.ERR,\n        ],\n      },\n      relicSets: [\n        Constants.Sets.KnightOfPurityPalace,\n        Constants.Sets.GuardOfWutheringSnow,\n        Constants.Sets.MessengerTraversingHackerspace,\n      ],\n      ornamentSets: [\n        Constants.Sets.FleetOfTheAgeless,\n        Constants.Sets.BelobogOfTheArchitects,\n        Constants.Sets.SprightlyVonwacq,\n        Constants.Sets.BrokenKeel,\n      ]\n    },\n  }\n}","import ReactDOM from 'react-dom/client';\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport './style/style.css';\nimport App from './App';\n\nimport { WorkerPool } from './lib/workerPool';\nimport { Constants } from './lib/constants.ts'\nimport { OcrParserFribbels1 } from './lib/ocrParserFribbels1'\nimport { OcrParserKelz3 } from './lib/ocrParserKelz3';\nimport { DataParser } from './lib/dataParser'\nimport { OptimizerTabController } from './lib/optimizerTabController'\nimport { DB } from './lib/db'\nimport { CharacterStats } from './lib/characterStats'\nimport { GPUOptimizer } from './lib/gpuOptimizer'\nimport { Utils } from './lib/utils'\nimport { Assets } from './lib/assets'\nimport { RelicAugmenter } from './lib/relicAugmenter'\nimport { StatCalculator } from './lib/statCalculator'\nimport { Gradient } from \"./lib/gradient\";\nimport { SaveState } from \"./lib/saveState\";\nimport { RelicFilters } from \"./lib/relicFilters\";\nimport { Renderer } from \"./lib/renderer\";\nimport { Message } from \"./lib/message\";\nimport { Hint } from \"./lib/hint\";\nimport { CharacterConverter } from \"./lib/characterConverter\";\nimport { RelicScorer } from './lib/relicScorer.ts';\nimport { CharacterConditionals } from './lib/characterConditionals';\nimport { LightConeConditionals } from './lib/lightConeConditionals';\nimport { BufferPacker } from './lib/bufferPacker';\nimport { Typography } from 'antd';\nimport { RelicRollFixer } from \"./lib/relicRollFixer\";\n\nwindow.WorkerPool = WorkerPool;\nwindow.Constants = Constants;\nwindow.OcrParserFribbels1 = OcrParserFribbels1;\nwindow.OcrParserKelz3 = OcrParserKelz3;\nwindow.DataParser = DataParser;\nwindow.OptimizerTabController = OptimizerTabController;\nwindow.DB = DB;\nwindow.CharacterStats = CharacterStats;\nwindow.GPUOptimizer = GPUOptimizer;\nwindow.Utils = Utils;\nwindow.Assets = Assets;\nwindow.RelicAugmenter = RelicAugmenter;\nwindow.StatCalculator = StatCalculator;\nwindow.Gradient = Gradient;\nwindow.SaveState = SaveState;\nwindow.RelicFilters = RelicFilters;\nwindow.Renderer = Renderer;\nwindow.Message = Message;\nwindow.Hint = Hint;\nwindow.CharacterConverter = CharacterConverter\nwindow.RelicScorer = RelicScorer\nwindow.CharacterConditionals = CharacterConditionals\nwindow.LightConeConditionals = LightConeConditionals\nwindow.BufferPacker = BufferPacker\nwindow.RelicRollFixer = RelicRollFixer\n\nconsole.log('Data parser', DataParser.parse());\nSaveState.load()\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const root = ReactDOM.createRoot(document.getElementById('root')!);\n\n  root.render(\n    <ErrorBoundary fallback={<Typography>Something went wrong</Typography>}>\n      <App />\n    </ErrorBoundary>\n  );\n});\n"],"names":["IconSVG","jsx","xmlns","width","height","fill","viewBox","children","d","DiscordIcon","props","Icon","_objectSpread","component","GithubIcon","jsxs","fillRule","CoffeeIcon","getItem","label","key","icon","type","items","MenuOutlined","Typography","Link","href","target","rel","style","marginRight","MenuDrawer","hashes","activeKey","window","store","s","setActiveKey","ConfigProvider","theme","components","Menu","margin","onClick","e","includes","history","replaceState","overflow","defaultSelectedKeys","defaultOpenKeys","selectedKeys","mode","propTypes","PropTypes","array","Stats","ATK_P","ATK","BE","CD","CR","DEF_P","DEF","EHR","ERR","Fire_DMG","HP_P","HP","Ice_DMG","Imaginary_DMG","Lightning_DMG","OHB","Physical_DMG","Quantum_DMG","RES","SPD_P","SPD","Wind_DMG","MainStats","MainStatsValues","_defineProperty","_MainStatsValues","base","increment","SubStats","StatsToReadable","_StatsToReadable","StatsToIndex","i","Object","values","map","x","Parts","Head","Hands","Body","Feet","PlanarSphere","LinkRope","PartsToReadable","PartsMainStats","SetsRelics","PasserbyOfWanderingCloud","MusketeerOfWildWheat","KnightOfPurityPalace","HunterOfGlacialForest","ChampionOfStreetwiseBoxing","GuardOfWutheringSnow","FiresmithOfLavaForging","GeniusOfBrilliantStars","BandOfSizzlingThunder","EagleOfTwilightLine","ThiefOfShootingMeteor","WastelanderOfBanditryDesert","LongevousDisciple","MessengerTraversingHackerspace","TheAshblazingGrandDuke","PrisonerInDeepConfinement","SetsOrnaments","SpaceSealingStation","FleetOfTheAgeless","PanCosmicCommercialEnterprise","BelobogOfTheArchitects","CelestialDifferentiator","InertSalsotto","TaliaKingdomOfBanditry","SprightlyVonwacq","RutilantArena","BrokenKeel","FirmamentFrontlineGlamoth","PenaconyLandOfTheDreams","Sets","SetsRelicsNames","SetsOrnamentsNames","OrnamentSetToIndex","length","RelicSetToIndex","_screenshotElement","statConversion","partConversion","gradeConversion","optimizerStatToJsonSubStat","optimizerStatToAffixStat","optimizerPartToPartId","Constants","MAX_INT","GPUOptimizer","createConstants","HEIGHT","WIDTH","request","relics","character","relicSetAllowList","relicSetSolutions","ornamentSetSolutions","elementalMultipliers","cIndex","consts","part","set","maxHp","minHp","maxAtk","minAtk","maxDef","minDef","maxCr","minCr","maxCd","minCd","maxSpd","minSpd","maxEhr","minEhr","maxRes","minRes","maxBe","minBe","maxCv","minCv","maxDmg","minDmg","maxMcd","minMcd","minEhp","maxEhp","buffAtk","buffAtkP","buffCr","buffCd","relicsHead","relicsHands","relicsBody","relicsFeet","relicsPlanarSphere","relicsLinkRope","hSize","gSize","bSize","fSize","pSize","lSize","charBase","charTrace","traces","charLc","lightCone","relicSetCount","ornamentSetCount","console","log","Utils","arrayOfZeroes","n","Array","arrayOfValue","sleep","ms","Promise","resolve","setTimeout","relicsToSetArrays","_step4","relicSets","ornamentSets","_iterator4","_createForOfIteratorHelper","done","relic","value","err","f","isFlat","stat","randomElement","arr","Math","floor","random","screenshotElement","_asyncToGenerator","_regeneratorRuntime","mark","_callee","element","wrap","_context","prev","next","htmlToImage.toPng","pixelRatio","abrupt","sent","stop","_x","apply","this","arguments","truncate10ths","collectById","_step5","byId","_iterator5","id","truncate10000ths","precisionRound","number","precision","undefined","factor","pow","round","flipMapping","obj","fromEntries","entries","a","reverse","clone","structuredClone","characterNameFilterOption","input","option","_option$label","toLowerCase","hasMainStat","generateCharacterOptions","characterData","JSON","parse","stringify","DB","getMetadata","characters","_i2","_Object$values","displayName","sort","b","localeCompare","CharacterConverter","convert","setConstantConversions","_step6","preRelics","relicList","preLightCone","equipment","characterEidolon","rank","avatarId","lightConeId","tid","lightConeLevel","level","lightConeSuperimposition","preRelic","_step7","metadata","enhance","setId","substring","setName","name","partId","partName","gradeId","grade","mainId","mainAffixId","mainData","relicMainAffixes","concat","affixes","mainStat","property","mainValue","step","main","substats","_iterator7","subAffixList","sub","subId","affixId","count","cnt","subData","relicSubAffixes","subStat","subValue","push","RelicAugmenter","augment","error","convertRelic","filter","equipped","_iterator6","verified","equippedBy","form","characterLevel","characterId","getConstantConversions","HPAddedRatio","AttackAddedRatio","DefenceAddedRatio","HPDelta","AttackDelta","DefenceDelta","SpeedDelta","CriticalDamageBase","CriticalChanceBase","StatusProbabilityBase","StatusResistanceBase","BreakDamageAddedRatioBase","SPRatioBase","HealRatioBase","PhysicalAddedRatio","FireAddedRatio","IceAddedRatio","ThunderAddedRatio","WindAddedRatio","QuantumAddedRatio","ImaginaryAddedRatio","initialized","RelicRollFixer","fixMainStatvalue","initialize","query","affix","find","totalValue","scaledValue","fixSubStatValue","statsByGrade","relicRollValues","convertedStatType","rolls","matched","conversions","ATK_","HP_","DEF_","augmentedStats","relicsTabWeight","bestCaseWeight","averageCaseWeight","mainMaxValue","_step8","_iterator8","substat","uuidv4","_i3","_Object$values2","fixAugmentedStats","cs","ss","ds","calculateRelicRatings","getDefaultForm","initialCharacter","_weights","_setConditionals","mainBody","mainFeet","mainPlanarSphere","mainLinkRope","predictMaxedMainStat","rankFilter","keepCurrentRelics","enemyLevel","enemyCount","enemyResistance","enemyHpPercent","mainHead","mainHands","statDisplay","weights","setConditionals","SaveState","save","state","getRelics","getCharacters","scorerId","getState","scoringMetadataOverrides","stateString","localStorage","load","parsed","setStore","Message","success","content","duration","messageApi","open","warn","warning","relicsById","selectedOptimizerCharacter","create","setRelicsById","charactersById","setCharactersById","setCharacters","characterTabSelectedId","setCharacterTabSelectedId","characterTabBlur","setCharacterTabBlur","permutationDetails","HeadTotal","HandsTotal","BodyTotal","FeetTotal","PlanarSphereTotal","LinkRopeTotal","setPermutationDetails","permutations","setPermutations","permutationsSearched","setPermutationsSearched","permutationsResults","setPermutationsResults","setStatDisplay","location","hash","setScorerId","setScoringMetadataOverrides","conditionalSetEffectsDrawerOpen","setConditionalSetEffectsDrawerOpen","selectedScoringCharacter","setSelectedScoringCharacter","setSelectedOptimizerCharacter","char","relicTabFilters","mainStats","subStats","setRelicTabFilters","setFilteredRelics","filteredRelics","setMetadata","getCharacterById","_step9","_iterator9","assignRanks","setCharacter","addCharacter","insertCharacter","index","matchingCharacter","removed","splice","refreshCharacters","setCharacterRows","getRelicsById","setRelics","_step10","_iterator10","getRelicById","setRelic","refreshRelics","setRelicRows","getScoringMetadata","defaultScoringMetadata","scoringMetadata","updateCharacterScoreOverrides","updated","overrides","_step11","_iterator11","_step12","_iterator12","resetStore","addFromForm","found","defaultForm","characterGrid","current","api","updateGridOptions","rowData","unequipCharacter","_i4","_Object$values3","equippedId","relicMatch","removeCharacter","unequipRelicById","_step13","_iterator13","equipRelic","prevOwnerId","prevCharacter","prevRelic","equipRelicIdsToCharacter","relicIds","_step14","_iterator14","relicId","deleteRelic","_window$characterGrid","redrawRows","mergeRelicsWithState","newRelics","newCharacters","oldRelics","_iterator15","_step15","_step16","oldRelicHashes","_iterator16","oldRelic","hashRelic","_step17","replacementRelics","_iterator17","_loop","stableRelicId","newRelic","_step18","_iterator18","_i5","_Object$values4","_iterator19","_step19","relicsGrid","fieldValues","OptimizerTabController","getForm","onOptimizerFormValuesChange","mergeVerifiedRelicsWithState","_step20","oldRelicPartialHashes","_iterator20","partialHashRelic","_step21","updatedOldRelics","addedNewRelics","_iterator21","_step22","partialMatches","match","_iterator22","partialMatch","exit","upgrades","matchSubstat","newSubstat","compareSameTypeSubstat","_step23","substatValues","substatStats","_iterator23","hashObject","mainstat","mainvalue","objectHash","oldSubstat","oldValue","newValue","baseSubstatCount","slice","Text","HeaderText","styled","_templateObject","_taggedTemplateLiteral","justify","align","inputWidth","numberWidth","sliderWidth","_templateObject2","FormSwitch","Flex","minWidth","display","Form","Item","conditionalType","valuePropName","Switch","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","disabled","defaultChecked","text","FormSlider","_reactExports$useStat2","_slicedToArray","useState","inputValue","setInputValue","onChange","multiplier","percent","symbol","vertical","gap","marginBottom","InputNumber","min","max","controls","size","parser","formatter","addonAfter","Slider","marginTop","marginLeft","tooltip","textAlign","lc","bool","string","pathFromClassMapping","iconFromStatMapping","baseUrl","Assets","getStatIcon","percented","_iconFromStatMapping","getSampleSave","getCharacterPortrait","getCharacterPortraitById","getCharacterAvatarById","getCharacterIconById","getCharacterPreview","preview","getCharacterPreviewById","getLightConePortrait","getPath","path","getPathFromClass","c","Warrior","Warlock","Knight","Priest","Rogue","Shaman","Mage","getElement","getBlank","getQuestion","getLogo","getDiscord","getStar","getGuideImage","getInventory","getStarBw","getMisc","filename","getPart","mapping","getSetImage","_setToId","setToId","partToId","TooltipImage","Popover","title","overlayStyle","src","opacity","object","Hint","ratingFilters","combatBuffs","statFilters","sets","characterPassives","lightConePassives","actions","optimizerOptions","optimizationDetails","enemyOptions","substatWeightFilter","lightConeOptionMapping","sValues","defaults","critBuff","precomputeEffects","r","lightConeConditionals","calculatePassives","calculateBaseMultis","healingBuff","basicSkillDmgBuff","BASIC_BOOST","SKILL_BOOST","hp50DefBuff","initialEhrBuff","inBattleAtkBuff","ultDmgBuff","ULT_BOOST","defeatedEnemyAtkBuff","enemyHp50Buff","ELEMENTAL_DMG","enemySlowedDmgBuff","defeatedEnemySpdBuff","selfHp80CrBuff","basicAtkBuff","initialSpdBuff","postUltAtkBuff","postUltHealingBoost","debuffStacksDmgIncrease","dmgResBuff","DMG_RED_MULTI","enemies2CrBuff","atkBuffStacks","enemyHp50FuaBuff","xxxxxxxxxxxxxxxxxxxxx","FUA_BOOST","DOT_BOOST","sameTargetHitStacks","alliesSameElement","enemyHpHigherDmgBoost","sMaxValues","resToHealingBoost","boost","targetEnsnared","DEF_SHRED","maxEnergyDmgBoost","defeatedEnemyCrBuff","defeatedEnemyCdBuff","enemyShockWindShear","initialDmgReductionBuff","sValuesSpd","sValuesDmg","spdDmgBuff","enemyBurnedBleeding","sValuesDmgBoost","sValuesStacks","dmgBoost","defeatedEnemyAtkStacks","extraDmgProc","BASIC_SCALING","SKILL_SCALING","defScalingUltDmg","sValuesAtk","sValuesCd","atkBuffActive","cdBuffActive","maxEnergyStacks","postSkillHealBuff","enemyCountAtkBuff","enemyWeaknessBreakDmgBuff","spdScalingBuffs","stacks","ULT_CD_BOOST","dmgBuff","sValuesErr","postSkillDmgBuff","enemyDebuffedDmgBoost","skillAtkBoost","selfAttackedDefBuff","spdStacks","dotEffect","sValuesCr","enemy3DebuffsCrBoost","targetCodeDebuff","postUltSpdBuff","sValuesSkillUltDmg","sValuesFuaDmg","skillUltDmgBoost","fuaDmgBoost","hpLostDmgBuff","missedCritCrBuff","healingBasedDmgProc","sValuesStackDmg","sValuesDefPen","eclipseStacks","maxStackDefPen","dragonsCallStacks","targetTameStacks","maxEnergyUltDmgStacks","postUltDmgBuff","sValuesFuaPen","debuffCdStacks","postUltBuff","FUA_DEF_PEN","sValuesAtkStacks","sValuesDmgBuff","atkBoostStacks","weaknessBreakDmgBuff","enemyHp50CrBoost","enemyDefeatedAtkBuff","activeShieldDmgDecrease","postUltDotDmgBuff","maskActive","sValuesDotPen","prophetStacks","DOT_DEF_PEN","LightConeConditionals","get","lcFn","getDisplayForLightCone","superimposition","ASHBLAZING_ATK_STACK","calculateAshblazingSet","hitMulti","enabled","p4","ashblazingAtk","baseAtk","ashblazingMulti","characterOptionMapping","talentCrBuff","talent","talentHpDrainAtkBuffMax","basicScaling","basic","skillScaling","skill","skillEnhancedScaling","ultScaling","ult","talentEnhancedState","talentHpDrainAtkBuff","e1CdBuff","e2SkillDmgBuff","characterConditionals","assign","baseComputedStatsObject","ULT_SCALING","FUA_SCALING","BASIC_DMG","SKILL_DMG","ULT_DMG","FUA_DMG","talentMaxStacks","ultEnhancedScaling","ultEnhancedExtraHitScaling","talentCrStackValue","ultEnhanced","talentStacks","ultEnhancedExtraHits","e2UltAtkBuff","ULT_DEF_PEN","talentMissingHpDmgBoostMax","selfCurrentHpPercent","ultSpdBuffValue","talentStacksAtkBuff","skillExtraDmgHitsMax","dotScaling","talentBuffStacks","skillExtraDmgHits","ultSpdBuff","DOT_SCALING","DOT_DMG","healingMaxHpBuff","talentDmgReductionBuff","e2UltHealingBuff","e4SkillHealingDmgBuffStacks","ALL_DMG_MULTI","enhancedStateDmgBoost","basicEnhancedAtkScaling","basicEnhancedHpScaling","ultAtkScaling","ultHpScaling","ultLostHpScaling","fuaAtkScaling","fuaHpScaling","hitMultiByTargets","enhancedStateActive","hpPercentLostTotal","e4MaxHpIncreaseStacks","_calculateAshblazingS15","skillDmgBoostValue","ultAtkBoostValue","ultCdBoostValue","ultCdBoostBaseValue","fuaScaling","techniqueBuff","battleStartDefBuff","skillBuff","ultBuff","e2SkillSpdBuff","BASIC_CR_BOOST","_calculateAshblazingS14","ultDmgReductionValue","ultFuaExtraScaling","hitMultiByTargetsBlast","talentEnemyMarked","e4DmgReductionBuff","_calculateAshblazingS12","_calculateAshblazingS13","extraPenValue","ultExtraScaling","talentPenBuff","enemySlowed","RES_PEN","skillCrBuffValue","skillHpBuffValue","talentDmgReductionValue","skillActive","e6TeamHpLostPercent","talentDebuffDmgIncreaseValue","talentDebuffMax","talentDebuffStacks","enemyBurned","e2BurnMultiBoost","DMG_TAKEN_MULTI","ultAtkBuffValue","talentDmgBoostValue","targetBurdenActive","burdenAtkBuff","skillSpdBuff","targetFrozen","e2TalentCritStacks","e6UltAtkBuff","_calculateAshblazingS11","targetBurned","selfCurrentHp80Percent","e1TalentSpdBuff","e6UltExtraHits","_calculateAshblazingS10","targetBurnedExtraScaling","enhancedSkill","ultBuffValue","e6DmgBuff","righteousHeartStackMax","outroarStackCdValue","righteousHeartDmgValue","basicEnhanced1Scaling","basicEnhanced2Scaling","basicEnhanced3Scaling","basicEnhancements","skillOutroarStacks","talentRighteousHeartStacks","e6ResPenStacks","enemyElementalWeak","BASIC_RES_PEN","skillCritBuff","talentHitsPerAction","talentAttacks","e2DmgBuff","e6FuaVulnerabilityStacks","FUA_CD_BOOST","FUA_VULNERABILITY","hits","stacksPerMiss","stacksPerHit","ashblazingStacks","atkBoostSum","_calculateAshblazingS9","e1DotDmgReceivedDebuff","DOT_VULNERABILITY","_calculateAshblazingS8","basicEnhancedHitValue","targetUltDebuffDmgTakenValue","basicEnhancedScaling","basicEnhanced","targetUltDebuffed","e1TargetBleeding","basicEnhancedExtraHits","e4TalentStacks","fieldActive","e6ResReduction","skillHpPercentBuff","skillHpFlatBuff","e4TalentAtkBuff","_calculateAshblazingS7","ultDefPenValue","enemyDebuffed","skillRemovedBuff","ultDefPenDebuff","e4SkillResShred","skillStackDmg","talentAtkBuff","basicEnhancedSpdBuff","skillDmgIncreaseStacks","_calculateAshblazingS5","_calculateAshblazingS6","dotVulnerabilityValue","targetDotTakenDebuff","skillExtraHits","targetWindShear","buffedStateDmgBuff","speedBoostStacksMax","buffedState","speedBoostStacks","e6UltTargetDebuff","talentExtraDmgScaling","targetShocked","enemyDefeatedBuff","skillResShredValue","skillDefShredBufValue","ultDefShredValue","skillResShredDebuff","skillDefShredDebuff","ultDefShredDebuff","targetDebuffs","talentSpdBuffValue","ultBuffedAtk","talentSpdBuffStacksMax","skillExtraHitScaling","ultBuffedState","e2DmgReductionBuff","skillTriggerStacks","talentSpdBuffStacks","originalSkillScaling","stanceSkillScaling","stanceScalingProportion","skillAtkBoostMax","ultDmgBoost","benedictionBuff","proofOfDebtFuaVulnerability","enhancedStateFuaScalingBoost","enhancedStateFuaCdBoost","enemyProofOfDebtDebuff","numbyEnhancedState","e1DebtorStacks","ashblazingFuaData","ashblazingBasicData","SKILL_CD_BOOST","SKILL_CR_BOOST","FUA_CR_BOOST","SKILL_VULNERABILITY","SKILL_DEF_PEN","SKILL_RES_PEN","FUA_RES_PEN","BASIC_CD_BOOST","BASIC_VULNERABILITY","BASIC_DEF_PEN","physicaltrailblazer","firetrailblazer","skillExtraHitsMax","talentScaling","enemyDmgTakenDebuff","e1EnhancedState","enemyWeaknessBroken","ultCdBuffValue","talentCdBuffValue","talentCrBuffValue","ultBuffActive","soulsteelBuffActive","critSpdBuff","e1TargetFrozen","e4CurrentHp80","_calculateAshblazingS4","skillAtkBuffValue","ultCrBuffValue","talentAtkScaling","roaringBowstringsActive","initialSpeedBuff","roaringBowstrings","fieldResPenValue","ultFieldActive","e4BeBuff","beOver","summationStacksMax","e2FuaRatio","procs","fuaMultiByDebuffs","enemyDebuffStacks","summationStacks","_calculateAshblazingS2","_calculateAshblazingS3","ultBoostMax","hitMultiByFuaHits","enemyToughness50","toughnessReductionDmgBoost","fuaHits","_calculateAshblazingS","skillCdBuffScaling","skillCdBuffBase","cipherTalentStackBoost","talentBaseStackBoost","atkBoostByQuantumAllies","skillCdBuff","cipherBuff","quantumAllies","arcanaStackMultiplier","stack3ArcanaBlastDmg","epiphanyDmgTakenBoost","defShredValue","epiphanyDebuff","defDecreaseDebuff","arcanaStacks","e1ResReduction","ultStackScaling","ultHitsOnTarget","enemyFrozen","e2DefReduction","e6UltDmgBoost","_baseComputedStatsObj","skillDamageReductionValue","basicAtkScaling","basicDefScaling","basicEnhancedDefScaling","ultDefScaling","enhancedBasic","shieldActive","e6DefStacks","talentAtkScalingValue","enhancedUlt","value1","value2","maxedMainStats","aggs","filteredIndices","filterModel","sortModel","columnsToAggregate","columnsToAggregateMap","CharacterConditionals","characterFn","getDisplayForCharacter","eidolon","token","opacityLoading","CharacterStats","getZeroes","_ref","StatCalculator","getMaxedMainStat","_maxedMainStats","calculateCharacterWithRelics","_hero","lightConeMetadata","lightConeStats","superimpositionStats","characterMetadata","lightCones","promotions","superimpositions","traceStats","characterStats","baseStats","trace","_Utils$relicsToSetArr","sum","_step24","total","_iterator24","crSum","cdSum","hero","elementalDmg","ehp","cv","ED","CV","EHP","WEIGHT","BASIC","SKILL","ULT","FUA","DOT","xATK","xDEF","xHP","xSPD","xCR","xCD","xEHR","xRES","xBE","xERR","xOHB","xELEMENTAL_DMG","calculate","rows","inputConsts","inputRelics","setAggs","getAggs","setRows","setTopRow","optimizerGrid","pinnedTopRowData","getRows","equipClicked","formValues","selectedNodes","getSelectedNodes","row","data","build","calculateRelicsFromId","setOptimizerBuild","cellClicked","event","rowPinned","getColumnsToAggregate","_columnsToAggregateMa","keys","resetDataSource","datasource","getDataSource","newSortModel","newFilterModel","params","showLoadingOverlay","then","inPlaceSort","desc","colId","asc","isCombat","indices","minWeight","maxWeight","minBasic","maxBasic","minSkill","maxSkill","minUlt","maxUlt","minFua","maxFua","minDot","maxDot","_step25","subArray","_iterator25","startRow","endRow","aggregate","successCallback","hideOverlay","l","p","g","h","optimizerCharacterId","optimizerForm","getFieldsValue","fixForm","getDisplayFormValues","_newForm$setCondition","newForm","unsetMax","unsetMin","buffSpd","buffSpdP","buffBe","buffDmgBoost","buffDefShred","buffResPen","enemyElementalResistance","defaultOptions","_i9","_Object$keys","_newForm$weights","defaultLcOptions","_i10","_Object$keys2","validateForm","topPercent","fixValue","updateFilters","resetFilters","includeEquippedRelics","setFieldsValue","changeCharacter","displayFormValues","setSelectedLightCone","setPinnedRow","refreshPinned","applyRowFilters","parseFloat","toFixed","def","div","_step26","minAgg","_iterator26","column","setMinMax","maxAgg","_step27","_iterator27","_step28","_iterator28","stats","BufferPacker","extractCharacter","offset","_ref2","extractArrayToResults","results","packCharacter","relicSetIndex","ornamentSetIndex","cleanFloatBuffer","buffer","Float64Array","createFloatBuffer","poolSize","navigator","hardwareConcurrency","workers","buffers","taskQueue","taskStatus","WorkerPool","worker","Worker","URL","module","meta","url","nextTask","_taskQueue$shift","shift","task","callback","execute","pop","onmessage","message","postMessage","cancel","RelicFilters","calculateWeightScore","_statScalings","statScalings","_i14","_Object$keys3","weight","_step29","_iterator29","_step30","_iterator30","scale","weightScore","applyTopFilter","originalRelics","_i15","_Object$values5","partition","applyRankFilter","higherRankedRelics","rankedCharacter","applyMainFilter","out","_toConsumableArray","applyEnhanceFilter","applyEquippedFilter","blacklist","forEach","ret","applyGradeFilter","applySetFilter","_step32","allowedSets","_iterator32","ornamentSet","ornamentFilter","_step31","_iterator31","relicSet","index1","index2","relicFilter","applyCurrentFilter","matchingRelic","splitRelicsByPart","relicToArray","partToNumber","setToNumber","result","CANCEL","Optimizer","getFilteredRelics","preFilteredRelicsByPart","applyMaxedMainStatsFilter","addMainStatToAugmentedStats","optimize","relicsArrays","relicsByPartToArray","characterToArrays","_generateRelicSetAllo","_step36","setRequest","len","setIndices","_iterator36","setArr","generateEmptyArr","join","relicSetAllowListToIndices","filledIndices","fillRelicSetArrPossibilities","j","_step34","y","_iterator34","permutator","convertRelicSetIndicesTo1D","Set","generateRelicSetAllowList","_step35","_iterator35","setIndex","generateOrnamentSetAllowList","searched","runs","ceil","inProgress","resultsShown","topRow","setAllowList","skip","relicSetToIndex","ornamentSetToIndex","resultArr","optimizationId","handleTopRow","_loop2","run","_step33","_iterator33","newArr","inputArr","permute","m","curr","FormRow","paddingTop","paddingLeft","fontSize","paddingRight","paddingBottom","any","shadow","FilterContainer","borderRadius","boxShadow","defaultGap","defaultPadding","smallWidth","mediumWidth","panelWidth","FormCard","_props$style","backgroundColor","padding","medium","OptimizerOptions","_ref3$defaultGap","_ref3","_ref3$panelWidth","Select","options","Radio","Group","optionType","buttonStyle","flex","justifyContent","paddingInline","_templateObject3","FormStatRollSlider","onChangeComplete","FormStatRollSliderTopPercent","_reactExports$useStat4","keyboard","VerticalDivider","Divider","flexGrow","setConditionalsNameWidth","FormSetConditionals","setChampionOfStreetwiseBoxingOptions","useMemo","setWastelanderOfBanditryDesert","setLongevousDiscipleOptions","setTheAshblazingGrandDukeOptions","setPrisonerInDeepConfinementOptions","defaultMessage","Drawer","placement","onClose","forceRender","ConditionalSetOption","description","conditional","p4Checked","selectOptions","p2Checked","inputType","optionLabelProp","listHeight","dropdownStyle","mouseEnterDelay","textOverflow","whiteSpace","SHOW_CHILD","Cascader","HorizontalDivider","_templateObject4","generateSetsOptions","childrenWithAny","generateLabel","parens","imageSrc","_i34","_Object$entries","FormStatTextStyled","_templateObject5","InputNumberStyled","_templateObject6","FilterRow","FilterRow$1","OptimizerForm","useForm","useWatch","_reactExports$useStat6","setOptimizationId","characterOptions","lightConeOptions","lcData","_i35","_Object$values6","_reactExports$useStat8","selectedLightCone","useEffect","lightConeForm","setFieldValue","lightConeSelectorChange","_reactExports$useStat10","selectedCharacter","setSelectedCharacter","characterSelectorChange","levelOptions","levelStats","enemyLevelOptions","enemyCountOptions","enemyResistanceOptions","enemyHpPercentOptions","superimpositionOptions","eidolonOptions","onValuesChange","changedValues","allValues","bypass","startsWith","_Optimizer$getFiltere2","filterOption","_option$label2","initialValues","OrnamentSetTagRenderer","closable","Tag","onMouseDown","preventDefault","stopPropagation","flexDirection","marginInlineEnd","alignItems","optimizerCancelClicked","optimizerResetClicked","optimizerFilterClicked","optimizerStartClicked","submit","func","position","layout","onFinish","onFinishFailed","Image","transform","showSearch","allowClear","placeholder","maxTagCount","Option","tagRender","dropdownHeight","controlItemWidth","controlWidth","showCheckedStrategy","RelicSetTagRenderer","inner","pieces","split","React","Fragment","multiple","expandTrigger","Button","SettingOutlined","Renderer","x100Tenths","tenths","setImages","s1","s2","s3","_loop3","lastIndexOf","assetValue","otherIndex","SetDisplay","asset","setImage","anySet","characterIcon","readableStat","readablePart","hideZeroes","hideZeroesFloor","hideZeroes10ths","mainValueRenderer","hideZeroesX100Tenths","scoreRenderer","hideNaNAndRound","isNaN","renderSubstatNumber","renderMainStatNumber","renderGradeCell","renderGrade","color","gradeToColor","Tooltip","CheckCircleFilled","background","iconSize","generateStat","source","displayValue","RelicPreview","getRelic","relicSrc","equippedBySrc","scored","score","Card","hoverable","setSelectedRelic","setEditModalOpen","rating","modified","mainStatFreeRolls","minRollValue","ratings","_i41","_Object$entries2","F","D","C","B","A","S","SS","SSS","WTF","threshold","RelicScorer","scoreCharacterWithRelics","_step37","scoredRelics","_iterator37","Number","mainStatScore","pairs","missingSets","deduction","avgSubstatScore","totalScore","totalRating","scoreCharacter","_scaling","_step38","scaling","multipliers","_iterator38","scoreMeta","metaParts","parts","OptimizerBuildPreview","_props$build","_props$build2","_props$build3","_props$build4","_props$build5","_props$build6","_props$build7","_props$build8","_props$build9","_props$build10","_props$build11","_props$build12","forceUpdate","React.useReducer","useReducer","o","forceOptimizerBuildPreviewUpdate","headScore","handsScore","bodyScore","feetScore","planarSphereScore","linkRopeScore","PermutationDisplay","rightText","right","toLocaleString","lineHeight","left","dashed","Sidebar","top","relicColumnRanges","optimizerGridGradient","tinygradient","pos","relicGridGradient","Gradient","getColor","decimal","gradient","rgbAt","toHexString","getOptimizerColumnGradient","range","getRelicGradient","_relicColumnRanges","col","OptimizerTab","useRef","_reactExports$useStat12","optimizerBuild","cellClickedListener","useCallback","DIGITS_4","DIGITS_5","baseColumnDefs","field","cellRenderer","headerName","valueFormatter","cellStyle","combatColumnDefs","columnDefs","gridOptions","rowHeight","pagination","rowSelection","rowModelType","paginationPageSize","paginationPageSizeSelector","cacheBlockSize","suppressDragLeaveHidesColumns","suppressScrollOnNewData","suppressCellFocus","defaultColDef","sortable","sortingOrder","active","className","minHeight","resize","AgGridReact","ref","animateRows","headerHeight","onCellClicked","OcrParserFribbels1","json","_step39","parsedRelics","_iterator39","readRelic","stringSimilarity","findBestMatch","bestMatch","setMatches","lowerAlphaNumeric","relicSetList","bestMatchIndex","parseInt","parsedStats","_step40","_iterator40","rest","trim","last","statMatches","statList","lowerAlphaNumericPercent","statResult","parsedStat","readStats","_i44","_relicSetList$","str","replace","substatMapping","mainstatMapping","partMapping","affixMapping","formTemplate","OcrParserKelz3","_step41","_iterator41","parseCharacters","_step42","parsedCharacters","_iterator42","_loop4","light_cones","_lightCone","_lightConeList$find","_lightCone2","_lightCone3","newCharacter","characterList","tag","lcKey","lightConeList","readCharacter","_affixMapping","slot","rarity","_step43","rawSubstats","parsedSubstats","_iterator43","mappedStat","parsedMainStat","rawMainstat","affixMetadata","mainBase","mainStep","_i45","_relicSetList","spinnerMs","saveFile","_ref4","_callee2","blob","suggestedName","supportsFileSystemAccess","handle","writable","blobURL","_context2","self","_unused","showSaveFilePicker","types","accept","createWritable","write","close","t0","createObjectURL","document","createElement","download","body","append","click","revokeObjectURL","remove","_x2","_x3","saveDataTab","_saveClicked","_callee3","_context3","Blob","DownloadOutlined","loadDataTab","_reactExports$useStat16","setCurrent","_reactExports$useStat18","currentSave","setCurrentSave","_reactExports$useStat20","loading1","setLoading1","_reactExports$useStat22","loading2","setLoading2","onStepChange","beforeUpload","file","reader","FileReader","readAsText","onload","fileUploadText","fileType","onUploadClick","loadConfirmed","Steps","direction","Upload","UploadOutlined","loading","kelZImporterTab","_reactExports$useStat24","_reactExports$useStat26","currentRelics","setCurrentRelics","_reactExports$useStat28","currentCharacters","setCurrentCharacters","_reactExports$useStat30","_reactExports$useStat32","version","mergeRelicsConfirmed","mergeCharactersConfirmed","Popconfirm","onConfirm","okText","cancelText","fribbelsImporterTab","_reactExports$useStat34","_reactExports$useStat36","_reactExports$useStat38","_reactExports$useStat40","_reactExports$useStat42","fileVersion","ImportTab","_reactExports$useStat14","setLoading","Tabs","defaultActiveKey","RadioIcon","_templateObject7","renderMainStat","_relic$main","_relic$main2","renderStat","renderSubstat","RelicModal","_props$selectedRelic4","_props$selectedRelic5","_props$selectedRelic8","relicForm","_reactExports$useStat44","mainStatOptions","setMainStatOptions","selectedRelic","defaultValues","mainStatType","mainStatValue","substatType0","substatValue0","substatType1","substatValue1","substatType2","substatValue2","substatType3","substatValue3","_props$selectedRelic","_props$selectedRelic3","_props$selectedRelic2","entry","_props$selectedRelic6","_props$selectedRelic7","item","enhanceOptions","setOptions","_i47","_Object$entries3","_i48","_Object$entries4","substatOptions","_i49","_Object$entries5","preserve","substatTypes","onOk","setOpen","_mainStatOptions2$2","_mainStatOptions2$","getFieldValue","specialStats","floorStats","Modal","centered","destroyOnClose","onCancel","footer","_option$label3","tagHeight","imgWidth","RelicFilterBar","_reactExports$useStat46","currentlySelectedCharacterId","setCurrentlySelectedCharacterId","generateImageTags","srcFn","setsData","partsData","mainStatsData","subStatsData","enhanceData","possibleSubstats","level80Stats","_loop5","scoringResult","subScore","mainScore","substatScoreEntries","bestUnobtainedSubstat","finalSubstats","finalSubstatWeights","bestOverallSubstatWeight","avgWeight","reduce","extraRolls","missingSubstats","missingRolls","_i50","_relics3","applyColumnState","defaultState","setIsScoringModalOpen","tags","flexBasis","selectedTags","flexWrap","CheckableTag","checked","nextSelectedTags","t","clonedFilters","handleChange","RelicsTab","gridRef","_reactExports$useStat48","relicRows","_reactExports$useStat50","_reactExports$useStat52","editModalOpen","_reactExports$useStat54","addModalOpen","setAddModalOpen","_window$relicsGrid","conditions","filterType","operator","_step44","_iterator44","substatFilter","flatMap","setFilterModel","headerClass","filterParams","maxNumConditions","onCellDoubleClickedListener","updatedRelic","forceCharacterTabUpdate","onCellDoubleClicked","StatText","_templateObject8","parentH","parentW","innerW","lcParentH","lcParentW","lcInnerW","lcInnerH","middleColumnWidth","CharacterPreview","displayRelics","scoringResults","finalStats","isScorer","outline","relicsArray","_character$equipped","_character$equipped2","_character$equipped3","_character$equipped4","_character$equipped5","_character$equipped6","lightConeName","lightConeSrc","characterName","characterPath","characterElement","elementalDmgValue","Physical","Fire","Ice","Thunder","Wind","Quantum","Imaginary","StatRow","Rarity","imageCenter","onLoad","fontWeight","ellipsis","cellImageRenderer","characterIconSrc","maxWidth","cellRankRenderer","cellNameRenderer","equippedNumber","textWrap","CharacterTab","_React$useState2","characterRows","rowDrag","rowDragManaged","cellDoubleClickedListener","drag","dragged","node","onRowDragEnd","overIndex","onRowDragLeave","vDirection","getRowNodeId","deltaRowDataMode","_window$relicsGrid2","ComingSoonTab","RelicScorerTab","_reactExports$useStat56","_reactExports$useStat58","availableCharacters","setAvailableCharacters","scorerForm","CharacterPreviewSelection","_reactExports$useStat60","forceRelicScorerTabUpdate","availableCharacter","_importClicked","_callee4","_context4","Segmented","selected","class","initialId","savedId","method","fetch","response","ok","Error","status","detailInfo","avatarDetailList","findIndex","converted","catch","Input","htmlType","GettingStartedTab","screenshotStyle","border","dividerStyle","titleStyle","textDecoration","sampleSave","BetaTab","TitleDivider","_templateObject9","_templateObject10","PStyled","_templateObject11","ScoringModal","scoringAlgorithmForm","_reactExports$useStat62","isScoringModalOpen","getScoringValuesForDisplay","_i55","_Object$entries6","selectWidth","StatValueRow","onModalOk","handleCancel","previewSrc","methodologyCollapse","displayScoringMetadata","_i56","_Object$values7","nullUndefinedToZero","_option$label4","Collapse","ghost","defaultError","optimizerActive","charactersActive","relicsActive","importActive","gettingStartedActive","scorerActive","comingSoonActive","betaActive","optimizerDisplay","ErrorBoundary","fallback","charactersDisplay","relicsDisplay","importDisplay","gettingStartedDisplay","scorerDisplay","comingSoonDisplay","betaDisplay","_Layout","Layout","Header","Sider","Content","App","_staticMethods$useNot2","notification","useNotification","notificationApi","notificationContextHolder","_staticMethods$1$useM2","useMessage","messageContextHolder","colorBgBase","handleColor","handleActiveColor","trackBg","trackHoverBg","dotBorderColor","railHoverBg","railBg","handleLineWidth","handleLineWidthHover","handleSizeHover","paddingInlineSM","algorithm","darkAlgorithm","hasSider","DataParser","_i57","_Object$entries7","_Object$entries7$_i","parseBaseStatsByLevel","characterPromotions","ranks","skills","skill_trees","lightConeSuperimpositions","_i58","_Object$entries8","_Object$entries8$_i","parseBaseLightConeStatsByLevel","lightConePromotions","_stats","_stats2","_stats3","_stats4","_stats5","_stats6","_stats7","_stats8","_stats9","_stats10","_stats11","_stats12","_stats13","_stats14","_stats15","_stats16","_stats17","_stats18","_stats19","_stats20","_stats21","_stats22","_stats23","_stats24","_stats25","_stats26","_stats27","_stats28","_stats29","_stats30","_stats31","_stats32","_stats33","_stats34","_stats35","_stats36","_stats37","_stats38","_stats39","_stats40","_stats41","_stats42","_stats43","_stats44","_stats45","_stats46","_stats47","characterTraces","imageCenters","_i59","_Object$entries9","_Object$entries9$_i","traceData","getDisplayName","nicknames","displayNameMapping","valueIndex","statScaling","addEventListener","ReactDOM","createRoot","getElementById","render"],"mappings":"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IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,GAET,YAAa,CACX,IAAO,GACP,IAAO,GACP,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,GAET,mBAAoB,CAClB,EAAK,GACL,IAAO,GACP,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,GAET,cAAe,CACb,EAAK,GACL,IAAO,GACP,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,GAET,gBAAiB,CACf,IAAO,GACP,IAAO,GACP,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IAGX,EAAK,CACHT,GAAM,CACJ,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,GAETV,IAAO,CACL,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,GAERK,IAAO,CACL,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,GAERuV,IAAO,CACL,IAAO,GACP,IAAO,GACP,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IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,GAETV,IAAO,CACL,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,IAAO,IACP,IAAO,IACP,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,GAETK,IAAO,CACL,GAAM,GACN,GAAM,GACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,EACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,IAAO,IACP,IAAO,IACP,IAAO,EACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,GAETuV,IAAO,CACL,IAAO,GACP,IAAO,GACP,IAAO,EACP,IAAO,IACP,IAAO,I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"}